.TH "apollo::drivers::DelphiESR" 3 "Sun Sep 3 2023" "Version 8.0" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
apollo::drivers::DelphiESR
.SH SYNOPSIS
.br
.PP
.PP
Inherits PROTOBUF_NAMESPACE_ID::Message\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fB_Internal\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum : int { \fBkEsrTrackmotionpower540FieldNumber\fP = 7, \fBkEsrTrack01500FieldNumber\fP = 9, \fBkHeaderFieldNumber\fP = 1, \fBkEsrStatus95E8FieldNumber\fP = 2, \fBkEsrStatus65E5FieldNumber\fP = 3, \fBkEsrStatus55E4FieldNumber\fP = 4, \fBkEsrStatus34E2FieldNumber\fP = 5, \fBkEsrStatus44E3FieldNumber\fP = 6, \fBkAcmInstReq7E0FieldNumber\fP = 8, \fBkEsrValid15D0FieldNumber\fP = 10, \fBkEsrValid25D1FieldNumber\fP = 11, \fBkAcmInstResp7E4FieldNumber\fP = 12, \fBkVehicle24F1FieldNumber\fP = 13, \fBkVehicle14F0FieldNumber\fP = 14, \fBkEsrSim15C0FieldNumber\fP = 15, \fBkEsrStatus14E0FieldNumber\fP = 16, \fBkEsrStatus24E1FieldNumber\fP = 17, \fBkEsrStatus85E7FieldNumber\fP = 18, \fBkEsrStatus75E6FieldNumber\fP = 19, \fBkVehicle35F2FieldNumber\fP = 20, \fBkVehicle45F3FieldNumber\fP = 21, \fBkVehicle55F4FieldNumber\fP = 22, \fBkVehicle65F5FieldNumber\fP = 23 }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "constexpr \fBDelphiESR\fP (::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)"
.br
.ti -1c
.RI "\fBDelphiESR\fP (const \fBDelphiESR\fP &from)"
.br
.ti -1c
.RI "\fBDelphiESR\fP (\fBDelphiESR\fP &&from) noexcept"
.br
.ti -1c
.RI "\fBDelphiESR\fP & \fBoperator=\fP (const \fBDelphiESR\fP &from)"
.br
.ti -1c
.RI "\fBDelphiESR\fP & \fBoperator=\fP (\fBDelphiESR\fP &&from) noexcept"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet & \fBunknown_fields\fP () const"
.br
.ti -1c
.RI "inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet * \fBmutable_unknown_fields\fP ()"
.br
.ti -1c
.RI "void \fBSwap\fP (\fBDelphiESR\fP *other)"
.br
.ti -1c
.RI "void \fBUnsafeArenaSwap\fP (\fBDelphiESR\fP *other)"
.br
.ti -1c
.RI "\fBDelphiESR\fP * \fBNew\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena=nullptr) const final"
.br
.ti -1c
.RI "void \fBCopyFrom\fP (const \fBDelphiESR\fP &from)"
.br
.ti -1c
.RI "void \fBMergeFrom\fP (const \fBDelphiESR\fP &from)"
.br
.ti -1c
.RI "PROTOBUF_ATTRIBUTE_REINITIALIZES void \fBClear\fP () final"
.br
.ti -1c
.RI "bool \fBIsInitialized\fP () const final"
.br
.ti -1c
.RI "size_t \fBByteSizeLong\fP () const final"
.br
.ti -1c
.RI "const char * \fB_InternalParse\fP (const char *ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext *ctx) final"
.br
.ti -1c
.RI "uint8_t * \fB_InternalSerialize\fP (uint8_t *target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream *stream) const final"
.br
.ti -1c
.RI "int \fBGetCachedSize\fP () const final"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData * \fBGetClassData\fP () const final"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::Metadata \fBGetMetadata\fP () const final"
.br
.ti -1c
.RI "int \fBesr_trackmotionpower_540_size\fP () const"
.br
.ti -1c
.RI "void \fBclear_esr_trackmotionpower_540\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Esr_trackmotionpower_540\fP * \fBmutable_esr_trackmotionpower_540\fP (int index)"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::drivers::Esr_trackmotionpower_540\fP > * \fBmutable_esr_trackmotionpower_540\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Esr_trackmotionpower_540\fP & \fBesr_trackmotionpower_540\fP (int index) const"
.br
.ti -1c
.RI "::\fBapollo::drivers::Esr_trackmotionpower_540\fP * \fBadd_esr_trackmotionpower_540\fP ()"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::drivers::Esr_trackmotionpower_540\fP > & \fBesr_trackmotionpower_540\fP () const"
.br
.ti -1c
.RI "int \fBesr_track01_500_size\fP () const"
.br
.ti -1c
.RI "void \fBclear_esr_track01_500\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Esr_track01_500\fP * \fBmutable_esr_track01_500\fP (int index)"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::drivers::Esr_track01_500\fP > * \fBmutable_esr_track01_500\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Esr_track01_500\fP & \fBesr_track01_500\fP (int index) const"
.br
.ti -1c
.RI "::\fBapollo::drivers::Esr_track01_500\fP * \fBadd_esr_track01_500\fP ()"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::drivers::Esr_track01_500\fP > & \fBesr_track01_500\fP () const"
.br
.ti -1c
.RI "bool \fBhas_header\fP () const"
.br
.ti -1c
.RI "void \fBclear_header\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::common::Header\fP & \fBheader\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::common::Header\fP * \fBrelease_header\fP ()"
.br
.ti -1c
.RI "::\fBapollo::common::Header\fP * \fBmutable_header\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_header\fP (::\fBapollo::common::Header\fP *header)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_header\fP (::\fBapollo::common::Header\fP *header)"
.br
.ti -1c
.RI "::\fBapollo::common::Header\fP * \fBunsafe_arena_release_header\fP ()"
.br
.ti -1c
.RI "bool \fBhas_esr_status9_5e8\fP () const"
.br
.ti -1c
.RI "void \fBclear_esr_status9_5e8\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Esr_status9_5e8\fP & \fBesr_status9_5e8\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::drivers::Esr_status9_5e8\fP * \fBrelease_esr_status9_5e8\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Esr_status9_5e8\fP * \fBmutable_esr_status9_5e8\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_esr_status9_5e8\fP (::\fBapollo::drivers::Esr_status9_5e8\fP *esr_status9_5e8)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_esr_status9_5e8\fP (::\fBapollo::drivers::Esr_status9_5e8\fP *esr_status9_5e8)"
.br
.ti -1c
.RI "::\fBapollo::drivers::Esr_status9_5e8\fP * \fBunsafe_arena_release_esr_status9_5e8\fP ()"
.br
.ti -1c
.RI "bool \fBhas_esr_status6_5e5\fP () const"
.br
.ti -1c
.RI "void \fBclear_esr_status6_5e5\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Esr_status6_5e5\fP & \fBesr_status6_5e5\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::drivers::Esr_status6_5e5\fP * \fBrelease_esr_status6_5e5\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Esr_status6_5e5\fP * \fBmutable_esr_status6_5e5\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_esr_status6_5e5\fP (::\fBapollo::drivers::Esr_status6_5e5\fP *esr_status6_5e5)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_esr_status6_5e5\fP (::\fBapollo::drivers::Esr_status6_5e5\fP *esr_status6_5e5)"
.br
.ti -1c
.RI "::\fBapollo::drivers::Esr_status6_5e5\fP * \fBunsafe_arena_release_esr_status6_5e5\fP ()"
.br
.ti -1c
.RI "bool \fBhas_esr_status5_5e4\fP () const"
.br
.ti -1c
.RI "void \fBclear_esr_status5_5e4\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Esr_status5_5e4\fP & \fBesr_status5_5e4\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::drivers::Esr_status5_5e4\fP * \fBrelease_esr_status5_5e4\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Esr_status5_5e4\fP * \fBmutable_esr_status5_5e4\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_esr_status5_5e4\fP (::\fBapollo::drivers::Esr_status5_5e4\fP *esr_status5_5e4)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_esr_status5_5e4\fP (::\fBapollo::drivers::Esr_status5_5e4\fP *esr_status5_5e4)"
.br
.ti -1c
.RI "::\fBapollo::drivers::Esr_status5_5e4\fP * \fBunsafe_arena_release_esr_status5_5e4\fP ()"
.br
.ti -1c
.RI "bool \fBhas_esr_status3_4e2\fP () const"
.br
.ti -1c
.RI "void \fBclear_esr_status3_4e2\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Esr_status3_4e2\fP & \fBesr_status3_4e2\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::drivers::Esr_status3_4e2\fP * \fBrelease_esr_status3_4e2\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Esr_status3_4e2\fP * \fBmutable_esr_status3_4e2\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_esr_status3_4e2\fP (::\fBapollo::drivers::Esr_status3_4e2\fP *esr_status3_4e2)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_esr_status3_4e2\fP (::\fBapollo::drivers::Esr_status3_4e2\fP *esr_status3_4e2)"
.br
.ti -1c
.RI "::\fBapollo::drivers::Esr_status3_4e2\fP * \fBunsafe_arena_release_esr_status3_4e2\fP ()"
.br
.ti -1c
.RI "bool \fBhas_esr_status4_4e3\fP () const"
.br
.ti -1c
.RI "void \fBclear_esr_status4_4e3\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Esr_status4_4e3\fP & \fBesr_status4_4e3\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::drivers::Esr_status4_4e3\fP * \fBrelease_esr_status4_4e3\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Esr_status4_4e3\fP * \fBmutable_esr_status4_4e3\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_esr_status4_4e3\fP (::\fBapollo::drivers::Esr_status4_4e3\fP *esr_status4_4e3)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_esr_status4_4e3\fP (::\fBapollo::drivers::Esr_status4_4e3\fP *esr_status4_4e3)"
.br
.ti -1c
.RI "::\fBapollo::drivers::Esr_status4_4e3\fP * \fBunsafe_arena_release_esr_status4_4e3\fP ()"
.br
.ti -1c
.RI "bool \fBhas_acm_inst_req_7e0\fP () const"
.br
.ti -1c
.RI "void \fBclear_acm_inst_req_7e0\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Acm_inst_req_7e0\fP & \fBacm_inst_req_7e0\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::drivers::Acm_inst_req_7e0\fP * \fBrelease_acm_inst_req_7e0\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Acm_inst_req_7e0\fP * \fBmutable_acm_inst_req_7e0\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_acm_inst_req_7e0\fP (::\fBapollo::drivers::Acm_inst_req_7e0\fP *acm_inst_req_7e0)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_acm_inst_req_7e0\fP (::\fBapollo::drivers::Acm_inst_req_7e0\fP *acm_inst_req_7e0)"
.br
.ti -1c
.RI "::\fBapollo::drivers::Acm_inst_req_7e0\fP * \fBunsafe_arena_release_acm_inst_req_7e0\fP ()"
.br
.ti -1c
.RI "bool \fBhas_esr_valid1_5d0\fP () const"
.br
.ti -1c
.RI "void \fBclear_esr_valid1_5d0\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Esr_valid1_5d0\fP & \fBesr_valid1_5d0\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::drivers::Esr_valid1_5d0\fP * \fBrelease_esr_valid1_5d0\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Esr_valid1_5d0\fP * \fBmutable_esr_valid1_5d0\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_esr_valid1_5d0\fP (::\fBapollo::drivers::Esr_valid1_5d0\fP *esr_valid1_5d0)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_esr_valid1_5d0\fP (::\fBapollo::drivers::Esr_valid1_5d0\fP *esr_valid1_5d0)"
.br
.ti -1c
.RI "::\fBapollo::drivers::Esr_valid1_5d0\fP * \fBunsafe_arena_release_esr_valid1_5d0\fP ()"
.br
.ti -1c
.RI "bool \fBhas_esr_valid2_5d1\fP () const"
.br
.ti -1c
.RI "void \fBclear_esr_valid2_5d1\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Esr_valid2_5d1\fP & \fBesr_valid2_5d1\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::drivers::Esr_valid2_5d1\fP * \fBrelease_esr_valid2_5d1\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Esr_valid2_5d1\fP * \fBmutable_esr_valid2_5d1\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_esr_valid2_5d1\fP (::\fBapollo::drivers::Esr_valid2_5d1\fP *esr_valid2_5d1)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_esr_valid2_5d1\fP (::\fBapollo::drivers::Esr_valid2_5d1\fP *esr_valid2_5d1)"
.br
.ti -1c
.RI "::\fBapollo::drivers::Esr_valid2_5d1\fP * \fBunsafe_arena_release_esr_valid2_5d1\fP ()"
.br
.ti -1c
.RI "bool \fBhas_acm_inst_resp_7e4\fP () const"
.br
.ti -1c
.RI "void \fBclear_acm_inst_resp_7e4\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Acm_inst_resp_7e4\fP & \fBacm_inst_resp_7e4\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::drivers::Acm_inst_resp_7e4\fP * \fBrelease_acm_inst_resp_7e4\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Acm_inst_resp_7e4\fP * \fBmutable_acm_inst_resp_7e4\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_acm_inst_resp_7e4\fP (::\fBapollo::drivers::Acm_inst_resp_7e4\fP *acm_inst_resp_7e4)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_acm_inst_resp_7e4\fP (::\fBapollo::drivers::Acm_inst_resp_7e4\fP *acm_inst_resp_7e4)"
.br
.ti -1c
.RI "::\fBapollo::drivers::Acm_inst_resp_7e4\fP * \fBunsafe_arena_release_acm_inst_resp_7e4\fP ()"
.br
.ti -1c
.RI "bool \fBhas_vehicle2_4f1\fP () const"
.br
.ti -1c
.RI "void \fBclear_vehicle2_4f1\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Vehicle2_4f1\fP & \fBvehicle2_4f1\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::drivers::Vehicle2_4f1\fP * \fBrelease_vehicle2_4f1\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Vehicle2_4f1\fP * \fBmutable_vehicle2_4f1\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_vehicle2_4f1\fP (::\fBapollo::drivers::Vehicle2_4f1\fP *vehicle2_4f1)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_vehicle2_4f1\fP (::\fBapollo::drivers::Vehicle2_4f1\fP *vehicle2_4f1)"
.br
.ti -1c
.RI "::\fBapollo::drivers::Vehicle2_4f1\fP * \fBunsafe_arena_release_vehicle2_4f1\fP ()"
.br
.ti -1c
.RI "bool \fBhas_vehicle1_4f0\fP () const"
.br
.ti -1c
.RI "void \fBclear_vehicle1_4f0\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Vehicle1_4f0\fP & \fBvehicle1_4f0\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::drivers::Vehicle1_4f0\fP * \fBrelease_vehicle1_4f0\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Vehicle1_4f0\fP * \fBmutable_vehicle1_4f0\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_vehicle1_4f0\fP (::\fBapollo::drivers::Vehicle1_4f0\fP *vehicle1_4f0)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_vehicle1_4f0\fP (::\fBapollo::drivers::Vehicle1_4f0\fP *vehicle1_4f0)"
.br
.ti -1c
.RI "::\fBapollo::drivers::Vehicle1_4f0\fP * \fBunsafe_arena_release_vehicle1_4f0\fP ()"
.br
.ti -1c
.RI "bool \fBhas_esr_sim1_5c0\fP () const"
.br
.ti -1c
.RI "void \fBclear_esr_sim1_5c0\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Esr_sim1_5c0\fP & \fBesr_sim1_5c0\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::drivers::Esr_sim1_5c0\fP * \fBrelease_esr_sim1_5c0\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Esr_sim1_5c0\fP * \fBmutable_esr_sim1_5c0\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_esr_sim1_5c0\fP (::\fBapollo::drivers::Esr_sim1_5c0\fP *esr_sim1_5c0)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_esr_sim1_5c0\fP (::\fBapollo::drivers::Esr_sim1_5c0\fP *esr_sim1_5c0)"
.br
.ti -1c
.RI "::\fBapollo::drivers::Esr_sim1_5c0\fP * \fBunsafe_arena_release_esr_sim1_5c0\fP ()"
.br
.ti -1c
.RI "bool \fBhas_esr_status1_4e0\fP () const"
.br
.ti -1c
.RI "void \fBclear_esr_status1_4e0\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Esr_status1_4e0\fP & \fBesr_status1_4e0\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::drivers::Esr_status1_4e0\fP * \fBrelease_esr_status1_4e0\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Esr_status1_4e0\fP * \fBmutable_esr_status1_4e0\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_esr_status1_4e0\fP (::\fBapollo::drivers::Esr_status1_4e0\fP *esr_status1_4e0)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_esr_status1_4e0\fP (::\fBapollo::drivers::Esr_status1_4e0\fP *esr_status1_4e0)"
.br
.ti -1c
.RI "::\fBapollo::drivers::Esr_status1_4e0\fP * \fBunsafe_arena_release_esr_status1_4e0\fP ()"
.br
.ti -1c
.RI "bool \fBhas_esr_status2_4e1\fP () const"
.br
.ti -1c
.RI "void \fBclear_esr_status2_4e1\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Esr_status2_4e1\fP & \fBesr_status2_4e1\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::drivers::Esr_status2_4e1\fP * \fBrelease_esr_status2_4e1\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Esr_status2_4e1\fP * \fBmutable_esr_status2_4e1\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_esr_status2_4e1\fP (::\fBapollo::drivers::Esr_status2_4e1\fP *esr_status2_4e1)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_esr_status2_4e1\fP (::\fBapollo::drivers::Esr_status2_4e1\fP *esr_status2_4e1)"
.br
.ti -1c
.RI "::\fBapollo::drivers::Esr_status2_4e1\fP * \fBunsafe_arena_release_esr_status2_4e1\fP ()"
.br
.ti -1c
.RI "bool \fBhas_esr_status8_5e7\fP () const"
.br
.ti -1c
.RI "void \fBclear_esr_status8_5e7\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Esr_status8_5e7\fP & \fBesr_status8_5e7\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::drivers::Esr_status8_5e7\fP * \fBrelease_esr_status8_5e7\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Esr_status8_5e7\fP * \fBmutable_esr_status8_5e7\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_esr_status8_5e7\fP (::\fBapollo::drivers::Esr_status8_5e7\fP *esr_status8_5e7)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_esr_status8_5e7\fP (::\fBapollo::drivers::Esr_status8_5e7\fP *esr_status8_5e7)"
.br
.ti -1c
.RI "::\fBapollo::drivers::Esr_status8_5e7\fP * \fBunsafe_arena_release_esr_status8_5e7\fP ()"
.br
.ti -1c
.RI "bool \fBhas_esr_status7_5e6\fP () const"
.br
.ti -1c
.RI "void \fBclear_esr_status7_5e6\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Esr_status7_5e6\fP & \fBesr_status7_5e6\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::drivers::Esr_status7_5e6\fP * \fBrelease_esr_status7_5e6\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Esr_status7_5e6\fP * \fBmutable_esr_status7_5e6\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_esr_status7_5e6\fP (::\fBapollo::drivers::Esr_status7_5e6\fP *esr_status7_5e6)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_esr_status7_5e6\fP (::\fBapollo::drivers::Esr_status7_5e6\fP *esr_status7_5e6)"
.br
.ti -1c
.RI "::\fBapollo::drivers::Esr_status7_5e6\fP * \fBunsafe_arena_release_esr_status7_5e6\fP ()"
.br
.ti -1c
.RI "bool \fBhas_vehicle3_5f2\fP () const"
.br
.ti -1c
.RI "void \fBclear_vehicle3_5f2\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Vehicle3_5f2\fP & \fBvehicle3_5f2\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::drivers::Vehicle3_5f2\fP * \fBrelease_vehicle3_5f2\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Vehicle3_5f2\fP * \fBmutable_vehicle3_5f2\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_vehicle3_5f2\fP (::\fBapollo::drivers::Vehicle3_5f2\fP *vehicle3_5f2)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_vehicle3_5f2\fP (::\fBapollo::drivers::Vehicle3_5f2\fP *vehicle3_5f2)"
.br
.ti -1c
.RI "::\fBapollo::drivers::Vehicle3_5f2\fP * \fBunsafe_arena_release_vehicle3_5f2\fP ()"
.br
.ti -1c
.RI "bool \fBhas_vehicle4_5f3\fP () const"
.br
.ti -1c
.RI "void \fBclear_vehicle4_5f3\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Vehicle4_5f3\fP & \fBvehicle4_5f3\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::drivers::Vehicle4_5f3\fP * \fBrelease_vehicle4_5f3\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Vehicle4_5f3\fP * \fBmutable_vehicle4_5f3\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_vehicle4_5f3\fP (::\fBapollo::drivers::Vehicle4_5f3\fP *vehicle4_5f3)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_vehicle4_5f3\fP (::\fBapollo::drivers::Vehicle4_5f3\fP *vehicle4_5f3)"
.br
.ti -1c
.RI "::\fBapollo::drivers::Vehicle4_5f3\fP * \fBunsafe_arena_release_vehicle4_5f3\fP ()"
.br
.ti -1c
.RI "bool \fBhas_vehicle5_5f4\fP () const"
.br
.ti -1c
.RI "void \fBclear_vehicle5_5f4\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Vehicle5_5f4\fP & \fBvehicle5_5f4\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::drivers::Vehicle5_5f4\fP * \fBrelease_vehicle5_5f4\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Vehicle5_5f4\fP * \fBmutable_vehicle5_5f4\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_vehicle5_5f4\fP (::\fBapollo::drivers::Vehicle5_5f4\fP *vehicle5_5f4)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_vehicle5_5f4\fP (::\fBapollo::drivers::Vehicle5_5f4\fP *vehicle5_5f4)"
.br
.ti -1c
.RI "::\fBapollo::drivers::Vehicle5_5f4\fP * \fBunsafe_arena_release_vehicle5_5f4\fP ()"
.br
.ti -1c
.RI "bool \fBhas_vehicle6_5f5\fP () const"
.br
.ti -1c
.RI "void \fBclear_vehicle6_5f5\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Vehicle6_5f5\fP & \fBvehicle6_5f5\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::drivers::Vehicle6_5f5\fP * \fBrelease_vehicle6_5f5\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Vehicle6_5f5\fP * \fBmutable_vehicle6_5f5\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_vehicle6_5f5\fP (::\fBapollo::drivers::Vehicle6_5f5\fP *vehicle6_5f5)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_vehicle6_5f5\fP (::\fBapollo::drivers::Vehicle6_5f5\fP *vehicle6_5f5)"
.br
.ti -1c
.RI "::\fBapollo::drivers::Vehicle6_5f5\fP * \fBunsafe_arena_release_vehicle6_5f5\fP ()"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBdescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBGetDescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Reflection * \fBGetReflection\fP ()"
.br
.ti -1c
.RI "static const \fBDelphiESR\fP & \fBdefault_instance\fP ()"
.br
.ti -1c
.RI "static const \fBDelphiESR\fP * \fBinternal_default_instance\fP ()"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr int \fBkIndexInFileMessages\fP"
.br
.ti -1c
.RI "static const ClassData \fB_class_data_\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBDelphiESR\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena, bool is_message_owned=false)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fB::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata\fP"
.br
.ti -1c
.RI "template<typename T > class \fB::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper\fP"
.br
.ti -1c
.RI "struct \fB::TableStruct_modules_2fcommon_5fmsgs_2fsensor_5fmsgs_2fdelphi_5fesr_2eproto\fP"
.br
.ti -1c
.RI "void \fBswap\fP (\fBDelphiESR\fP &a, \fBDelphiESR\fP &b)"
.br
.in -1c
.SH "Member Data Documentation"
.PP 
.SS "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData apollo::drivers::DelphiESR::_class_data_\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DelphiESR::MergeImpl
}
.fi
.SS "constexpr int apollo::drivers::DelphiESR::kIndexInFileMessages\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    23
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Cyber-Cmake from the source code\&.
