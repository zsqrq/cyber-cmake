.TH "eprosima::fastrtps::SubscriberHistory" 3 "Sun Sep 3 2023" "Version 8.0" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
eprosima::fastrtps::SubscriberHistory
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <SubscriberHistory\&.h>\fP
.PP
Inherits \fBeprosima::fastrtps::rtps::ReaderHistory\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef std::pair< \fBInstanceHandle_t\fP, std::vector< \fBCacheChange_t\fP * > > \fBt_p_I_Change\fP"
.br
.ti -1c
.RI "typedef std::vector< t_p_I_Change > \fBt_v_Inst_Caches\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSubscriberHistory\fP (SubscriberImpl *pimpl, uint32_t payloadMax, \fBHistoryQosPolicy\fP &history, \fBResourceLimitsQosPolicy\fP &resource, \fBMemoryManagementPolicy_t\fP mempolicy)"
.br
.ti -1c
.RI "bool \fBreceived_change\fP (\fBCacheChange_t\fP *change, size_t unknown_missing_changes_up_to)"
.br
.ti -1c
.RI "bool \fBisUnreadCache\fP ()"
.br
.ti -1c
.RI "bool \fBremove_change_sub\fP (\fBCacheChange_t\fP *change, t_v_Inst_Caches::iterator *vit=nullptr)"
.br
.ti -1c
.RI "void \fBincreaseUnreadCount\fP ()"
.br
.RI "Increase the unread count\&. "
.ti -1c
.RI "void \fBdecreaseUnreadCount\fP ()"
.br
.RI "Decrease the unread count\&. "
.ti -1c
.RI "uint64_t \fBgetUnreadCount\fP ()"
.br
.in -1c
.PP
.RI "\fBRead or take data methods\&.\fP"
.br
Methods to read or take data from the History\&. 
.PP
\fBParameters\fP
.RS 4
\fIdata\fP Pointer to the object where you want to read or take the information\&. 
.br
\fIinfo\fP Pointer to a \fBSampleInfo_t\fP object where you want to store the information about the retrieved data 
.RE
.PP

.PP
.in +1c
.in +1c
.ti -1c
.RI "bool \fBreadNextData\fP (void *data, \fBSampleInfo_t\fP *info)"
.br
.ti -1c
.RI "bool \fBtakeNextData\fP (void *data, \fBSampleInfo_t\fP *info)"
.br
.in -1c
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Class \fBSubscriberHistory\fP, container of the different CacheChanges of a subscriber 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "eprosima::fastrtps::SubscriberHistory::SubscriberHistory (SubscriberImpl * pimpl, uint32_t payloadMax, \fBHistoryQosPolicy\fP & history, \fBResourceLimitsQosPolicy\fP & resource, \fBMemoryManagementPolicy_t\fP mempolicy)"
Constructor\&. Requires information about the subscriner 
.PP
\fBParameters\fP
.RS 4
\fIpimpl\fP Pointer to the subscriber implementation 
.br
\fIpayloadMax\fP Maximum payload size per change 
.br
\fIhistory\fP History QoS policy for the reader 
.br
\fIresource\fP Resource Limit QoS policy for the reader 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "uint64_t eprosima::fastrtps::SubscriberHistory::getUnreadCount ()\fC [inline]\fP"
Get the unread count\&. 
.PP
\fBReturns\fP
.RS 4
Unread count 
.RE
.PP

.SS "bool eprosima::fastrtps::SubscriberHistory::isUnreadCache ()"
Method to know whether there are unread CacheChange_t\&. 
.PP
\fBReturns\fP
.RS 4
True if there are any unread changes\&. 
.RE
.PP

.SS "bool eprosima::fastrtps::SubscriberHistory::received_change (\fBCacheChange_t\fP * change, size_t unknown_missing_changes_up_to)\fC [virtual]\fP"
Called when a change is received by the \fBSubscriber\fP History\&. Will add the change to the history if it wasn't already present 
.PP
\fBParameters\fP
.RS 4
\fIchange\fP The received change 
.br
\fIunknown_missing_changes_up_to\fP Number of missing changes before this one 
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.PP
Reimplemented from \fBeprosima::fastrtps::rtps::ReaderHistory\fP\&.
.SS "bool eprosima::fastrtps::SubscriberHistory::remove_change_sub (\fBCacheChange_t\fP * change, t_v_Inst_Caches::iterator * vit = \fCnullptr\fP)"
This method is called to remove a change from the \fBSubscriberHistory\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fIchange\fP Pointer to the CacheChange_t\&. 
.br
\fIvit\fP Pointer to the iterator of the key-ordered cacheChange vector\&. 
.RE
.PP
\fBReturns\fP
.RS 4
True if removed\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Cyber-Cmake from the source code\&.
