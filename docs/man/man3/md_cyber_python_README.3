.TH "md_cyber_python_README" 3 "Thu Aug 31 2023" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_cyber_python_README \- Cyber RT Python API : An Example 
This document is an example demonstrating how to use Cyber RT Python API to write your own Python3 programs\&. Please make sure you have built Apollo successfully\&.
.SH "Step 1: Write your own code\&."
.PP
Save it as, say, \fCpath/to/my_demo\&.py\fP\&.
.PP
.PP
.nf
#!/usr/bin/env python3

import sys

from cyber\&.python\&.cyber_py3 import cyber


cyber\&.init()

if not cyber\&.ok():
    print('Well, something went wrong\&.')
    sys\&.exit(1)

# Do your job here\&.
cyber\&.shutdown()
.fi
.PP
.SH "Step 2: Write Python rule for Bazel to build"
.PP
Edit \fCpath/to/BUILD\fP file, add the followng section:
.PP
.PP
.nf
load("@rules_python//python:defs\&.bzl", "py_binary")

# blablahblah\&.\&.\&.

# Add your own section here
py_binary(
    name = "my_demo",
    srcs = ["my_demo\&.py"],
    deps = [
        "//cyber/python/cyber_py3:cyber",
    ],
)
.fi
.PP
.PP
\fBNote\fP: Like C++, Python code is also managed by Bazel starting from Apollo 6\&.0\&. Please refer to \&.\&./\&.\&./docs/howto/how_to_build_and_run_python_app\&.md 'How to Build and Run Python Apps in Apollo' for more on that\&.
.SH "Step 3: Build and run the demo program"
.PP
Now you can run the following commands to build and run the demo program\&.
.PP
.PP
.nf
bazel build //path/to:my_demo
\&./bazel-bin/path/to/my_demo
.fi
.PP
.PP
Or simply run
.PP
.PP
.nf
bazel run //path/to:my_demo
.fi
.PP
.SH "More Examples \&.\&.\&."
.PP
Learn more Cyber RT Python examples under the \fCexamples\fP and \fCtests\fP directory\&. 
