.TH "apollo::canbus::Turn_rpt_64" 3 "Sun Sep 3 2023" "Version 8.0" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
apollo::canbus::Turn_rpt_64
.SH SYNOPSIS
.br
.PP
.PP
Inherits PROTOBUF_NAMESPACE_ID::Message\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fB_Internal\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum : int { \fBkManualInputFieldNumber\fP = 1, \fBkCommandedValueFieldNumber\fP = 2, \fBkOutputValueFieldNumber\fP = 3 }"
.br
.ti -1c
.RI "typedef Turn_rpt_64_Manual_inputType \fBManual_inputType\fP"
.br
.ti -1c
.RI "typedef Turn_rpt_64_Commanded_valueType \fBCommanded_valueType\fP"
.br
.ti -1c
.RI "typedef Turn_rpt_64_Output_valueType \fBOutput_valueType\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "constexpr \fBTurn_rpt_64\fP (::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)"
.br
.ti -1c
.RI "\fBTurn_rpt_64\fP (const \fBTurn_rpt_64\fP &from)"
.br
.ti -1c
.RI "\fBTurn_rpt_64\fP (\fBTurn_rpt_64\fP &&from) noexcept"
.br
.ti -1c
.RI "\fBTurn_rpt_64\fP & \fBoperator=\fP (const \fBTurn_rpt_64\fP &from)"
.br
.ti -1c
.RI "\fBTurn_rpt_64\fP & \fBoperator=\fP (\fBTurn_rpt_64\fP &&from) noexcept"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet & \fBunknown_fields\fP () const"
.br
.ti -1c
.RI "inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet * \fBmutable_unknown_fields\fP ()"
.br
.ti -1c
.RI "void \fBSwap\fP (\fBTurn_rpt_64\fP *other)"
.br
.ti -1c
.RI "void \fBUnsafeArenaSwap\fP (\fBTurn_rpt_64\fP *other)"
.br
.ti -1c
.RI "\fBTurn_rpt_64\fP * \fBNew\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena=nullptr) const final"
.br
.ti -1c
.RI "void \fBCopyFrom\fP (const \fBTurn_rpt_64\fP &from)"
.br
.ti -1c
.RI "void \fBMergeFrom\fP (const \fBTurn_rpt_64\fP &from)"
.br
.ti -1c
.RI "PROTOBUF_ATTRIBUTE_REINITIALIZES void \fBClear\fP () final"
.br
.ti -1c
.RI "bool \fBIsInitialized\fP () const final"
.br
.ti -1c
.RI "size_t \fBByteSizeLong\fP () const final"
.br
.ti -1c
.RI "const char * \fB_InternalParse\fP (const char *ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext *ctx) final"
.br
.ti -1c
.RI "uint8_t * \fB_InternalSerialize\fP (uint8_t *target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream *stream) const final"
.br
.ti -1c
.RI "int \fBGetCachedSize\fP () const final"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData * \fBGetClassData\fP () const final"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::Metadata \fBGetMetadata\fP () const final"
.br
.ti -1c
.RI "bool \fBhas_manual_input\fP () const"
.br
.ti -1c
.RI "void \fBclear_manual_input\fP ()"
.br
.ti -1c
.RI "::apollo::canbus::Turn_rpt_64_Manual_inputType \fBmanual_input\fP () const"
.br
.ti -1c
.RI "void \fBset_manual_input\fP (::apollo::canbus::Turn_rpt_64_Manual_inputType value)"
.br
.ti -1c
.RI "bool \fBhas_commanded_value\fP () const"
.br
.ti -1c
.RI "void \fBclear_commanded_value\fP ()"
.br
.ti -1c
.RI "::apollo::canbus::Turn_rpt_64_Commanded_valueType \fBcommanded_value\fP () const"
.br
.ti -1c
.RI "void \fBset_commanded_value\fP (::apollo::canbus::Turn_rpt_64_Commanded_valueType value)"
.br
.ti -1c
.RI "bool \fBhas_output_value\fP () const"
.br
.ti -1c
.RI "void \fBclear_output_value\fP ()"
.br
.ti -1c
.RI "::apollo::canbus::Turn_rpt_64_Output_valueType \fBoutput_value\fP () const"
.br
.ti -1c
.RI "void \fBset_output_value\fP (::apollo::canbus::Turn_rpt_64_Output_valueType value)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBdescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBGetDescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Reflection * \fBGetReflection\fP ()"
.br
.ti -1c
.RI "static const \fBTurn_rpt_64\fP & \fBdefault_instance\fP ()"
.br
.ti -1c
.RI "static const \fBTurn_rpt_64\fP * \fBinternal_default_instance\fP ()"
.br
.ti -1c
.RI "static bool \fBManual_inputType_IsValid\fP (int value)"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor * \fBManual_inputType_descriptor\fP ()"
.br
.ti -1c
.RI "template<typename T > static const std::string & \fBManual_inputType_Name\fP (T enum_t_value)"
.br
.ti -1c
.RI "static bool \fBManual_inputType_Parse\fP (::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Manual_inputType *value)"
.br
.ti -1c
.RI "static bool \fBCommanded_valueType_IsValid\fP (int value)"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor * \fBCommanded_valueType_descriptor\fP ()"
.br
.ti -1c
.RI "template<typename T > static const std::string & \fBCommanded_valueType_Name\fP (T enum_t_value)"
.br
.ti -1c
.RI "static bool \fBCommanded_valueType_Parse\fP (::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Commanded_valueType *value)"
.br
.ti -1c
.RI "static bool \fBOutput_valueType_IsValid\fP (int value)"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor * \fBOutput_valueType_descriptor\fP ()"
.br
.ti -1c
.RI "template<typename T > static const std::string & \fBOutput_valueType_Name\fP (T enum_t_value)"
.br
.ti -1c
.RI "static bool \fBOutput_valueType_Parse\fP (::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Output_valueType *value)"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr int \fBkIndexInFileMessages\fP"
.br
.ti -1c
.RI "static const ClassData \fB_class_data_\fP"
.br
.ti -1c
.RI "static constexpr Manual_inputType \fBMANUAL_INPUT_RIGHT\fP"
.br
.ti -1c
.RI "static constexpr Manual_inputType \fBMANUAL_INPUT_NONE\fP"
.br
.ti -1c
.RI "static constexpr Manual_inputType \fBMANUAL_INPUT_LEFT\fP"
.br
.ti -1c
.RI "static constexpr Manual_inputType \fBMANUAL_INPUT_HAZARD\fP"
.br
.ti -1c
.RI "static constexpr Manual_inputType \fBManual_inputType_MIN\fP"
.br
.ti -1c
.RI "static constexpr Manual_inputType \fBManual_inputType_MAX\fP"
.br
.ti -1c
.RI "static constexpr int \fBManual_inputType_ARRAYSIZE\fP"
.br
.ti -1c
.RI "static constexpr Commanded_valueType \fBCOMMANDED_VALUE_RIGHT\fP"
.br
.ti -1c
.RI "static constexpr Commanded_valueType \fBCOMMANDED_VALUE_NONE\fP"
.br
.ti -1c
.RI "static constexpr Commanded_valueType \fBCOMMANDED_VALUE_LEFT\fP"
.br
.ti -1c
.RI "static constexpr Commanded_valueType \fBCOMMANDED_VALUE_HAZARD\fP"
.br
.ti -1c
.RI "static constexpr Commanded_valueType \fBCommanded_valueType_MIN\fP"
.br
.ti -1c
.RI "static constexpr Commanded_valueType \fBCommanded_valueType_MAX\fP"
.br
.ti -1c
.RI "static constexpr int \fBCommanded_valueType_ARRAYSIZE\fP"
.br
.ti -1c
.RI "static constexpr Output_valueType \fBOUTPUT_VALUE_RIGHT\fP"
.br
.ti -1c
.RI "static constexpr Output_valueType \fBOUTPUT_VALUE_NONE\fP"
.br
.ti -1c
.RI "static constexpr Output_valueType \fBOUTPUT_VALUE_LEFT\fP"
.br
.ti -1c
.RI "static constexpr Output_valueType \fBOUTPUT_VALUE_HAZARD\fP"
.br
.ti -1c
.RI "static constexpr Output_valueType \fBOutput_valueType_MIN\fP"
.br
.ti -1c
.RI "static constexpr Output_valueType \fBOutput_valueType_MAX\fP"
.br
.ti -1c
.RI "static constexpr int \fBOutput_valueType_ARRAYSIZE\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBTurn_rpt_64\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena, bool is_message_owned=false)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fB::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata\fP"
.br
.ti -1c
.RI "template<typename T > class \fB::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper\fP"
.br
.ti -1c
.RI "struct \fB::TableStruct_modules_2fcommon_5fmsgs_2fchassis_5fmsgs_2fchassis_5fdetail_2eproto\fP"
.br
.ti -1c
.RI "void \fBswap\fP (\fBTurn_rpt_64\fP &a, \fBTurn_rpt_64\fP &b)"
.br
.in -1c
.SH "Member Data Documentation"
.PP 
.SS "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData apollo::canbus::Turn_rpt_64::_class_data_\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Turn_rpt_64::MergeImpl
}
.fi
.SS "constexpr Turn_rpt_64_Commanded_valueType apollo::canbus::Turn_rpt_64::COMMANDED_VALUE_HAZARD\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    Turn_rpt_64_Commanded_valueType_COMMANDED_VALUE_HAZARD
.fi
.SS "constexpr Turn_rpt_64_Commanded_valueType apollo::canbus::Turn_rpt_64::COMMANDED_VALUE_LEFT\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    Turn_rpt_64_Commanded_valueType_COMMANDED_VALUE_LEFT
.fi
.SS "constexpr Turn_rpt_64_Commanded_valueType apollo::canbus::Turn_rpt_64::COMMANDED_VALUE_NONE\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    Turn_rpt_64_Commanded_valueType_COMMANDED_VALUE_NONE
.fi
.SS "constexpr Turn_rpt_64_Commanded_valueType apollo::canbus::Turn_rpt_64::COMMANDED_VALUE_RIGHT\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    Turn_rpt_64_Commanded_valueType_COMMANDED_VALUE_RIGHT
.fi
.SS "constexpr int apollo::canbus::Turn_rpt_64::Commanded_valueType_ARRAYSIZE\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    Turn_rpt_64_Commanded_valueType_Commanded_valueType_ARRAYSIZE
.fi
.SS "constexpr Turn_rpt_64_Commanded_valueType apollo::canbus::Turn_rpt_64::Commanded_valueType_MAX\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    Turn_rpt_64_Commanded_valueType_Commanded_valueType_MAX
.fi
.SS "constexpr Turn_rpt_64_Commanded_valueType apollo::canbus::Turn_rpt_64::Commanded_valueType_MIN\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    Turn_rpt_64_Commanded_valueType_Commanded_valueType_MIN
.fi
.SS "constexpr int apollo::canbus::Turn_rpt_64::kIndexInFileMessages\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    27
.fi
.SS "constexpr Turn_rpt_64_Manual_inputType apollo::canbus::Turn_rpt_64::MANUAL_INPUT_HAZARD\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    Turn_rpt_64_Manual_inputType_MANUAL_INPUT_HAZARD
.fi
.SS "constexpr Turn_rpt_64_Manual_inputType apollo::canbus::Turn_rpt_64::MANUAL_INPUT_LEFT\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    Turn_rpt_64_Manual_inputType_MANUAL_INPUT_LEFT
.fi
.SS "constexpr Turn_rpt_64_Manual_inputType apollo::canbus::Turn_rpt_64::MANUAL_INPUT_NONE\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    Turn_rpt_64_Manual_inputType_MANUAL_INPUT_NONE
.fi
.SS "constexpr Turn_rpt_64_Manual_inputType apollo::canbus::Turn_rpt_64::MANUAL_INPUT_RIGHT\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    Turn_rpt_64_Manual_inputType_MANUAL_INPUT_RIGHT
.fi
.SS "constexpr int apollo::canbus::Turn_rpt_64::Manual_inputType_ARRAYSIZE\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    Turn_rpt_64_Manual_inputType_Manual_inputType_ARRAYSIZE
.fi
.SS "constexpr Turn_rpt_64_Manual_inputType apollo::canbus::Turn_rpt_64::Manual_inputType_MAX\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    Turn_rpt_64_Manual_inputType_Manual_inputType_MAX
.fi
.SS "constexpr Turn_rpt_64_Manual_inputType apollo::canbus::Turn_rpt_64::Manual_inputType_MIN\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    Turn_rpt_64_Manual_inputType_Manual_inputType_MIN
.fi
.SS "constexpr Turn_rpt_64_Output_valueType apollo::canbus::Turn_rpt_64::OUTPUT_VALUE_HAZARD\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    Turn_rpt_64_Output_valueType_OUTPUT_VALUE_HAZARD
.fi
.SS "constexpr Turn_rpt_64_Output_valueType apollo::canbus::Turn_rpt_64::OUTPUT_VALUE_LEFT\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    Turn_rpt_64_Output_valueType_OUTPUT_VALUE_LEFT
.fi
.SS "constexpr Turn_rpt_64_Output_valueType apollo::canbus::Turn_rpt_64::OUTPUT_VALUE_NONE\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    Turn_rpt_64_Output_valueType_OUTPUT_VALUE_NONE
.fi
.SS "constexpr Turn_rpt_64_Output_valueType apollo::canbus::Turn_rpt_64::OUTPUT_VALUE_RIGHT\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    Turn_rpt_64_Output_valueType_OUTPUT_VALUE_RIGHT
.fi
.SS "constexpr int apollo::canbus::Turn_rpt_64::Output_valueType_ARRAYSIZE\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    Turn_rpt_64_Output_valueType_Output_valueType_ARRAYSIZE
.fi
.SS "constexpr Turn_rpt_64_Output_valueType apollo::canbus::Turn_rpt_64::Output_valueType_MAX\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    Turn_rpt_64_Output_valueType_Output_valueType_MAX
.fi
.SS "constexpr Turn_rpt_64_Output_valueType apollo::canbus::Turn_rpt_64::Output_valueType_MIN\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    Turn_rpt_64_Output_valueType_Output_valueType_MIN
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Cyber-Cmake from the source code\&.
