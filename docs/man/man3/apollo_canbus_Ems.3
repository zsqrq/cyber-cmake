.TH "apollo::canbus::Ems" 3 "Sun Sep 3 2023" "Version 8.0" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
apollo::canbus::Ems
.SH SYNOPSIS
.br
.PP
.PP
Inherits PROTOBUF_NAMESPACE_ID::Message\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fB_Internal\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum : int { \fBkMaxEngineTorqPercentFieldNumber\fP = 4, \fBkEngineStateFieldNumber\fP = 3, \fBkIsEngineAccAvailableFieldNumber\fP = 1, \fBkIsEngineAccErrorFieldNumber\fP = 2, \fBkIsEngineSpeedErrorFieldNumber\fP = 7, \fBkIsOverEngineTorqueFieldNumber\fP = 10, \fBkMinEngineTorqPercentFieldNumber\fP = 5, \fBkBaseEngineTorqConstantFieldNumber\fP = 6, \fBkEngineTorqueFieldNumber\fP = 9, \fBkEngineSpeedFieldNumber\fP = 8, \fBkEngineRpmFieldNumber\fP = 11 }"
.br
.ti -1c
.RI "typedef Ems_Type \fBType\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "constexpr \fBEms\fP (::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)"
.br
.ti -1c
.RI "\fBEms\fP (const \fBEms\fP &from)"
.br
.ti -1c
.RI "\fBEms\fP (\fBEms\fP &&from) noexcept"
.br
.ti -1c
.RI "\fBEms\fP & \fBoperator=\fP (const \fBEms\fP &from)"
.br
.ti -1c
.RI "\fBEms\fP & \fBoperator=\fP (\fBEms\fP &&from) noexcept"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet & \fBunknown_fields\fP () const"
.br
.ti -1c
.RI "inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet * \fBmutable_unknown_fields\fP ()"
.br
.ti -1c
.RI "void \fBSwap\fP (\fBEms\fP *other)"
.br
.ti -1c
.RI "void \fBUnsafeArenaSwap\fP (\fBEms\fP *other)"
.br
.ti -1c
.RI "\fBEms\fP * \fBNew\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena=nullptr) const final"
.br
.ti -1c
.RI "void \fBCopyFrom\fP (const \fBEms\fP &from)"
.br
.ti -1c
.RI "void \fBMergeFrom\fP (const \fBEms\fP &from)"
.br
.ti -1c
.RI "PROTOBUF_ATTRIBUTE_REINITIALIZES void \fBClear\fP () final"
.br
.ti -1c
.RI "bool \fBIsInitialized\fP () const final"
.br
.ti -1c
.RI "size_t \fBByteSizeLong\fP () const final"
.br
.ti -1c
.RI "const char * \fB_InternalParse\fP (const char *ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext *ctx) final"
.br
.ti -1c
.RI "uint8_t * \fB_InternalSerialize\fP (uint8_t *target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream *stream) const final"
.br
.ti -1c
.RI "int \fBGetCachedSize\fP () const final"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData * \fBGetClassData\fP () const final"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::Metadata \fBGetMetadata\fP () const final"
.br
.ti -1c
.RI "bool \fBhas_max_engine_torq_percent\fP () const"
.br
.ti -1c
.RI "void \fBclear_max_engine_torq_percent\fP ()"
.br
.ti -1c
.RI "double \fBmax_engine_torq_percent\fP () const"
.br
.ti -1c
.RI "void \fBset_max_engine_torq_percent\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_engine_state\fP () const"
.br
.ti -1c
.RI "void \fBclear_engine_state\fP ()"
.br
.ti -1c
.RI "::apollo::canbus::Ems_Type \fBengine_state\fP () const"
.br
.ti -1c
.RI "void \fBset_engine_state\fP (::apollo::canbus::Ems_Type value)"
.br
.ti -1c
.RI "bool \fBhas_is_engine_acc_available\fP () const"
.br
.ti -1c
.RI "void \fBclear_is_engine_acc_available\fP ()"
.br
.ti -1c
.RI "bool \fBis_engine_acc_available\fP () const"
.br
.ti -1c
.RI "void \fBset_is_engine_acc_available\fP (bool value)"
.br
.ti -1c
.RI "bool \fBhas_is_engine_acc_error\fP () const"
.br
.ti -1c
.RI "void \fBclear_is_engine_acc_error\fP ()"
.br
.ti -1c
.RI "bool \fBis_engine_acc_error\fP () const"
.br
.ti -1c
.RI "void \fBset_is_engine_acc_error\fP (bool value)"
.br
.ti -1c
.RI "bool \fBhas_is_engine_speed_error\fP () const"
.br
.ti -1c
.RI "void \fBclear_is_engine_speed_error\fP ()"
.br
.ti -1c
.RI "bool \fBis_engine_speed_error\fP () const"
.br
.ti -1c
.RI "void \fBset_is_engine_speed_error\fP (bool value)"
.br
.ti -1c
.RI "bool \fBhas_is_over_engine_torque\fP () const"
.br
.ti -1c
.RI "void \fBclear_is_over_engine_torque\fP ()"
.br
.ti -1c
.RI "bool \fBis_over_engine_torque\fP () const"
.br
.ti -1c
.RI "void \fBset_is_over_engine_torque\fP (bool value)"
.br
.ti -1c
.RI "bool \fBhas_min_engine_torq_percent\fP () const"
.br
.ti -1c
.RI "void \fBclear_min_engine_torq_percent\fP ()"
.br
.ti -1c
.RI "double \fBmin_engine_torq_percent\fP () const"
.br
.ti -1c
.RI "void \fBset_min_engine_torq_percent\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_base_engine_torq_constant\fP () const"
.br
.ti -1c
.RI "void \fBclear_base_engine_torq_constant\fP ()"
.br
.ti -1c
.RI "int32_t \fBbase_engine_torq_constant\fP () const"
.br
.ti -1c
.RI "void \fBset_base_engine_torq_constant\fP (int32_t value)"
.br
.ti -1c
.RI "bool \fBhas_engine_torque\fP () const"
.br
.ti -1c
.RI "void \fBclear_engine_torque\fP ()"
.br
.ti -1c
.RI "int32_t \fBengine_torque\fP () const"
.br
.ti -1c
.RI "void \fBset_engine_torque\fP (int32_t value)"
.br
.ti -1c
.RI "bool \fBhas_engine_speed\fP () const"
.br
.ti -1c
.RI "void \fBclear_engine_speed\fP ()"
.br
.ti -1c
.RI "double \fBengine_speed\fP () const"
.br
.ti -1c
.RI "void \fBset_engine_speed\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_engine_rpm\fP () const"
.br
.ti -1c
.RI "void \fBclear_engine_rpm\fP ()"
.br
.ti -1c
.RI "double \fBengine_rpm\fP () const"
.br
.ti -1c
.RI "void \fBset_engine_rpm\fP (double value)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBdescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBGetDescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Reflection * \fBGetReflection\fP ()"
.br
.ti -1c
.RI "static const \fBEms\fP & \fBdefault_instance\fP ()"
.br
.ti -1c
.RI "static const \fBEms\fP * \fBinternal_default_instance\fP ()"
.br
.ti -1c
.RI "static bool \fBType_IsValid\fP (int value)"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor * \fBType_descriptor\fP ()"
.br
.ti -1c
.RI "template<typename T > static const std::string & \fBType_Name\fP (T enum_t_value)"
.br
.ti -1c
.RI "static bool \fBType_Parse\fP (::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Type *value)"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr int \fBkIndexInFileMessages\fP"
.br
.ti -1c
.RI "static const ClassData \fB_class_data_\fP"
.br
.ti -1c
.RI "static constexpr Type \fBSTOP\fP"
.br
.ti -1c
.RI "static constexpr Type \fBCRANK\fP"
.br
.ti -1c
.RI "static constexpr Type \fBRUNNING\fP"
.br
.ti -1c
.RI "static constexpr Type \fBINVALID\fP"
.br
.ti -1c
.RI "static constexpr Type \fBType_MIN\fP"
.br
.ti -1c
.RI "static constexpr Type \fBType_MAX\fP"
.br
.ti -1c
.RI "static constexpr int \fBType_ARRAYSIZE\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBEms\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena, bool is_message_owned=false)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fB::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata\fP"
.br
.ti -1c
.RI "template<typename T > class \fB::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper\fP"
.br
.ti -1c
.RI "struct \fB::TableStruct_modules_2fcommon_5fmsgs_2fchassis_5fmsgs_2fchassis_5fdetail_2eproto\fP"
.br
.ti -1c
.RI "void \fBswap\fP (\fBEms\fP &a, \fBEms\fP &b)"
.br
.in -1c
.SH "Member Data Documentation"
.PP 
.SS "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData apollo::canbus::Ems::_class_data_\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Ems::MergeImpl
}
.fi
.SS "constexpr Ems_Type apollo::canbus::Ems::CRANK\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    Ems_Type_CRANK
.fi
.SS "constexpr Ems_Type apollo::canbus::Ems::INVALID\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    Ems_Type_INVALID
.fi
.SS "constexpr int apollo::canbus::Ems::kIndexInFileMessages\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    11
.fi
.SS "constexpr Ems_Type apollo::canbus::Ems::RUNNING\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    Ems_Type_RUNNING
.fi
.SS "constexpr Ems_Type apollo::canbus::Ems::STOP\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    Ems_Type_STOP
.fi
.SS "constexpr int apollo::canbus::Ems::Type_ARRAYSIZE\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    Ems_Type_Type_ARRAYSIZE
.fi
.SS "constexpr Ems_Type apollo::canbus::Ems::Type_MAX\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    Ems_Type_Type_MAX
.fi
.SS "constexpr Ems_Type apollo::canbus::Ems::Type_MIN\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    Ems_Type_Type_MIN
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Cyber-Cmake from the source code\&.
