.TH "apollo::drivers::RacobitRadarObs" 3 "Sun Sep 3 2023" "Version 8.0" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
apollo::drivers::RacobitRadarObs
.SH SYNOPSIS
.br
.PP
.PP
Inherits PROTOBUF_NAMESPACE_ID::Message\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fB_Internal\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum : int { \fBkHeaderFieldNumber\fP = 1, \fBkClusterortrackFieldNumber\fP = 2, \fBkObstacleIdFieldNumber\fP = 3, \fBkLongitudeDistFieldNumber\fP = 4, \fBkLateralDistFieldNumber\fP = 5, \fBkLongitudeVelFieldNumber\fP = 6, \fBkLateralVelFieldNumber\fP = 7, \fBkRcsFieldNumber\fP = 8, \fBkLongitudeDistRmsFieldNumber\fP = 10, \fBkLateralDistRmsFieldNumber\fP = 11, \fBkLongitudeVelRmsFieldNumber\fP = 12, \fBkDynpropFieldNumber\fP = 9, \fBkMeasStateFieldNumber\fP = 15, \fBkLateralVelRmsFieldNumber\fP = 13, \fBkProbexistFieldNumber\fP = 14, \fBkLongitudeAccelFieldNumber\fP = 16, \fBkLateralAccelFieldNumber\fP = 17, \fBkOritationAngleFieldNumber\fP = 18, \fBkLongitudeAccelRmsFieldNumber\fP = 19, \fBkLateralAccelRmsFieldNumber\fP = 20, \fBkOritationAngleRmsFieldNumber\fP = 21, \fBkLengthFieldNumber\fP = 22, \fBkWidthFieldNumber\fP = 23, \fBkObstacleClassFieldNumber\fP = 24 }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "constexpr \fBRacobitRadarObs\fP (::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)"
.br
.ti -1c
.RI "\fBRacobitRadarObs\fP (const \fBRacobitRadarObs\fP &from)"
.br
.ti -1c
.RI "\fBRacobitRadarObs\fP (\fBRacobitRadarObs\fP &&from) noexcept"
.br
.ti -1c
.RI "\fBRacobitRadarObs\fP & \fBoperator=\fP (const \fBRacobitRadarObs\fP &from)"
.br
.ti -1c
.RI "\fBRacobitRadarObs\fP & \fBoperator=\fP (\fBRacobitRadarObs\fP &&from) noexcept"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet & \fBunknown_fields\fP () const"
.br
.ti -1c
.RI "inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet * \fBmutable_unknown_fields\fP ()"
.br
.ti -1c
.RI "void \fBSwap\fP (\fBRacobitRadarObs\fP *other)"
.br
.ti -1c
.RI "void \fBUnsafeArenaSwap\fP (\fBRacobitRadarObs\fP *other)"
.br
.ti -1c
.RI "\fBRacobitRadarObs\fP * \fBNew\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena=nullptr) const final"
.br
.ti -1c
.RI "void \fBCopyFrom\fP (const \fBRacobitRadarObs\fP &from)"
.br
.ti -1c
.RI "void \fBMergeFrom\fP (const \fBRacobitRadarObs\fP &from)"
.br
.ti -1c
.RI "PROTOBUF_ATTRIBUTE_REINITIALIZES void \fBClear\fP () final"
.br
.ti -1c
.RI "bool \fBIsInitialized\fP () const final"
.br
.ti -1c
.RI "size_t \fBByteSizeLong\fP () const final"
.br
.ti -1c
.RI "const char * \fB_InternalParse\fP (const char *ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext *ctx) final"
.br
.ti -1c
.RI "uint8_t * \fB_InternalSerialize\fP (uint8_t *target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream *stream) const final"
.br
.ti -1c
.RI "int \fBGetCachedSize\fP () const final"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData * \fBGetClassData\fP () const final"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::Metadata \fBGetMetadata\fP () const final"
.br
.ti -1c
.RI "bool \fBhas_header\fP () const"
.br
.ti -1c
.RI "void \fBclear_header\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::common::Header\fP & \fBheader\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::common::Header\fP * \fBrelease_header\fP ()"
.br
.ti -1c
.RI "::\fBapollo::common::Header\fP * \fBmutable_header\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_header\fP (::\fBapollo::common::Header\fP *header)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_header\fP (::\fBapollo::common::Header\fP *header)"
.br
.ti -1c
.RI "::\fBapollo::common::Header\fP * \fBunsafe_arena_release_header\fP ()"
.br
.ti -1c
.RI "bool \fBhas_clusterortrack\fP () const"
.br
.ti -1c
.RI "void \fBclear_clusterortrack\fP ()"
.br
.ti -1c
.RI "bool \fBclusterortrack\fP () const"
.br
.ti -1c
.RI "void \fBset_clusterortrack\fP (bool value)"
.br
.ti -1c
.RI "bool \fBhas_obstacle_id\fP () const"
.br
.ti -1c
.RI "void \fBclear_obstacle_id\fP ()"
.br
.ti -1c
.RI "int32_t \fBobstacle_id\fP () const"
.br
.ti -1c
.RI "void \fBset_obstacle_id\fP (int32_t value)"
.br
.ti -1c
.RI "bool \fBhas_longitude_dist\fP () const"
.br
.ti -1c
.RI "void \fBclear_longitude_dist\fP ()"
.br
.ti -1c
.RI "double \fBlongitude_dist\fP () const"
.br
.ti -1c
.RI "void \fBset_longitude_dist\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_lateral_dist\fP () const"
.br
.ti -1c
.RI "void \fBclear_lateral_dist\fP ()"
.br
.ti -1c
.RI "double \fBlateral_dist\fP () const"
.br
.ti -1c
.RI "void \fBset_lateral_dist\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_longitude_vel\fP () const"
.br
.ti -1c
.RI "void \fBclear_longitude_vel\fP ()"
.br
.ti -1c
.RI "double \fBlongitude_vel\fP () const"
.br
.ti -1c
.RI "void \fBset_longitude_vel\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_lateral_vel\fP () const"
.br
.ti -1c
.RI "void \fBclear_lateral_vel\fP ()"
.br
.ti -1c
.RI "double \fBlateral_vel\fP () const"
.br
.ti -1c
.RI "void \fBset_lateral_vel\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_rcs\fP () const"
.br
.ti -1c
.RI "void \fBclear_rcs\fP ()"
.br
.ti -1c
.RI "double \fBrcs\fP () const"
.br
.ti -1c
.RI "void \fBset_rcs\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_longitude_dist_rms\fP () const"
.br
.ti -1c
.RI "void \fBclear_longitude_dist_rms\fP ()"
.br
.ti -1c
.RI "double \fBlongitude_dist_rms\fP () const"
.br
.ti -1c
.RI "void \fBset_longitude_dist_rms\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_lateral_dist_rms\fP () const"
.br
.ti -1c
.RI "void \fBclear_lateral_dist_rms\fP ()"
.br
.ti -1c
.RI "double \fBlateral_dist_rms\fP () const"
.br
.ti -1c
.RI "void \fBset_lateral_dist_rms\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_longitude_vel_rms\fP () const"
.br
.ti -1c
.RI "void \fBclear_longitude_vel_rms\fP ()"
.br
.ti -1c
.RI "double \fBlongitude_vel_rms\fP () const"
.br
.ti -1c
.RI "void \fBset_longitude_vel_rms\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_dynprop\fP () const"
.br
.ti -1c
.RI "void \fBclear_dynprop\fP ()"
.br
.ti -1c
.RI "int32_t \fBdynprop\fP () const"
.br
.ti -1c
.RI "void \fBset_dynprop\fP (int32_t value)"
.br
.ti -1c
.RI "bool \fBhas_meas_state\fP () const"
.br
.ti -1c
.RI "void \fBclear_meas_state\fP ()"
.br
.ti -1c
.RI "int32_t \fBmeas_state\fP () const"
.br
.ti -1c
.RI "void \fBset_meas_state\fP (int32_t value)"
.br
.ti -1c
.RI "bool \fBhas_lateral_vel_rms\fP () const"
.br
.ti -1c
.RI "void \fBclear_lateral_vel_rms\fP ()"
.br
.ti -1c
.RI "double \fBlateral_vel_rms\fP () const"
.br
.ti -1c
.RI "void \fBset_lateral_vel_rms\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_probexist\fP () const"
.br
.ti -1c
.RI "void \fBclear_probexist\fP ()"
.br
.ti -1c
.RI "double \fBprobexist\fP () const"
.br
.ti -1c
.RI "void \fBset_probexist\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_longitude_accel\fP () const"
.br
.ti -1c
.RI "void \fBclear_longitude_accel\fP ()"
.br
.ti -1c
.RI "double \fBlongitude_accel\fP () const"
.br
.ti -1c
.RI "void \fBset_longitude_accel\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_lateral_accel\fP () const"
.br
.ti -1c
.RI "void \fBclear_lateral_accel\fP ()"
.br
.ti -1c
.RI "double \fBlateral_accel\fP () const"
.br
.ti -1c
.RI "void \fBset_lateral_accel\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_oritation_angle\fP () const"
.br
.ti -1c
.RI "void \fBclear_oritation_angle\fP ()"
.br
.ti -1c
.RI "double \fBoritation_angle\fP () const"
.br
.ti -1c
.RI "void \fBset_oritation_angle\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_longitude_accel_rms\fP () const"
.br
.ti -1c
.RI "void \fBclear_longitude_accel_rms\fP ()"
.br
.ti -1c
.RI "double \fBlongitude_accel_rms\fP () const"
.br
.ti -1c
.RI "void \fBset_longitude_accel_rms\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_lateral_accel_rms\fP () const"
.br
.ti -1c
.RI "void \fBclear_lateral_accel_rms\fP ()"
.br
.ti -1c
.RI "double \fBlateral_accel_rms\fP () const"
.br
.ti -1c
.RI "void \fBset_lateral_accel_rms\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_oritation_angle_rms\fP () const"
.br
.ti -1c
.RI "void \fBclear_oritation_angle_rms\fP ()"
.br
.ti -1c
.RI "double \fBoritation_angle_rms\fP () const"
.br
.ti -1c
.RI "void \fBset_oritation_angle_rms\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_length\fP () const"
.br
.ti -1c
.RI "void \fBclear_length\fP ()"
.br
.ti -1c
.RI "double \fBlength\fP () const"
.br
.ti -1c
.RI "void \fBset_length\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_width\fP () const"
.br
.ti -1c
.RI "void \fBclear_width\fP ()"
.br
.ti -1c
.RI "double \fBwidth\fP () const"
.br
.ti -1c
.RI "void \fBset_width\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_obstacle_class\fP () const"
.br
.ti -1c
.RI "void \fBclear_obstacle_class\fP ()"
.br
.ti -1c
.RI "int32_t \fBobstacle_class\fP () const"
.br
.ti -1c
.RI "void \fBset_obstacle_class\fP (int32_t value)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBdescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBGetDescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Reflection * \fBGetReflection\fP ()"
.br
.ti -1c
.RI "static const \fBRacobitRadarObs\fP & \fBdefault_instance\fP ()"
.br
.ti -1c
.RI "static const \fBRacobitRadarObs\fP * \fBinternal_default_instance\fP ()"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr int \fBkIndexInFileMessages\fP"
.br
.ti -1c
.RI "static const ClassData \fB_class_data_\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBRacobitRadarObs\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena, bool is_message_owned=false)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fB::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata\fP"
.br
.ti -1c
.RI "template<typename T > class \fB::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper\fP"
.br
.ti -1c
.RI "struct \fB::TableStruct_modules_2fcommon_5fmsgs_2fsensor_5fmsgs_2fracobit_5fradar_2eproto\fP"
.br
.ti -1c
.RI "void \fBswap\fP (\fBRacobitRadarObs\fP &a, \fBRacobitRadarObs\fP &b)"
.br
.in -1c
.SH "Member Data Documentation"
.PP 
.SS "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData apollo::drivers::RacobitRadarObs::_class_data_\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RacobitRadarObs::MergeImpl
}
.fi
.SS "constexpr int apollo::drivers::RacobitRadarObs::kIndexInFileMessages\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    3
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Cyber-Cmake from the source code\&.
