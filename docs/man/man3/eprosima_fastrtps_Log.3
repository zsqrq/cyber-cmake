.TH "eprosima::fastrtps::Log" 3 "Sun Sep 3 2023" "Version 8.0" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
eprosima::fastrtps::Log
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Log\&.h>\fP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBContext\fP"
.br
.ti -1c
.RI "struct \fBEntry\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBKind\fP { \fBError\fP, \fBWarning\fP, \fBInfo\fP }"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static RTPS_DllAPI void \fBRegisterConsumer\fP (std::unique_ptr< \fBLogConsumer\fP >)"
.br
.ti -1c
.RI "static RTPS_DllAPI void \fBReportFilenames\fP (bool)"
.br
.RI "Enables the reporting of filenames in log entries\&. Disabled by default\&. "
.ti -1c
.RI "static RTPS_DllAPI void \fBReportFunctions\fP (bool)"
.br
.RI "Enables the reporting of function names in log entries\&. Enabled by default when supported\&. "
.ti -1c
.RI "static RTPS_DllAPI void \fBSetVerbosity\fP (\fBLog::Kind\fP)"
.br
.RI "Sets the verbosity level, allowing for messages equal or under that priority to be logged\&. "
.ti -1c
.RI "static RTPS_DllAPI \fBLog::Kind\fP \fBGetVerbosity\fP ()"
.br
.RI "Returns the current verbosity level\&. "
.ti -1c
.RI "static RTPS_DllAPI void \fBSetCategoryFilter\fP (const std::regex &)"
.br
.RI "Sets a filter that will pattern-match against log categories, dropping any unmatched categories\&. "
.ti -1c
.RI "static RTPS_DllAPI void \fBSetFilenameFilter\fP (const std::regex &)"
.br
.RI "Sets a filter that will pattern-match against filenames, dropping any unmatched categories\&. "
.ti -1c
.RI "static RTPS_DllAPI void \fBSetErrorStringFilter\fP (const std::regex &)"
.br
.RI "Sets a filter that will pattern-match against the provided error string, dropping any unmatched categories\&. "
.ti -1c
.RI "static RTPS_DllAPI void \fBReset\fP ()"
.br
.RI "Returns the logging engine to configuration defaults\&. "
.ti -1c
.RI "static RTPS_DllAPI void \fBKillThread\fP ()"
.br
.RI "Stops the logging thread\&. It will re-launch on the next call to a successful log macro\&. "
.ti -1c
.RI "static RTPS_DllAPI void \fBQueueLog\fP (const std::string &message, const \fBLog::Context\fP &, \fBLog::Kind\fP)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Logging utilities\&. Logging is accessed through the three macros above, and configuration on the log output can be achieved through static methods on the class\&. Logging at various levels can be disabled dynamically (through the Verbosity level) or statically (through the LOG_NO_[VERB] macros) for maximum performance\&. 
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBeprosima::fastrtps::Log::Kind\fP"
Types of log entry\&.
.IP "\(bu" 2
Error: Maximum priority\&. Can only be disabled statically through #define LOG_NO_ERROR\&.
.IP "\(bu" 2
Warning: Medium priority\&. Can be disabled statically and dynamically\&.
.IP "\(bu" 2
Info: Low priority\&. Useful for debugging\&. Disabled by default on release branches\&. 
.PP

.SH "Member Function Documentation"
.PP 
.SS "static RTPS_DllAPI void eprosima::fastrtps::Log::QueueLog (const std::string & message, const \fBLog::Context\fP &, \fBLog::Kind\fP)\fC [static]\fP"
Not recommended to call this method directly! Use the following macros:
.IP "\(bu" 2
logInfo(cat, msg);
.IP "\(bu" 2
logWarning(cat, msg);
.IP "\(bu" 2
logError(cat, msg); 
.PP

.SS "static RTPS_DllAPI void eprosima::fastrtps::Log::RegisterConsumer (std::unique_ptr< \fBLogConsumer\fP >)\fC [static]\fP"
Registers an user defined consumer to route log output\&. There is a default stdout consumer active at all times\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Cyber-Cmake from the source code\&.
