.TH "apollo::cyber::record::HeaderBuilder" 3 "Thu Aug 31 2023" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
apollo::cyber::record::HeaderBuilder \- The builder of record header\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <header_builder\&.h>\fP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static proto::Header \fBGetHeaderWithSegmentParams\fP (const uint64_t segment_interval, const uint64_t segment_raw_size)"
.br
.RI "Build a record header with customized max interval time (ns) and max raw size (byte) for segment\&. "
.ti -1c
.RI "static proto::Header \fBGetHeaderWithChunkParams\fP (const uint64_t chunk_interval, const uint64_t chunk_raw_size)"
.br
.RI "Build a record header with customized max interval time (ns) and max raw size (byte) for chunk\&. "
.ti -1c
.RI "static proto::Header \fBGetHeader\fP ()"
.br
.RI "Build a default record header\&. "
.in -1c
.SH "Detailed Description"
.PP 
The builder of record header\&. 
.SH "Member Function Documentation"
.PP 
.SS "proto::Header apollo::cyber::record::HeaderBuilder::GetHeader ()\fC [static]\fP"

.PP
Build a default record header\&. 
.PP
\fBReturns\fP
.RS 4
A default record header\&. 
.RE
.PP

.SS "proto::Header apollo::cyber::record::HeaderBuilder::GetHeaderWithChunkParams (const uint64_t chunk_interval, const uint64_t chunk_raw_size)\fC [static]\fP"

.PP
Build a record header with customized max interval time (ns) and max raw size (byte) for chunk\&. 
.PP
\fBParameters\fP
.RS 4
\fIchunk_interval\fP 
.br
\fIchunk_raw_size\fP 
.RE
.PP
\fBReturns\fP
.RS 4
A customized record header\&. 
.RE
.PP

.SS "proto::Header apollo::cyber::record::HeaderBuilder::GetHeaderWithSegmentParams (const uint64_t segment_interval, const uint64_t segment_raw_size)\fC [static]\fP"

.PP
Build a record header with customized max interval time (ns) and max raw size (byte) for segment\&. 
.PP
\fBParameters\fP
.RS 4
\fIsegment_interval\fP 
.br
\fIsegment_raw_size\fP 
.RE
.PP
\fBReturns\fP
.RS 4
A customized record header\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Cyber-Cmake from the source code\&.
