.TH "apollo::drivers::Mobileye" 3 "Sun Sep 3 2023" "Version 8.0" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
apollo::drivers::Mobileye
.SH SYNOPSIS
.br
.PP
.PP
Inherits PROTOBUF_NAMESPACE_ID::Message\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fB_Internal\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum : int { \fBkDetails739FieldNumber\fP = 5, \fBkDetails73AFieldNumber\fP = 6, \fBkDetails73BFieldNumber\fP = 7, \fBkNext76CFieldNumber\fP = 14, \fBkNext76DFieldNumber\fP = 15, \fBkHeaderFieldNumber\fP = 1, \fBkAftermarket669FieldNumber\fP = 2, \fBkDetails737FieldNumber\fP = 3, \fBkDetails738FieldNumber\fP = 4, \fBkLka766FieldNumber\fP = 8, \fBkLka767FieldNumber\fP = 9, \fBkLka768FieldNumber\fP = 10, \fBkLka769FieldNumber\fP = 11, \fBkReference76AFieldNumber\fP = 12, \fBkNum76BFieldNumber\fP = 13 }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "constexpr \fBMobileye\fP (::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)"
.br
.ti -1c
.RI "\fBMobileye\fP (const \fBMobileye\fP &from)"
.br
.ti -1c
.RI "\fBMobileye\fP (\fBMobileye\fP &&from) noexcept"
.br
.ti -1c
.RI "\fBMobileye\fP & \fBoperator=\fP (const \fBMobileye\fP &from)"
.br
.ti -1c
.RI "\fBMobileye\fP & \fBoperator=\fP (\fBMobileye\fP &&from) noexcept"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet & \fBunknown_fields\fP () const"
.br
.ti -1c
.RI "inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet * \fBmutable_unknown_fields\fP ()"
.br
.ti -1c
.RI "void \fBSwap\fP (\fBMobileye\fP *other)"
.br
.ti -1c
.RI "void \fBUnsafeArenaSwap\fP (\fBMobileye\fP *other)"
.br
.ti -1c
.RI "\fBMobileye\fP * \fBNew\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena=nullptr) const final"
.br
.ti -1c
.RI "void \fBCopyFrom\fP (const \fBMobileye\fP &from)"
.br
.ti -1c
.RI "void \fBMergeFrom\fP (const \fBMobileye\fP &from)"
.br
.ti -1c
.RI "PROTOBUF_ATTRIBUTE_REINITIALIZES void \fBClear\fP () final"
.br
.ti -1c
.RI "bool \fBIsInitialized\fP () const final"
.br
.ti -1c
.RI "size_t \fBByteSizeLong\fP () const final"
.br
.ti -1c
.RI "const char * \fB_InternalParse\fP (const char *ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext *ctx) final"
.br
.ti -1c
.RI "uint8_t * \fB_InternalSerialize\fP (uint8_t *target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream *stream) const final"
.br
.ti -1c
.RI "int \fBGetCachedSize\fP () const final"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData * \fBGetClassData\fP () const final"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::Metadata \fBGetMetadata\fP () const final"
.br
.ti -1c
.RI "int \fBdetails_739_size\fP () const"
.br
.ti -1c
.RI "void \fBclear_details_739\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Details_739\fP * \fBmutable_details_739\fP (int index)"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::drivers::Details_739\fP > * \fBmutable_details_739\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Details_739\fP & \fBdetails_739\fP (int index) const"
.br
.ti -1c
.RI "::\fBapollo::drivers::Details_739\fP * \fBadd_details_739\fP ()"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::drivers::Details_739\fP > & \fBdetails_739\fP () const"
.br
.ti -1c
.RI "int \fBdetails_73a_size\fP () const"
.br
.ti -1c
.RI "void \fBclear_details_73a\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Details_73a\fP * \fBmutable_details_73a\fP (int index)"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::drivers::Details_73a\fP > * \fBmutable_details_73a\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Details_73a\fP & \fBdetails_73a\fP (int index) const"
.br
.ti -1c
.RI "::\fBapollo::drivers::Details_73a\fP * \fBadd_details_73a\fP ()"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::drivers::Details_73a\fP > & \fBdetails_73a\fP () const"
.br
.ti -1c
.RI "int \fBdetails_73b_size\fP () const"
.br
.ti -1c
.RI "void \fBclear_details_73b\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Details_73b\fP * \fBmutable_details_73b\fP (int index)"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::drivers::Details_73b\fP > * \fBmutable_details_73b\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Details_73b\fP & \fBdetails_73b\fP (int index) const"
.br
.ti -1c
.RI "::\fBapollo::drivers::Details_73b\fP * \fBadd_details_73b\fP ()"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::drivers::Details_73b\fP > & \fBdetails_73b\fP () const"
.br
.ti -1c
.RI "int \fBnext_76c_size\fP () const"
.br
.ti -1c
.RI "void \fBclear_next_76c\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Next_76c\fP * \fBmutable_next_76c\fP (int index)"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::drivers::Next_76c\fP > * \fBmutable_next_76c\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Next_76c\fP & \fBnext_76c\fP (int index) const"
.br
.ti -1c
.RI "::\fBapollo::drivers::Next_76c\fP * \fBadd_next_76c\fP ()"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::drivers::Next_76c\fP > & \fBnext_76c\fP () const"
.br
.ti -1c
.RI "int \fBnext_76d_size\fP () const"
.br
.ti -1c
.RI "void \fBclear_next_76d\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Next_76d\fP * \fBmutable_next_76d\fP (int index)"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::drivers::Next_76d\fP > * \fBmutable_next_76d\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Next_76d\fP & \fBnext_76d\fP (int index) const"
.br
.ti -1c
.RI "::\fBapollo::drivers::Next_76d\fP * \fBadd_next_76d\fP ()"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::drivers::Next_76d\fP > & \fBnext_76d\fP () const"
.br
.ti -1c
.RI "bool \fBhas_header\fP () const"
.br
.ti -1c
.RI "void \fBclear_header\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::common::Header\fP & \fBheader\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::common::Header\fP * \fBrelease_header\fP ()"
.br
.ti -1c
.RI "::\fBapollo::common::Header\fP * \fBmutable_header\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_header\fP (::\fBapollo::common::Header\fP *header)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_header\fP (::\fBapollo::common::Header\fP *header)"
.br
.ti -1c
.RI "::\fBapollo::common::Header\fP * \fBunsafe_arena_release_header\fP ()"
.br
.ti -1c
.RI "bool \fBhas_aftermarket_669\fP () const"
.br
.ti -1c
.RI "void \fBclear_aftermarket_669\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Aftermarket_669\fP & \fBaftermarket_669\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::drivers::Aftermarket_669\fP * \fBrelease_aftermarket_669\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Aftermarket_669\fP * \fBmutable_aftermarket_669\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_aftermarket_669\fP (::\fBapollo::drivers::Aftermarket_669\fP *aftermarket_669)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_aftermarket_669\fP (::\fBapollo::drivers::Aftermarket_669\fP *aftermarket_669)"
.br
.ti -1c
.RI "::\fBapollo::drivers::Aftermarket_669\fP * \fBunsafe_arena_release_aftermarket_669\fP ()"
.br
.ti -1c
.RI "bool \fBhas_details_737\fP () const"
.br
.ti -1c
.RI "void \fBclear_details_737\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Details_737\fP & \fBdetails_737\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::drivers::Details_737\fP * \fBrelease_details_737\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Details_737\fP * \fBmutable_details_737\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_details_737\fP (::\fBapollo::drivers::Details_737\fP *details_737)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_details_737\fP (::\fBapollo::drivers::Details_737\fP *details_737)"
.br
.ti -1c
.RI "::\fBapollo::drivers::Details_737\fP * \fBunsafe_arena_release_details_737\fP ()"
.br
.ti -1c
.RI "bool \fBhas_details_738\fP () const"
.br
.ti -1c
.RI "void \fBclear_details_738\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Details_738\fP & \fBdetails_738\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::drivers::Details_738\fP * \fBrelease_details_738\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Details_738\fP * \fBmutable_details_738\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_details_738\fP (::\fBapollo::drivers::Details_738\fP *details_738)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_details_738\fP (::\fBapollo::drivers::Details_738\fP *details_738)"
.br
.ti -1c
.RI "::\fBapollo::drivers::Details_738\fP * \fBunsafe_arena_release_details_738\fP ()"
.br
.ti -1c
.RI "bool \fBhas_lka_766\fP () const"
.br
.ti -1c
.RI "void \fBclear_lka_766\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Lka_766\fP & \fBlka_766\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::drivers::Lka_766\fP * \fBrelease_lka_766\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Lka_766\fP * \fBmutable_lka_766\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_lka_766\fP (::\fBapollo::drivers::Lka_766\fP *lka_766)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_lka_766\fP (::\fBapollo::drivers::Lka_766\fP *lka_766)"
.br
.ti -1c
.RI "::\fBapollo::drivers::Lka_766\fP * \fBunsafe_arena_release_lka_766\fP ()"
.br
.ti -1c
.RI "bool \fBhas_lka_767\fP () const"
.br
.ti -1c
.RI "void \fBclear_lka_767\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Lka_767\fP & \fBlka_767\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::drivers::Lka_767\fP * \fBrelease_lka_767\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Lka_767\fP * \fBmutable_lka_767\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_lka_767\fP (::\fBapollo::drivers::Lka_767\fP *lka_767)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_lka_767\fP (::\fBapollo::drivers::Lka_767\fP *lka_767)"
.br
.ti -1c
.RI "::\fBapollo::drivers::Lka_767\fP * \fBunsafe_arena_release_lka_767\fP ()"
.br
.ti -1c
.RI "bool \fBhas_lka_768\fP () const"
.br
.ti -1c
.RI "void \fBclear_lka_768\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Lka_768\fP & \fBlka_768\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::drivers::Lka_768\fP * \fBrelease_lka_768\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Lka_768\fP * \fBmutable_lka_768\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_lka_768\fP (::\fBapollo::drivers::Lka_768\fP *lka_768)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_lka_768\fP (::\fBapollo::drivers::Lka_768\fP *lka_768)"
.br
.ti -1c
.RI "::\fBapollo::drivers::Lka_768\fP * \fBunsafe_arena_release_lka_768\fP ()"
.br
.ti -1c
.RI "bool \fBhas_lka_769\fP () const"
.br
.ti -1c
.RI "void \fBclear_lka_769\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Lka_769\fP & \fBlka_769\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::drivers::Lka_769\fP * \fBrelease_lka_769\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Lka_769\fP * \fBmutable_lka_769\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_lka_769\fP (::\fBapollo::drivers::Lka_769\fP *lka_769)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_lka_769\fP (::\fBapollo::drivers::Lka_769\fP *lka_769)"
.br
.ti -1c
.RI "::\fBapollo::drivers::Lka_769\fP * \fBunsafe_arena_release_lka_769\fP ()"
.br
.ti -1c
.RI "bool \fBhas_reference_76a\fP () const"
.br
.ti -1c
.RI "void \fBclear_reference_76a\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Reference_76a\fP & \fBreference_76a\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::drivers::Reference_76a\fP * \fBrelease_reference_76a\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Reference_76a\fP * \fBmutable_reference_76a\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_reference_76a\fP (::\fBapollo::drivers::Reference_76a\fP *reference_76a)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_reference_76a\fP (::\fBapollo::drivers::Reference_76a\fP *reference_76a)"
.br
.ti -1c
.RI "::\fBapollo::drivers::Reference_76a\fP * \fBunsafe_arena_release_reference_76a\fP ()"
.br
.ti -1c
.RI "bool \fBhas_num_76b\fP () const"
.br
.ti -1c
.RI "void \fBclear_num_76b\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::drivers::Num_76b\fP & \fBnum_76b\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::drivers::Num_76b\fP * \fBrelease_num_76b\fP ()"
.br
.ti -1c
.RI "::\fBapollo::drivers::Num_76b\fP * \fBmutable_num_76b\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_num_76b\fP (::\fBapollo::drivers::Num_76b\fP *num_76b)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_num_76b\fP (::\fBapollo::drivers::Num_76b\fP *num_76b)"
.br
.ti -1c
.RI "::\fBapollo::drivers::Num_76b\fP * \fBunsafe_arena_release_num_76b\fP ()"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBdescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBGetDescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Reflection * \fBGetReflection\fP ()"
.br
.ti -1c
.RI "static const \fBMobileye\fP & \fBdefault_instance\fP ()"
.br
.ti -1c
.RI "static const \fBMobileye\fP * \fBinternal_default_instance\fP ()"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr int \fBkIndexInFileMessages\fP"
.br
.ti -1c
.RI "static const ClassData \fB_class_data_\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBMobileye\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena, bool is_message_owned=false)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fB::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata\fP"
.br
.ti -1c
.RI "template<typename T > class \fB::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper\fP"
.br
.ti -1c
.RI "struct \fB::TableStruct_modules_2fcommon_5fmsgs_2fsensor_5fmsgs_2fmobileye_2eproto\fP"
.br
.ti -1c
.RI "void \fBswap\fP (\fBMobileye\fP &a, \fBMobileye\fP &b)"
.br
.in -1c
.SH "Member Data Documentation"
.PP 
.SS "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData apollo::drivers::Mobileye::_class_data_\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Mobileye::MergeImpl
}
.fi
.SS "constexpr int apollo::drivers::Mobileye::kIndexInFileMessages\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    14
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Cyber-Cmake from the source code\&.
