.TH "apollo::planning_internal::ReferenceLineDebug" 3 "Sun Sep 3 2023" "Version 8.0" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
apollo::planning_internal::ReferenceLineDebug
.SH SYNOPSIS
.br
.PP
.PP
Inherits PROTOBUF_NAMESPACE_ID::Message\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fB_Internal\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum : int { \fBkIdFieldNumber\fP = 1, \fBkLengthFieldNumber\fP = 2, \fBkCostFieldNumber\fP = 3, \fBkMinimumBoundaryFieldNumber\fP = 8, \fBkAverageKappaFieldNumber\fP = 9, \fBkAverageDkappaFieldNumber\fP = 10, \fBkKappaRmsFieldNumber\fP = 11, \fBkDkappaRmsFieldNumber\fP = 12, \fBkKappaMaxAbsFieldNumber\fP = 13, \fBkDkappaMaxAbsFieldNumber\fP = 14, \fBkAverageOffsetFieldNumber\fP = 15, \fBkIsChangeLanePathFieldNumber\fP = 4, \fBkIsDrivableFieldNumber\fP = 5, \fBkIsProtectedFieldNumber\fP = 6, \fBkIsOffroadFieldNumber\fP = 7 }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "constexpr \fBReferenceLineDebug\fP (::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)"
.br
.ti -1c
.RI "\fBReferenceLineDebug\fP (const \fBReferenceLineDebug\fP &from)"
.br
.ti -1c
.RI "\fBReferenceLineDebug\fP (\fBReferenceLineDebug\fP &&from) noexcept"
.br
.ti -1c
.RI "\fBReferenceLineDebug\fP & \fBoperator=\fP (const \fBReferenceLineDebug\fP &from)"
.br
.ti -1c
.RI "\fBReferenceLineDebug\fP & \fBoperator=\fP (\fBReferenceLineDebug\fP &&from) noexcept"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet & \fBunknown_fields\fP () const"
.br
.ti -1c
.RI "inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet * \fBmutable_unknown_fields\fP ()"
.br
.ti -1c
.RI "void \fBSwap\fP (\fBReferenceLineDebug\fP *other)"
.br
.ti -1c
.RI "void \fBUnsafeArenaSwap\fP (\fBReferenceLineDebug\fP *other)"
.br
.ti -1c
.RI "\fBReferenceLineDebug\fP * \fBNew\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena=nullptr) const final"
.br
.ti -1c
.RI "void \fBCopyFrom\fP (const \fBReferenceLineDebug\fP &from)"
.br
.ti -1c
.RI "void \fBMergeFrom\fP (const \fBReferenceLineDebug\fP &from)"
.br
.ti -1c
.RI "PROTOBUF_ATTRIBUTE_REINITIALIZES void \fBClear\fP () final"
.br
.ti -1c
.RI "bool \fBIsInitialized\fP () const final"
.br
.ti -1c
.RI "size_t \fBByteSizeLong\fP () const final"
.br
.ti -1c
.RI "const char * \fB_InternalParse\fP (const char *ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext *ctx) final"
.br
.ti -1c
.RI "uint8_t * \fB_InternalSerialize\fP (uint8_t *target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream *stream) const final"
.br
.ti -1c
.RI "int \fBGetCachedSize\fP () const final"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData * \fBGetClassData\fP () const final"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::Metadata \fBGetMetadata\fP () const final"
.br
.ti -1c
.RI "bool \fBhas_id\fP () const"
.br
.ti -1c
.RI "void \fBclear_id\fP ()"
.br
.ti -1c
.RI "const std::string & \fBid\fP () const"
.br
.ti -1c
.RI "template<typename ArgT0  = const std::string&, typename\&.\&.\&. ArgT> void \fBset_id\fP (ArgT0 &&arg0, ArgT\&.\&.\&. args)"
.br
.ti -1c
.RI "std::string * \fBmutable_id\fP ()"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD std::string * \fBrelease_id\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_id\fP (std::string *id)"
.br
.ti -1c
.RI "bool \fBhas_length\fP () const"
.br
.ti -1c
.RI "void \fBclear_length\fP ()"
.br
.ti -1c
.RI "double \fBlength\fP () const"
.br
.ti -1c
.RI "void \fBset_length\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_cost\fP () const"
.br
.ti -1c
.RI "void \fBclear_cost\fP ()"
.br
.ti -1c
.RI "double \fBcost\fP () const"
.br
.ti -1c
.RI "void \fBset_cost\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_minimum_boundary\fP () const"
.br
.ti -1c
.RI "void \fBclear_minimum_boundary\fP ()"
.br
.ti -1c
.RI "double \fBminimum_boundary\fP () const"
.br
.ti -1c
.RI "void \fBset_minimum_boundary\fP (double value)"
.br
.ti -1c
.RI "PROTOBUF_DEPRECATED bool \fBhas_average_kappa\fP () const"
.br
.ti -1c
.RI "PROTOBUF_DEPRECATED void \fBclear_average_kappa\fP ()"
.br
.ti -1c
.RI "PROTOBUF_DEPRECATED double \fBaverage_kappa\fP () const"
.br
.ti -1c
.RI "PROTOBUF_DEPRECATED void \fBset_average_kappa\fP (double value)"
.br
.ti -1c
.RI "PROTOBUF_DEPRECATED bool \fBhas_average_dkappa\fP () const"
.br
.ti -1c
.RI "PROTOBUF_DEPRECATED void \fBclear_average_dkappa\fP ()"
.br
.ti -1c
.RI "PROTOBUF_DEPRECATED double \fBaverage_dkappa\fP () const"
.br
.ti -1c
.RI "PROTOBUF_DEPRECATED void \fBset_average_dkappa\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_kappa_rms\fP () const"
.br
.ti -1c
.RI "void \fBclear_kappa_rms\fP ()"
.br
.ti -1c
.RI "double \fBkappa_rms\fP () const"
.br
.ti -1c
.RI "void \fBset_kappa_rms\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_dkappa_rms\fP () const"
.br
.ti -1c
.RI "void \fBclear_dkappa_rms\fP ()"
.br
.ti -1c
.RI "double \fBdkappa_rms\fP () const"
.br
.ti -1c
.RI "void \fBset_dkappa_rms\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_kappa_max_abs\fP () const"
.br
.ti -1c
.RI "void \fBclear_kappa_max_abs\fP ()"
.br
.ti -1c
.RI "double \fBkappa_max_abs\fP () const"
.br
.ti -1c
.RI "void \fBset_kappa_max_abs\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_dkappa_max_abs\fP () const"
.br
.ti -1c
.RI "void \fBclear_dkappa_max_abs\fP ()"
.br
.ti -1c
.RI "double \fBdkappa_max_abs\fP () const"
.br
.ti -1c
.RI "void \fBset_dkappa_max_abs\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_average_offset\fP () const"
.br
.ti -1c
.RI "void \fBclear_average_offset\fP ()"
.br
.ti -1c
.RI "double \fBaverage_offset\fP () const"
.br
.ti -1c
.RI "void \fBset_average_offset\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_is_change_lane_path\fP () const"
.br
.ti -1c
.RI "void \fBclear_is_change_lane_path\fP ()"
.br
.ti -1c
.RI "bool \fBis_change_lane_path\fP () const"
.br
.ti -1c
.RI "void \fBset_is_change_lane_path\fP (bool value)"
.br
.ti -1c
.RI "bool \fBhas_is_drivable\fP () const"
.br
.ti -1c
.RI "void \fBclear_is_drivable\fP ()"
.br
.ti -1c
.RI "bool \fBis_drivable\fP () const"
.br
.ti -1c
.RI "void \fBset_is_drivable\fP (bool value)"
.br
.ti -1c
.RI "bool \fBhas_is_protected\fP () const"
.br
.ti -1c
.RI "void \fBclear_is_protected\fP ()"
.br
.ti -1c
.RI "bool \fBis_protected\fP () const"
.br
.ti -1c
.RI "void \fBset_is_protected\fP (bool value)"
.br
.ti -1c
.RI "bool \fBhas_is_offroad\fP () const"
.br
.ti -1c
.RI "void \fBclear_is_offroad\fP ()"
.br
.ti -1c
.RI "bool \fBis_offroad\fP () const"
.br
.ti -1c
.RI "void \fBset_is_offroad\fP (bool value)"
.br
.ti -1c
.RI "template<typename ArgT0 , typename\&.\&.\&. ArgT> PROTOBUF_ALWAYS_INLINE void \fBset_id\fP (ArgT0 &&arg0, ArgT\&.\&.\&. args)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBdescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBGetDescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Reflection * \fBGetReflection\fP ()"
.br
.ti -1c
.RI "static const \fBReferenceLineDebug\fP & \fBdefault_instance\fP ()"
.br
.ti -1c
.RI "static const \fBReferenceLineDebug\fP * \fBinternal_default_instance\fP ()"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr int \fBkIndexInFileMessages\fP"
.br
.ti -1c
.RI "static const ClassData \fB_class_data_\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBReferenceLineDebug\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena, bool is_message_owned=false)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fB::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata\fP"
.br
.ti -1c
.RI "template<typename T > class \fB::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper\fP"
.br
.ti -1c
.RI "struct \fB::TableStruct_modules_2fcommon_5fmsgs_2fplanning_5fmsgs_2fplanning_5finternal_2eproto\fP"
.br
.ti -1c
.RI "void \fBswap\fP (\fBReferenceLineDebug\fP &a, \fBReferenceLineDebug\fP &b)"
.br
.in -1c
.SH "Member Data Documentation"
.PP 
.SS "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData apollo::planning_internal::ReferenceLineDebug::_class_data_\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ReferenceLineDebug::MergeImpl
}
.fi
.SS "constexpr int apollo::planning_internal::ReferenceLineDebug::kIndexInFileMessages\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    12
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Cyber-Cmake from the source code\&.
