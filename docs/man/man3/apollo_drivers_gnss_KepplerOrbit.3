.TH "apollo::drivers::gnss::KepplerOrbit" 3 "Sun Sep 3 2023" "Version 8.0" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
apollo::drivers::gnss::KepplerOrbit
.SH SYNOPSIS
.br
.PP
.PP
Inherits PROTOBUF_NAMESPACE_ID::Message\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fB_Internal\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum : int { \fBkSatPrnFieldNumber\fP = 2, \fBkYearFieldNumber\fP = 4, \fBkMonthFieldNumber\fP = 5, \fBkDayFieldNumber\fP = 6, \fBkHourFieldNumber\fP = 7, \fBkMinuteFieldNumber\fP = 8, \fBkSecondSFieldNumber\fP = 9, \fBkReservedFieldNumber\fP = 11, \fBkAf0FieldNumber\fP = 12, \fBkAf1FieldNumber\fP = 13, \fBkAf2FieldNumber\fP = 14, \fBkIodeFieldNumber\fP = 15, \fBkDeltanFieldNumber\fP = 16, \fBkM0FieldNumber\fP = 17, \fBkEFieldNumber\fP = 18, \fBkRootaFieldNumber\fP = 19, \fBkToeFieldNumber\fP = 20, \fBkTocFieldNumber\fP = 21, \fBkCicFieldNumber\fP = 22, \fBkWeekNumFieldNumber\fP = 10, \fBkL2PdataflagFieldNumber\fP = 34, \fBkCrcFieldNumber\fP = 23, \fBkCisFieldNumber\fP = 24, \fBkCrsFieldNumber\fP = 25, \fBkCucFieldNumber\fP = 26, \fBkCusFieldNumber\fP = 27, \fBkOmega0FieldNumber\fP = 28, \fBkOmegaFieldNumber\fP = 29, \fBkI0FieldNumber\fP = 30, \fBkOmegadotFieldNumber\fP = 31, \fBkIdotFieldNumber\fP = 32, \fBkCodesonL2ChannelFieldNumber\fP = 33, \fBkAccuracyFieldNumber\fP = 35, \fBkHealthFieldNumber\fP = 36, \fBkTgdFieldNumber\fP = 37, \fBkIodcFieldNumber\fP = 38, \fBkGnssTypeFieldNumber\fP = 1, \fBkGnssTimeTypeFieldNumber\fP = 3 }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "constexpr \fBKepplerOrbit\fP (::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)"
.br
.ti -1c
.RI "\fBKepplerOrbit\fP (const \fBKepplerOrbit\fP &from)"
.br
.ti -1c
.RI "\fBKepplerOrbit\fP (\fBKepplerOrbit\fP &&from) noexcept"
.br
.ti -1c
.RI "\fBKepplerOrbit\fP & \fBoperator=\fP (const \fBKepplerOrbit\fP &from)"
.br
.ti -1c
.RI "\fBKepplerOrbit\fP & \fBoperator=\fP (\fBKepplerOrbit\fP &&from) noexcept"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet & \fBunknown_fields\fP () const"
.br
.ti -1c
.RI "inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet * \fBmutable_unknown_fields\fP ()"
.br
.ti -1c
.RI "void \fBSwap\fP (\fBKepplerOrbit\fP *other)"
.br
.ti -1c
.RI "void \fBUnsafeArenaSwap\fP (\fBKepplerOrbit\fP *other)"
.br
.ti -1c
.RI "\fBKepplerOrbit\fP * \fBNew\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena=nullptr) const final"
.br
.ti -1c
.RI "void \fBCopyFrom\fP (const \fBKepplerOrbit\fP &from)"
.br
.ti -1c
.RI "void \fBMergeFrom\fP (const \fBKepplerOrbit\fP &from)"
.br
.ti -1c
.RI "PROTOBUF_ATTRIBUTE_REINITIALIZES void \fBClear\fP () final"
.br
.ti -1c
.RI "bool \fBIsInitialized\fP () const final"
.br
.ti -1c
.RI "size_t \fBByteSizeLong\fP () const final"
.br
.ti -1c
.RI "const char * \fB_InternalParse\fP (const char *ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext *ctx) final"
.br
.ti -1c
.RI "uint8_t * \fB_InternalSerialize\fP (uint8_t *target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream *stream) const final"
.br
.ti -1c
.RI "int \fBGetCachedSize\fP () const final"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData * \fBGetClassData\fP () const final"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::Metadata \fBGetMetadata\fP () const final"
.br
.ti -1c
.RI "bool \fBhas_sat_prn\fP () const"
.br
.ti -1c
.RI "void \fBclear_sat_prn\fP ()"
.br
.ti -1c
.RI "uint32_t \fBsat_prn\fP () const"
.br
.ti -1c
.RI "void \fBset_sat_prn\fP (uint32_t value)"
.br
.ti -1c
.RI "bool \fBhas_year\fP () const"
.br
.ti -1c
.RI "void \fBclear_year\fP ()"
.br
.ti -1c
.RI "uint32_t \fByear\fP () const"
.br
.ti -1c
.RI "void \fBset_year\fP (uint32_t value)"
.br
.ti -1c
.RI "bool \fBhas_month\fP () const"
.br
.ti -1c
.RI "void \fBclear_month\fP ()"
.br
.ti -1c
.RI "uint32_t \fBmonth\fP () const"
.br
.ti -1c
.RI "void \fBset_month\fP (uint32_t value)"
.br
.ti -1c
.RI "bool \fBhas_day\fP () const"
.br
.ti -1c
.RI "void \fBclear_day\fP ()"
.br
.ti -1c
.RI "uint32_t \fBday\fP () const"
.br
.ti -1c
.RI "void \fBset_day\fP (uint32_t value)"
.br
.ti -1c
.RI "bool \fBhas_hour\fP () const"
.br
.ti -1c
.RI "void \fBclear_hour\fP ()"
.br
.ti -1c
.RI "uint32_t \fBhour\fP () const"
.br
.ti -1c
.RI "void \fBset_hour\fP (uint32_t value)"
.br
.ti -1c
.RI "bool \fBhas_minute\fP () const"
.br
.ti -1c
.RI "void \fBclear_minute\fP ()"
.br
.ti -1c
.RI "uint32_t \fBminute\fP () const"
.br
.ti -1c
.RI "void \fBset_minute\fP (uint32_t value)"
.br
.ti -1c
.RI "bool \fBhas_second_s\fP () const"
.br
.ti -1c
.RI "void \fBclear_second_s\fP ()"
.br
.ti -1c
.RI "double \fBsecond_s\fP () const"
.br
.ti -1c
.RI "void \fBset_second_s\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_reserved\fP () const"
.br
.ti -1c
.RI "void \fBclear_reserved\fP ()"
.br
.ti -1c
.RI "double \fBreserved\fP () const"
.br
.ti -1c
.RI "void \fBset_reserved\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_af0\fP () const"
.br
.ti -1c
.RI "void \fBclear_af0\fP ()"
.br
.ti -1c
.RI "double \fBaf0\fP () const"
.br
.ti -1c
.RI "void \fBset_af0\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_af1\fP () const"
.br
.ti -1c
.RI "void \fBclear_af1\fP ()"
.br
.ti -1c
.RI "double \fBaf1\fP () const"
.br
.ti -1c
.RI "void \fBset_af1\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_af2\fP () const"
.br
.ti -1c
.RI "void \fBclear_af2\fP ()"
.br
.ti -1c
.RI "double \fBaf2\fP () const"
.br
.ti -1c
.RI "void \fBset_af2\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_iode\fP () const"
.br
.ti -1c
.RI "void \fBclear_iode\fP ()"
.br
.ti -1c
.RI "double \fBiode\fP () const"
.br
.ti -1c
.RI "void \fBset_iode\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_deltan\fP () const"
.br
.ti -1c
.RI "void \fBclear_deltan\fP ()"
.br
.ti -1c
.RI "double \fBdeltan\fP () const"
.br
.ti -1c
.RI "void \fBset_deltan\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_m0\fP () const"
.br
.ti -1c
.RI "void \fBclear_m0\fP ()"
.br
.ti -1c
.RI "double \fBm0\fP () const"
.br
.ti -1c
.RI "void \fBset_m0\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_e\fP () const"
.br
.ti -1c
.RI "void \fBclear_e\fP ()"
.br
.ti -1c
.RI "double \fBe\fP () const"
.br
.ti -1c
.RI "void \fBset_e\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_roota\fP () const"
.br
.ti -1c
.RI "void \fBclear_roota\fP ()"
.br
.ti -1c
.RI "double \fBroota\fP () const"
.br
.ti -1c
.RI "void \fBset_roota\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_toe\fP () const"
.br
.ti -1c
.RI "void \fBclear_toe\fP ()"
.br
.ti -1c
.RI "double \fBtoe\fP () const"
.br
.ti -1c
.RI "void \fBset_toe\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_toc\fP () const"
.br
.ti -1c
.RI "void \fBclear_toc\fP ()"
.br
.ti -1c
.RI "double \fBtoc\fP () const"
.br
.ti -1c
.RI "void \fBset_toc\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_cic\fP () const"
.br
.ti -1c
.RI "void \fBclear_cic\fP ()"
.br
.ti -1c
.RI "double \fBcic\fP () const"
.br
.ti -1c
.RI "void \fBset_cic\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_week_num\fP () const"
.br
.ti -1c
.RI "void \fBclear_week_num\fP ()"
.br
.ti -1c
.RI "uint32_t \fBweek_num\fP () const"
.br
.ti -1c
.RI "void \fBset_week_num\fP (uint32_t value)"
.br
.ti -1c
.RI "bool \fBhas_l2pdataflag\fP () const"
.br
.ti -1c
.RI "void \fBclear_l2pdataflag\fP ()"
.br
.ti -1c
.RI "uint32_t \fBl2pdataflag\fP () const"
.br
.ti -1c
.RI "void \fBset_l2pdataflag\fP (uint32_t value)"
.br
.ti -1c
.RI "bool \fBhas_crc\fP () const"
.br
.ti -1c
.RI "void \fBclear_crc\fP ()"
.br
.ti -1c
.RI "double \fBcrc\fP () const"
.br
.ti -1c
.RI "void \fBset_crc\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_cis\fP () const"
.br
.ti -1c
.RI "void \fBclear_cis\fP ()"
.br
.ti -1c
.RI "double \fBcis\fP () const"
.br
.ti -1c
.RI "void \fBset_cis\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_crs\fP () const"
.br
.ti -1c
.RI "void \fBclear_crs\fP ()"
.br
.ti -1c
.RI "double \fBcrs\fP () const"
.br
.ti -1c
.RI "void \fBset_crs\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_cuc\fP () const"
.br
.ti -1c
.RI "void \fBclear_cuc\fP ()"
.br
.ti -1c
.RI "double \fBcuc\fP () const"
.br
.ti -1c
.RI "void \fBset_cuc\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_cus\fP () const"
.br
.ti -1c
.RI "void \fBclear_cus\fP ()"
.br
.ti -1c
.RI "double \fBcus\fP () const"
.br
.ti -1c
.RI "void \fBset_cus\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_omega0\fP () const"
.br
.ti -1c
.RI "void \fBclear_omega0\fP ()"
.br
.ti -1c
.RI "double \fBomega0\fP () const"
.br
.ti -1c
.RI "void \fBset_omega0\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_omega\fP () const"
.br
.ti -1c
.RI "void \fBclear_omega\fP ()"
.br
.ti -1c
.RI "double \fBomega\fP () const"
.br
.ti -1c
.RI "void \fBset_omega\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_i0\fP () const"
.br
.ti -1c
.RI "void \fBclear_i0\fP ()"
.br
.ti -1c
.RI "double \fBi0\fP () const"
.br
.ti -1c
.RI "void \fBset_i0\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_omegadot\fP () const"
.br
.ti -1c
.RI "void \fBclear_omegadot\fP ()"
.br
.ti -1c
.RI "double \fBomegadot\fP () const"
.br
.ti -1c
.RI "void \fBset_omegadot\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_idot\fP () const"
.br
.ti -1c
.RI "void \fBclear_idot\fP ()"
.br
.ti -1c
.RI "double \fBidot\fP () const"
.br
.ti -1c
.RI "void \fBset_idot\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_codesonl2channel\fP () const"
.br
.ti -1c
.RI "void \fBclear_codesonl2channel\fP ()"
.br
.ti -1c
.RI "double \fBcodesonl2channel\fP () const"
.br
.ti -1c
.RI "void \fBset_codesonl2channel\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_accuracy\fP () const"
.br
.ti -1c
.RI "void \fBclear_accuracy\fP ()"
.br
.ti -1c
.RI "uint32_t \fBaccuracy\fP () const"
.br
.ti -1c
.RI "void \fBset_accuracy\fP (uint32_t value)"
.br
.ti -1c
.RI "bool \fBhas_health\fP () const"
.br
.ti -1c
.RI "void \fBclear_health\fP ()"
.br
.ti -1c
.RI "uint32_t \fBhealth\fP () const"
.br
.ti -1c
.RI "void \fBset_health\fP (uint32_t value)"
.br
.ti -1c
.RI "bool \fBhas_tgd\fP () const"
.br
.ti -1c
.RI "void \fBclear_tgd\fP ()"
.br
.ti -1c
.RI "double \fBtgd\fP () const"
.br
.ti -1c
.RI "void \fBset_tgd\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_iodc\fP () const"
.br
.ti -1c
.RI "void \fBclear_iodc\fP ()"
.br
.ti -1c
.RI "double \fBiodc\fP () const"
.br
.ti -1c
.RI "void \fBset_iodc\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_gnss_type\fP () const"
.br
.ti -1c
.RI "void \fBclear_gnss_type\fP ()"
.br
.ti -1c
.RI "::apollo::drivers::gnss::GnssType \fBgnss_type\fP () const"
.br
.ti -1c
.RI "void \fBset_gnss_type\fP (::apollo::drivers::gnss::GnssType value)"
.br
.ti -1c
.RI "bool \fBhas_gnss_time_type\fP () const"
.br
.ti -1c
.RI "void \fBclear_gnss_time_type\fP ()"
.br
.ti -1c
.RI "::apollo::drivers::gnss::GnssTimeType \fBgnss_time_type\fP () const"
.br
.ti -1c
.RI "void \fBset_gnss_time_type\fP (::apollo::drivers::gnss::GnssTimeType value)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBdescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBGetDescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Reflection * \fBGetReflection\fP ()"
.br
.ti -1c
.RI "static const \fBKepplerOrbit\fP & \fBdefault_instance\fP ()"
.br
.ti -1c
.RI "static const \fBKepplerOrbit\fP * \fBinternal_default_instance\fP ()"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr int \fBkIndexInFileMessages\fP"
.br
.ti -1c
.RI "static const ClassData \fB_class_data_\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBKepplerOrbit\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena, bool is_message_owned=false)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fB::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata\fP"
.br
.ti -1c
.RI "template<typename T > class \fB::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper\fP"
.br
.ti -1c
.RI "struct \fB::TableStruct_modules_2fcommon_5fmsgs_2fsensor_5fmsgs_2fgnss_5fraw_5fobservation_2eproto\fP"
.br
.ti -1c
.RI "void \fBswap\fP (\fBKepplerOrbit\fP &a, \fBKepplerOrbit\fP &b)"
.br
.in -1c
.SH "Member Data Documentation"
.PP 
.SS "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData apollo::drivers::gnss::KepplerOrbit::_class_data_\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    KepplerOrbit::MergeImpl
}
.fi
.SS "constexpr int apollo::drivers::gnss::KepplerOrbit::kIndexInFileMessages\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    3
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Cyber-Cmake from the source code\&.
