.TH "apollo::prediction::ObstaclePriority" 3 "Sun Sep 3 2023" "Version 8.0" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
apollo::prediction::ObstaclePriority
.SH SYNOPSIS
.br
.PP
.PP
Inherits PROTOBUF_NAMESPACE_ID::Message\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fB_Internal\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum : int { \fBkPriorityFieldNumber\fP = 25 }"
.br
.ti -1c
.RI "typedef ObstaclePriority_Priority \fBPriority\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "constexpr \fBObstaclePriority\fP (::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)"
.br
.ti -1c
.RI "\fBObstaclePriority\fP (const \fBObstaclePriority\fP &from)"
.br
.ti -1c
.RI "\fBObstaclePriority\fP (\fBObstaclePriority\fP &&from) noexcept"
.br
.ti -1c
.RI "\fBObstaclePriority\fP & \fBoperator=\fP (const \fBObstaclePriority\fP &from)"
.br
.ti -1c
.RI "\fBObstaclePriority\fP & \fBoperator=\fP (\fBObstaclePriority\fP &&from) noexcept"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet & \fBunknown_fields\fP () const"
.br
.ti -1c
.RI "inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet * \fBmutable_unknown_fields\fP ()"
.br
.ti -1c
.RI "void \fBSwap\fP (\fBObstaclePriority\fP *other)"
.br
.ti -1c
.RI "void \fBUnsafeArenaSwap\fP (\fBObstaclePriority\fP *other)"
.br
.ti -1c
.RI "\fBObstaclePriority\fP * \fBNew\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena=nullptr) const final"
.br
.ti -1c
.RI "void \fBCopyFrom\fP (const \fBObstaclePriority\fP &from)"
.br
.ti -1c
.RI "void \fBMergeFrom\fP (const \fBObstaclePriority\fP &from)"
.br
.ti -1c
.RI "PROTOBUF_ATTRIBUTE_REINITIALIZES void \fBClear\fP () final"
.br
.ti -1c
.RI "bool \fBIsInitialized\fP () const final"
.br
.ti -1c
.RI "size_t \fBByteSizeLong\fP () const final"
.br
.ti -1c
.RI "const char * \fB_InternalParse\fP (const char *ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext *ctx) final"
.br
.ti -1c
.RI "uint8_t * \fB_InternalSerialize\fP (uint8_t *target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream *stream) const final"
.br
.ti -1c
.RI "int \fBGetCachedSize\fP () const final"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData * \fBGetClassData\fP () const final"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::Metadata \fBGetMetadata\fP () const final"
.br
.ti -1c
.RI "bool \fBhas_priority\fP () const"
.br
.ti -1c
.RI "void \fBclear_priority\fP ()"
.br
.ti -1c
.RI "::apollo::prediction::ObstaclePriority_Priority \fBpriority\fP () const"
.br
.ti -1c
.RI "void \fBset_priority\fP (::apollo::prediction::ObstaclePriority_Priority value)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBdescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBGetDescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Reflection * \fBGetReflection\fP ()"
.br
.ti -1c
.RI "static const \fBObstaclePriority\fP & \fBdefault_instance\fP ()"
.br
.ti -1c
.RI "static const \fBObstaclePriority\fP * \fBinternal_default_instance\fP ()"
.br
.ti -1c
.RI "static bool \fBPriority_IsValid\fP (int value)"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor * \fBPriority_descriptor\fP ()"
.br
.ti -1c
.RI "template<typename T > static const std::string & \fBPriority_Name\fP (T enum_t_value)"
.br
.ti -1c
.RI "static bool \fBPriority_Parse\fP (::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Priority *value)"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr int \fBkIndexInFileMessages\fP"
.br
.ti -1c
.RI "static const ClassData \fB_class_data_\fP"
.br
.ti -1c
.RI "static constexpr Priority \fBCAUTION\fP"
.br
.ti -1c
.RI "static constexpr Priority \fBNORMAL\fP"
.br
.ti -1c
.RI "static constexpr Priority \fBIGNORE\fP"
.br
.ti -1c
.RI "static constexpr Priority \fBPriority_MIN\fP"
.br
.ti -1c
.RI "static constexpr Priority \fBPriority_MAX\fP"
.br
.ti -1c
.RI "static constexpr int \fBPriority_ARRAYSIZE\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBObstaclePriority\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena, bool is_message_owned=false)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fB::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata\fP"
.br
.ti -1c
.RI "template<typename T > class \fB::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper\fP"
.br
.ti -1c
.RI "struct \fB::TableStruct_modules_2fcommon_5fmsgs_2fprediction_5fmsgs_2ffeature_2eproto\fP"
.br
.ti -1c
.RI "void \fBswap\fP (\fBObstaclePriority\fP &a, \fBObstaclePriority\fP &b)"
.br
.in -1c
.SH "Member Data Documentation"
.PP 
.SS "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData apollo::prediction::ObstaclePriority::_class_data_\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ObstaclePriority::MergeImpl
}
.fi
.SS "constexpr ObstaclePriority_Priority apollo::prediction::ObstaclePriority::CAUTION\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    ObstaclePriority_Priority_CAUTION
.fi
.SS "constexpr ObstaclePriority_Priority apollo::prediction::ObstaclePriority::IGNORE\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    ObstaclePriority_Priority_IGNORE
.fi
.SS "constexpr int apollo::prediction::ObstaclePriority::kIndexInFileMessages\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    4
.fi
.SS "constexpr ObstaclePriority_Priority apollo::prediction::ObstaclePriority::NORMAL\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    ObstaclePriority_Priority_NORMAL
.fi
.SS "constexpr int apollo::prediction::ObstaclePriority::Priority_ARRAYSIZE\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    ObstaclePriority_Priority_Priority_ARRAYSIZE
.fi
.SS "constexpr ObstaclePriority_Priority apollo::prediction::ObstaclePriority::Priority_MAX\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    ObstaclePriority_Priority_Priority_MAX
.fi
.SS "constexpr ObstaclePriority_Priority apollo::prediction::ObstaclePriority::Priority_MIN\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    ObstaclePriority_Priority_Priority_MIN
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Cyber-Cmake from the source code\&.
