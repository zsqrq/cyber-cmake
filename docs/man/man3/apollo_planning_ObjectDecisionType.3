.TH "apollo::planning::ObjectDecisionType" 3 "Sun Sep 3 2023" "Version 8.0" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
apollo::planning::ObjectDecisionType
.SH SYNOPSIS
.br
.PP
.PP
Inherits PROTOBUF_NAMESPACE_ID::Message\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fB_Internal\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBObjectTagCase\fP { \fBkIgnore\fP = 1, \fBkStop\fP = 2, \fBkFollow\fP = 3, \fBkYield\fP = 4, \fBkOvertake\fP = 5, \fBkNudge\fP = 6, \fBkAvoid\fP = 7, \fBkSidePass\fP = 8, \fBOBJECT_TAG_NOT_SET\fP = 0 }"
.br
.ti -1c
.RI "enum : int { \fBkIgnoreFieldNumber\fP = 1, \fBkStopFieldNumber\fP = 2, \fBkFollowFieldNumber\fP = 3, \fBkYieldFieldNumber\fP = 4, \fBkOvertakeFieldNumber\fP = 5, \fBkNudgeFieldNumber\fP = 6, \fBkAvoidFieldNumber\fP = 7, \fBkSidePassFieldNumber\fP = 8 }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "constexpr \fBObjectDecisionType\fP (::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)"
.br
.ti -1c
.RI "\fBObjectDecisionType\fP (const \fBObjectDecisionType\fP &from)"
.br
.ti -1c
.RI "\fBObjectDecisionType\fP (\fBObjectDecisionType\fP &&from) noexcept"
.br
.ti -1c
.RI "\fBObjectDecisionType\fP & \fBoperator=\fP (const \fBObjectDecisionType\fP &from)"
.br
.ti -1c
.RI "\fBObjectDecisionType\fP & \fBoperator=\fP (\fBObjectDecisionType\fP &&from) noexcept"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet & \fBunknown_fields\fP () const"
.br
.ti -1c
.RI "inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet * \fBmutable_unknown_fields\fP ()"
.br
.ti -1c
.RI "void \fBSwap\fP (\fBObjectDecisionType\fP *other)"
.br
.ti -1c
.RI "void \fBUnsafeArenaSwap\fP (\fBObjectDecisionType\fP *other)"
.br
.ti -1c
.RI "\fBObjectDecisionType\fP * \fBNew\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena=nullptr) const final"
.br
.ti -1c
.RI "void \fBCopyFrom\fP (const \fBObjectDecisionType\fP &from)"
.br
.ti -1c
.RI "void \fBMergeFrom\fP (const \fBObjectDecisionType\fP &from)"
.br
.ti -1c
.RI "PROTOBUF_ATTRIBUTE_REINITIALIZES void \fBClear\fP () final"
.br
.ti -1c
.RI "bool \fBIsInitialized\fP () const final"
.br
.ti -1c
.RI "size_t \fBByteSizeLong\fP () const final"
.br
.ti -1c
.RI "const char * \fB_InternalParse\fP (const char *ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext *ctx) final"
.br
.ti -1c
.RI "uint8_t * \fB_InternalSerialize\fP (uint8_t *target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream *stream) const final"
.br
.ti -1c
.RI "int \fBGetCachedSize\fP () const final"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData * \fBGetClassData\fP () const final"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::Metadata \fBGetMetadata\fP () const final"
.br
.ti -1c
.RI "bool \fBhas_ignore\fP () const"
.br
.ti -1c
.RI "void \fBclear_ignore\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::planning::ObjectIgnore\fP & \fBignore\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::planning::ObjectIgnore\fP * \fBrelease_ignore\fP ()"
.br
.ti -1c
.RI "::\fBapollo::planning::ObjectIgnore\fP * \fBmutable_ignore\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_ignore\fP (::\fBapollo::planning::ObjectIgnore\fP *ignore)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_ignore\fP (::\fBapollo::planning::ObjectIgnore\fP *ignore)"
.br
.ti -1c
.RI "::\fBapollo::planning::ObjectIgnore\fP * \fBunsafe_arena_release_ignore\fP ()"
.br
.ti -1c
.RI "bool \fBhas_stop\fP () const"
.br
.ti -1c
.RI "void \fBclear_stop\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::planning::ObjectStop\fP & \fBstop\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::planning::ObjectStop\fP * \fBrelease_stop\fP ()"
.br
.ti -1c
.RI "::\fBapollo::planning::ObjectStop\fP * \fBmutable_stop\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_stop\fP (::\fBapollo::planning::ObjectStop\fP *stop)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_stop\fP (::\fBapollo::planning::ObjectStop\fP *stop)"
.br
.ti -1c
.RI "::\fBapollo::planning::ObjectStop\fP * \fBunsafe_arena_release_stop\fP ()"
.br
.ti -1c
.RI "bool \fBhas_follow\fP () const"
.br
.ti -1c
.RI "void \fBclear_follow\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::planning::ObjectFollow\fP & \fBfollow\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::planning::ObjectFollow\fP * \fBrelease_follow\fP ()"
.br
.ti -1c
.RI "::\fBapollo::planning::ObjectFollow\fP * \fBmutable_follow\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_follow\fP (::\fBapollo::planning::ObjectFollow\fP *follow)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_follow\fP (::\fBapollo::planning::ObjectFollow\fP *follow)"
.br
.ti -1c
.RI "::\fBapollo::planning::ObjectFollow\fP * \fBunsafe_arena_release_follow\fP ()"
.br
.ti -1c
.RI "bool \fBhas_yield\fP () const"
.br
.ti -1c
.RI "void \fBclear_yield\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::planning::ObjectYield\fP & \fByield\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::planning::ObjectYield\fP * \fBrelease_yield\fP ()"
.br
.ti -1c
.RI "::\fBapollo::planning::ObjectYield\fP * \fBmutable_yield\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_yield\fP (::\fBapollo::planning::ObjectYield\fP *yield)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_yield\fP (::\fBapollo::planning::ObjectYield\fP *yield)"
.br
.ti -1c
.RI "::\fBapollo::planning::ObjectYield\fP * \fBunsafe_arena_release_yield\fP ()"
.br
.ti -1c
.RI "bool \fBhas_overtake\fP () const"
.br
.ti -1c
.RI "void \fBclear_overtake\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::planning::ObjectOvertake\fP & \fBovertake\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::planning::ObjectOvertake\fP * \fBrelease_overtake\fP ()"
.br
.ti -1c
.RI "::\fBapollo::planning::ObjectOvertake\fP * \fBmutable_overtake\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_overtake\fP (::\fBapollo::planning::ObjectOvertake\fP *overtake)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_overtake\fP (::\fBapollo::planning::ObjectOvertake\fP *overtake)"
.br
.ti -1c
.RI "::\fBapollo::planning::ObjectOvertake\fP * \fBunsafe_arena_release_overtake\fP ()"
.br
.ti -1c
.RI "bool \fBhas_nudge\fP () const"
.br
.ti -1c
.RI "void \fBclear_nudge\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::planning::ObjectNudge\fP & \fBnudge\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::planning::ObjectNudge\fP * \fBrelease_nudge\fP ()"
.br
.ti -1c
.RI "::\fBapollo::planning::ObjectNudge\fP * \fBmutable_nudge\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_nudge\fP (::\fBapollo::planning::ObjectNudge\fP *nudge)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_nudge\fP (::\fBapollo::planning::ObjectNudge\fP *nudge)"
.br
.ti -1c
.RI "::\fBapollo::planning::ObjectNudge\fP * \fBunsafe_arena_release_nudge\fP ()"
.br
.ti -1c
.RI "bool \fBhas_avoid\fP () const"
.br
.ti -1c
.RI "void \fBclear_avoid\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::planning::ObjectAvoid\fP & \fBavoid\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::planning::ObjectAvoid\fP * \fBrelease_avoid\fP ()"
.br
.ti -1c
.RI "::\fBapollo::planning::ObjectAvoid\fP * \fBmutable_avoid\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_avoid\fP (::\fBapollo::planning::ObjectAvoid\fP *avoid)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_avoid\fP (::\fBapollo::planning::ObjectAvoid\fP *avoid)"
.br
.ti -1c
.RI "::\fBapollo::planning::ObjectAvoid\fP * \fBunsafe_arena_release_avoid\fP ()"
.br
.ti -1c
.RI "bool \fBhas_side_pass\fP () const"
.br
.ti -1c
.RI "void \fBclear_side_pass\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::planning::ObjectSidePass\fP & \fBside_pass\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::planning::ObjectSidePass\fP * \fBrelease_side_pass\fP ()"
.br
.ti -1c
.RI "::\fBapollo::planning::ObjectSidePass\fP * \fBmutable_side_pass\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_side_pass\fP (::\fBapollo::planning::ObjectSidePass\fP *side_pass)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_side_pass\fP (::\fBapollo::planning::ObjectSidePass\fP *side_pass)"
.br
.ti -1c
.RI "::\fBapollo::planning::ObjectSidePass\fP * \fBunsafe_arena_release_side_pass\fP ()"
.br
.ti -1c
.RI "void \fBclear_object_tag\fP ()"
.br
.ti -1c
.RI "ObjectTagCase \fBobject_tag_case\fP () const"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBdescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBGetDescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Reflection * \fBGetReflection\fP ()"
.br
.ti -1c
.RI "static const \fBObjectDecisionType\fP & \fBdefault_instance\fP ()"
.br
.ti -1c
.RI "static const \fBObjectDecisionType\fP * \fBinternal_default_instance\fP ()"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr int \fBkIndexInFileMessages\fP"
.br
.ti -1c
.RI "static const ClassData \fB_class_data_\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBObjectDecisionType\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena, bool is_message_owned=false)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fB::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata\fP"
.br
.ti -1c
.RI "template<typename T > class \fB::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper\fP"
.br
.ti -1c
.RI "struct \fB::TableStruct_modules_2fcommon_5fmsgs_2fplanning_5fmsgs_2fdecision_2eproto\fP"
.br
.ti -1c
.RI "void \fBswap\fP (\fBObjectDecisionType\fP &a, \fBObjectDecisionType\fP &b)"
.br
.in -1c
.SH "Member Data Documentation"
.PP 
.SS "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData apollo::planning::ObjectDecisionType::_class_data_\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ObjectDecisionType::MergeImpl
}
.fi
.SS "constexpr int apollo::planning::ObjectDecisionType::kIndexInFileMessages\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    13
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Cyber-Cmake from the source code\&.
