.TH "apollo::drivers::gnss::Heading::_Internal" 3 "Sun Sep 3 2023" "Version 8.0" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
apollo::drivers::gnss::Heading::_Internal
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "using \fBHasBits\fP = decltype(std::declval< \fBHeading\fP >()\&._has_bits_)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static const ::\fBapollo::common::Header\fP & \fBheader\fP (const \fBHeading\fP *msg)"
.br
.ti -1c
.RI "static void \fBset_has_header\fP (HasBits *has_bits)"
.br
.ti -1c
.RI "static void \fBset_has_measurement_time\fP (HasBits *has_bits)"
.br
.ti -1c
.RI "static void \fBset_has_solution_status\fP (HasBits *has_bits)"
.br
.ti -1c
.RI "static void \fBset_has_position_type\fP (HasBits *has_bits)"
.br
.ti -1c
.RI "static void \fBset_has_baseline_length\fP (HasBits *has_bits)"
.br
.ti -1c
.RI "static void \fBset_has_heading\fP (HasBits *has_bits)"
.br
.ti -1c
.RI "static void \fBset_has_pitch\fP (HasBits *has_bits)"
.br
.ti -1c
.RI "static void \fBset_has_reserved\fP (HasBits *has_bits)"
.br
.ti -1c
.RI "static void \fBset_has_heading_std_dev\fP (HasBits *has_bits)"
.br
.ti -1c
.RI "static void \fBset_has_pitch_std_dev\fP (HasBits *has_bits)"
.br
.ti -1c
.RI "static void \fBset_has_station_id\fP (HasBits *has_bits)"
.br
.ti -1c
.RI "static void \fBset_has_satellite_tracked_number\fP (HasBits *has_bits)"
.br
.ti -1c
.RI "static void \fBset_has_satellite_soulution_number\fP (HasBits *has_bits)"
.br
.ti -1c
.RI "static void \fBset_has_satellite_number_obs\fP (HasBits *has_bits)"
.br
.ti -1c
.RI "static void \fBset_has_satellite_number_multi\fP (HasBits *has_bits)"
.br
.ti -1c
.RI "static void \fBset_has_solution_source\fP (HasBits *has_bits)"
.br
.ti -1c
.RI "static void \fBset_has_extended_solution_status\fP (HasBits *has_bits)"
.br
.ti -1c
.RI "static void \fBset_has_galileo_beidou_sig_mask\fP (HasBits *has_bits)"
.br
.ti -1c
.RI "static void \fBset_has_gps_glonass_sig_mask\fP (HasBits *has_bits)"
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for Cyber-Cmake from the source code\&.
