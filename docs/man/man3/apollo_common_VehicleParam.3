.TH "apollo::common::VehicleParam" 3 "Sun Sep 3 2023" "Version 8.0" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
apollo::common::VehicleParam
.SH SYNOPSIS
.br
.PP
.PP
Inherits PROTOBUF_NAMESPACE_ID::Message\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fB_Internal\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum : int { \fBkVehicleIdFieldNumber\fP = 2, \fBkSteeringLatencyParamFieldNumber\fP = 22, \fBkThrottleLatencyParamFieldNumber\fP = 23, \fBkBrakeLatencyParamFieldNumber\fP = 24, \fBkBrandFieldNumber\fP = 1, \fBkMaxAbsSpeedWhenStoppedFieldNumber\fP = 19, \fBkFrontEdgeToCenterFieldNumber\fP = 3, \fBkBackEdgeToCenterFieldNumber\fP = 4, \fBkLeftEdgeToCenterFieldNumber\fP = 5, \fBkRightEdgeToCenterFieldNumber\fP = 6, \fBkLengthFieldNumber\fP = 7, \fBkWidthFieldNumber\fP = 8, \fBkHeightFieldNumber\fP = 9, \fBkMinTurnRadiusFieldNumber\fP = 10, \fBkMaxAccelerationFieldNumber\fP = 11, \fBkMaxDecelerationFieldNumber\fP = 12, \fBkMaxSteerAngleFieldNumber\fP = 13, \fBkMaxSteerAngleRateFieldNumber\fP = 14, \fBkMinSteerAngleRateFieldNumber\fP = 15, \fBkSteerRatioFieldNumber\fP = 16, \fBkWheelBaseFieldNumber\fP = 17, \fBkWheelRollingRadiusFieldNumber\fP = 18, \fBkBrakeDeadzoneFieldNumber\fP = 20, \fBkThrottleDeadzoneFieldNumber\fP = 21 }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "constexpr \fBVehicleParam\fP (::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)"
.br
.ti -1c
.RI "\fBVehicleParam\fP (const \fBVehicleParam\fP &from)"
.br
.ti -1c
.RI "\fBVehicleParam\fP (\fBVehicleParam\fP &&from) noexcept"
.br
.ti -1c
.RI "\fBVehicleParam\fP & \fBoperator=\fP (const \fBVehicleParam\fP &from)"
.br
.ti -1c
.RI "\fBVehicleParam\fP & \fBoperator=\fP (\fBVehicleParam\fP &&from) noexcept"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet & \fBunknown_fields\fP () const"
.br
.ti -1c
.RI "inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet * \fBmutable_unknown_fields\fP ()"
.br
.ti -1c
.RI "void \fBSwap\fP (\fBVehicleParam\fP *other)"
.br
.ti -1c
.RI "void \fBUnsafeArenaSwap\fP (\fBVehicleParam\fP *other)"
.br
.ti -1c
.RI "\fBVehicleParam\fP * \fBNew\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena=nullptr) const final"
.br
.ti -1c
.RI "void \fBCopyFrom\fP (const \fBVehicleParam\fP &from)"
.br
.ti -1c
.RI "void \fBMergeFrom\fP (const \fBVehicleParam\fP &from)"
.br
.ti -1c
.RI "PROTOBUF_ATTRIBUTE_REINITIALIZES void \fBClear\fP () final"
.br
.ti -1c
.RI "bool \fBIsInitialized\fP () const final"
.br
.ti -1c
.RI "size_t \fBByteSizeLong\fP () const final"
.br
.ti -1c
.RI "const char * \fB_InternalParse\fP (const char *ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext *ctx) final"
.br
.ti -1c
.RI "uint8_t * \fB_InternalSerialize\fP (uint8_t *target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream *stream) const final"
.br
.ti -1c
.RI "int \fBGetCachedSize\fP () const final"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData * \fBGetClassData\fP () const final"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::Metadata \fBGetMetadata\fP () const final"
.br
.ti -1c
.RI "bool \fBhas_vehicle_id\fP () const"
.br
.ti -1c
.RI "void \fBclear_vehicle_id\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::common::VehicleID\fP & \fBvehicle_id\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::common::VehicleID\fP * \fBrelease_vehicle_id\fP ()"
.br
.ti -1c
.RI "::\fBapollo::common::VehicleID\fP * \fBmutable_vehicle_id\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_vehicle_id\fP (::\fBapollo::common::VehicleID\fP *vehicle_id)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_vehicle_id\fP (::\fBapollo::common::VehicleID\fP *vehicle_id)"
.br
.ti -1c
.RI "::\fBapollo::common::VehicleID\fP * \fBunsafe_arena_release_vehicle_id\fP ()"
.br
.ti -1c
.RI "bool \fBhas_steering_latency_param\fP () const"
.br
.ti -1c
.RI "void \fBclear_steering_latency_param\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::common::LatencyParam\fP & \fBsteering_latency_param\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::common::LatencyParam\fP * \fBrelease_steering_latency_param\fP ()"
.br
.ti -1c
.RI "::\fBapollo::common::LatencyParam\fP * \fBmutable_steering_latency_param\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_steering_latency_param\fP (::\fBapollo::common::LatencyParam\fP *steering_latency_param)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_steering_latency_param\fP (::\fBapollo::common::LatencyParam\fP *steering_latency_param)"
.br
.ti -1c
.RI "::\fBapollo::common::LatencyParam\fP * \fBunsafe_arena_release_steering_latency_param\fP ()"
.br
.ti -1c
.RI "bool \fBhas_throttle_latency_param\fP () const"
.br
.ti -1c
.RI "void \fBclear_throttle_latency_param\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::common::LatencyParam\fP & \fBthrottle_latency_param\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::common::LatencyParam\fP * \fBrelease_throttle_latency_param\fP ()"
.br
.ti -1c
.RI "::\fBapollo::common::LatencyParam\fP * \fBmutable_throttle_latency_param\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_throttle_latency_param\fP (::\fBapollo::common::LatencyParam\fP *throttle_latency_param)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_throttle_latency_param\fP (::\fBapollo::common::LatencyParam\fP *throttle_latency_param)"
.br
.ti -1c
.RI "::\fBapollo::common::LatencyParam\fP * \fBunsafe_arena_release_throttle_latency_param\fP ()"
.br
.ti -1c
.RI "bool \fBhas_brake_latency_param\fP () const"
.br
.ti -1c
.RI "void \fBclear_brake_latency_param\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::common::LatencyParam\fP & \fBbrake_latency_param\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::common::LatencyParam\fP * \fBrelease_brake_latency_param\fP ()"
.br
.ti -1c
.RI "::\fBapollo::common::LatencyParam\fP * \fBmutable_brake_latency_param\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_brake_latency_param\fP (::\fBapollo::common::LatencyParam\fP *brake_latency_param)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_brake_latency_param\fP (::\fBapollo::common::LatencyParam\fP *brake_latency_param)"
.br
.ti -1c
.RI "::\fBapollo::common::LatencyParam\fP * \fBunsafe_arena_release_brake_latency_param\fP ()"
.br
.ti -1c
.RI "bool \fBhas_brand\fP () const"
.br
.ti -1c
.RI "void \fBclear_brand\fP ()"
.br
.ti -1c
.RI "::apollo::common::VehicleBrand \fBbrand\fP () const"
.br
.ti -1c
.RI "void \fBset_brand\fP (::apollo::common::VehicleBrand value)"
.br
.ti -1c
.RI "bool \fBhas_max_abs_speed_when_stopped\fP () const"
.br
.ti -1c
.RI "void \fBclear_max_abs_speed_when_stopped\fP ()"
.br
.ti -1c
.RI "float \fBmax_abs_speed_when_stopped\fP () const"
.br
.ti -1c
.RI "void \fBset_max_abs_speed_when_stopped\fP (float value)"
.br
.ti -1c
.RI "bool \fBhas_front_edge_to_center\fP () const"
.br
.ti -1c
.RI "void \fBclear_front_edge_to_center\fP ()"
.br
.ti -1c
.RI "double \fBfront_edge_to_center\fP () const"
.br
.ti -1c
.RI "void \fBset_front_edge_to_center\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_back_edge_to_center\fP () const"
.br
.ti -1c
.RI "void \fBclear_back_edge_to_center\fP ()"
.br
.ti -1c
.RI "double \fBback_edge_to_center\fP () const"
.br
.ti -1c
.RI "void \fBset_back_edge_to_center\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_left_edge_to_center\fP () const"
.br
.ti -1c
.RI "void \fBclear_left_edge_to_center\fP ()"
.br
.ti -1c
.RI "double \fBleft_edge_to_center\fP () const"
.br
.ti -1c
.RI "void \fBset_left_edge_to_center\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_right_edge_to_center\fP () const"
.br
.ti -1c
.RI "void \fBclear_right_edge_to_center\fP ()"
.br
.ti -1c
.RI "double \fBright_edge_to_center\fP () const"
.br
.ti -1c
.RI "void \fBset_right_edge_to_center\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_length\fP () const"
.br
.ti -1c
.RI "void \fBclear_length\fP ()"
.br
.ti -1c
.RI "double \fBlength\fP () const"
.br
.ti -1c
.RI "void \fBset_length\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_width\fP () const"
.br
.ti -1c
.RI "void \fBclear_width\fP ()"
.br
.ti -1c
.RI "double \fBwidth\fP () const"
.br
.ti -1c
.RI "void \fBset_width\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_height\fP () const"
.br
.ti -1c
.RI "void \fBclear_height\fP ()"
.br
.ti -1c
.RI "double \fBheight\fP () const"
.br
.ti -1c
.RI "void \fBset_height\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_min_turn_radius\fP () const"
.br
.ti -1c
.RI "void \fBclear_min_turn_radius\fP ()"
.br
.ti -1c
.RI "double \fBmin_turn_radius\fP () const"
.br
.ti -1c
.RI "void \fBset_min_turn_radius\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_max_acceleration\fP () const"
.br
.ti -1c
.RI "void \fBclear_max_acceleration\fP ()"
.br
.ti -1c
.RI "double \fBmax_acceleration\fP () const"
.br
.ti -1c
.RI "void \fBset_max_acceleration\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_max_deceleration\fP () const"
.br
.ti -1c
.RI "void \fBclear_max_deceleration\fP ()"
.br
.ti -1c
.RI "double \fBmax_deceleration\fP () const"
.br
.ti -1c
.RI "void \fBset_max_deceleration\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_max_steer_angle\fP () const"
.br
.ti -1c
.RI "void \fBclear_max_steer_angle\fP ()"
.br
.ti -1c
.RI "double \fBmax_steer_angle\fP () const"
.br
.ti -1c
.RI "void \fBset_max_steer_angle\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_max_steer_angle_rate\fP () const"
.br
.ti -1c
.RI "void \fBclear_max_steer_angle_rate\fP ()"
.br
.ti -1c
.RI "double \fBmax_steer_angle_rate\fP () const"
.br
.ti -1c
.RI "void \fBset_max_steer_angle_rate\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_min_steer_angle_rate\fP () const"
.br
.ti -1c
.RI "void \fBclear_min_steer_angle_rate\fP ()"
.br
.ti -1c
.RI "double \fBmin_steer_angle_rate\fP () const"
.br
.ti -1c
.RI "void \fBset_min_steer_angle_rate\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_steer_ratio\fP () const"
.br
.ti -1c
.RI "void \fBclear_steer_ratio\fP ()"
.br
.ti -1c
.RI "double \fBsteer_ratio\fP () const"
.br
.ti -1c
.RI "void \fBset_steer_ratio\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_wheel_base\fP () const"
.br
.ti -1c
.RI "void \fBclear_wheel_base\fP ()"
.br
.ti -1c
.RI "double \fBwheel_base\fP () const"
.br
.ti -1c
.RI "void \fBset_wheel_base\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_wheel_rolling_radius\fP () const"
.br
.ti -1c
.RI "void \fBclear_wheel_rolling_radius\fP ()"
.br
.ti -1c
.RI "double \fBwheel_rolling_radius\fP () const"
.br
.ti -1c
.RI "void \fBset_wheel_rolling_radius\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_brake_deadzone\fP () const"
.br
.ti -1c
.RI "void \fBclear_brake_deadzone\fP ()"
.br
.ti -1c
.RI "double \fBbrake_deadzone\fP () const"
.br
.ti -1c
.RI "void \fBset_brake_deadzone\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_throttle_deadzone\fP () const"
.br
.ti -1c
.RI "void \fBclear_throttle_deadzone\fP ()"
.br
.ti -1c
.RI "double \fBthrottle_deadzone\fP () const"
.br
.ti -1c
.RI "void \fBset_throttle_deadzone\fP (double value)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBdescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBGetDescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Reflection * \fBGetReflection\fP ()"
.br
.ti -1c
.RI "static const \fBVehicleParam\fP & \fBdefault_instance\fP ()"
.br
.ti -1c
.RI "static const \fBVehicleParam\fP * \fBinternal_default_instance\fP ()"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr int \fBkIndexInFileMessages\fP"
.br
.ti -1c
.RI "static const ClassData \fB_class_data_\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBVehicleParam\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena, bool is_message_owned=false)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fB::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata\fP"
.br
.ti -1c
.RI "template<typename T > class \fB::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper\fP"
.br
.ti -1c
.RI "struct \fB::TableStruct_modules_2fcommon_5fmsgs_2fconfig_5fmsgs_2fvehicle_5fconfig_2eproto\fP"
.br
.ti -1c
.RI "void \fBswap\fP (\fBVehicleParam\fP &a, \fBVehicleParam\fP &b)"
.br
.in -1c
.SH "Member Data Documentation"
.PP 
.SS "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData apollo::common::VehicleParam::_class_data_\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    VehicleParam::MergeImpl
}
.fi
.SS "constexpr int apollo::common::VehicleParam::kIndexInFileMessages\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    3
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Cyber-Cmake from the source code\&.
