.TH "apollo::drivers::gnss::GnssBestPose" 3 "Sun Sep 3 2023" "Version 8.0" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
apollo::drivers::gnss::GnssBestPose
.SH SYNOPSIS
.br
.PP
.PP
Inherits PROTOBUF_NAMESPACE_ID::Message\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fB_Internal\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum : int { \fBkBaseStationIdFieldNumber\fP = 13, \fBkHeaderFieldNumber\fP = 1, \fBkMeasurementTimeFieldNumber\fP = 2, \fBkSolStatusFieldNumber\fP = 3, \fBkSolTypeFieldNumber\fP = 4, \fBkLatitudeFieldNumber\fP = 5, \fBkLongitudeFieldNumber\fP = 6, \fBkHeightMslFieldNumber\fP = 7, \fBkUndulationFieldNumber\fP = 8, \fBkLatitudeStdDevFieldNumber\fP = 10, \fBkLongitudeStdDevFieldNumber\fP = 11, \fBkHeightStdDevFieldNumber\fP = 12, \fBkDifferentialAgeFieldNumber\fP = 14, \fBkSolutionAgeFieldNumber\fP = 15, \fBkNumSatsTrackedFieldNumber\fP = 16, \fBkNumSatsInSolutionFieldNumber\fP = 17, \fBkNumSatsL1FieldNumber\fP = 18, \fBkNumSatsMultiFieldNumber\fP = 19, \fBkReservedFieldNumber\fP = 20, \fBkExtendedSolutionStatusFieldNumber\fP = 21, \fBkGalileoBeidouUsedMaskFieldNumber\fP = 22, \fBkGpsGlonassUsedMaskFieldNumber\fP = 23, \fBkDatumIdFieldNumber\fP = 9 }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "constexpr \fBGnssBestPose\fP (::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)"
.br
.ti -1c
.RI "\fBGnssBestPose\fP (const \fBGnssBestPose\fP &from)"
.br
.ti -1c
.RI "\fBGnssBestPose\fP (\fBGnssBestPose\fP &&from) noexcept"
.br
.ti -1c
.RI "\fBGnssBestPose\fP & \fBoperator=\fP (const \fBGnssBestPose\fP &from)"
.br
.ti -1c
.RI "\fBGnssBestPose\fP & \fBoperator=\fP (\fBGnssBestPose\fP &&from) noexcept"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet & \fBunknown_fields\fP () const"
.br
.ti -1c
.RI "inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet * \fBmutable_unknown_fields\fP ()"
.br
.ti -1c
.RI "void \fBSwap\fP (\fBGnssBestPose\fP *other)"
.br
.ti -1c
.RI "void \fBUnsafeArenaSwap\fP (\fBGnssBestPose\fP *other)"
.br
.ti -1c
.RI "\fBGnssBestPose\fP * \fBNew\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena=nullptr) const final"
.br
.ti -1c
.RI "void \fBCopyFrom\fP (const \fBGnssBestPose\fP &from)"
.br
.ti -1c
.RI "void \fBMergeFrom\fP (const \fBGnssBestPose\fP &from)"
.br
.ti -1c
.RI "PROTOBUF_ATTRIBUTE_REINITIALIZES void \fBClear\fP () final"
.br
.ti -1c
.RI "bool \fBIsInitialized\fP () const final"
.br
.ti -1c
.RI "size_t \fBByteSizeLong\fP () const final"
.br
.ti -1c
.RI "const char * \fB_InternalParse\fP (const char *ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext *ctx) final"
.br
.ti -1c
.RI "uint8_t * \fB_InternalSerialize\fP (uint8_t *target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream *stream) const final"
.br
.ti -1c
.RI "int \fBGetCachedSize\fP () const final"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData * \fBGetClassData\fP () const final"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::Metadata \fBGetMetadata\fP () const final"
.br
.ti -1c
.RI "bool \fBhas_base_station_id\fP () const"
.br
.ti -1c
.RI "void \fBclear_base_station_id\fP ()"
.br
.ti -1c
.RI "const std::string & \fBbase_station_id\fP () const"
.br
.ti -1c
.RI "template<typename ArgT0  = const std::string&, typename\&.\&.\&. ArgT> void \fBset_base_station_id\fP (ArgT0 &&arg0, ArgT\&.\&.\&. args)"
.br
.ti -1c
.RI "std::string * \fBmutable_base_station_id\fP ()"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD std::string * \fBrelease_base_station_id\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_base_station_id\fP (std::string *base_station_id)"
.br
.ti -1c
.RI "bool \fBhas_header\fP () const"
.br
.ti -1c
.RI "void \fBclear_header\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::common::Header\fP & \fBheader\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::common::Header\fP * \fBrelease_header\fP ()"
.br
.ti -1c
.RI "::\fBapollo::common::Header\fP * \fBmutable_header\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_header\fP (::\fBapollo::common::Header\fP *header)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_header\fP (::\fBapollo::common::Header\fP *header)"
.br
.ti -1c
.RI "::\fBapollo::common::Header\fP * \fBunsafe_arena_release_header\fP ()"
.br
.ti -1c
.RI "bool \fBhas_measurement_time\fP () const"
.br
.ti -1c
.RI "void \fBclear_measurement_time\fP ()"
.br
.ti -1c
.RI "double \fBmeasurement_time\fP () const"
.br
.ti -1c
.RI "void \fBset_measurement_time\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_sol_status\fP () const"
.br
.ti -1c
.RI "void \fBclear_sol_status\fP ()"
.br
.ti -1c
.RI "::apollo::drivers::gnss::SolutionStatus \fBsol_status\fP () const"
.br
.ti -1c
.RI "void \fBset_sol_status\fP (::apollo::drivers::gnss::SolutionStatus value)"
.br
.ti -1c
.RI "bool \fBhas_sol_type\fP () const"
.br
.ti -1c
.RI "void \fBclear_sol_type\fP ()"
.br
.ti -1c
.RI "::apollo::drivers::gnss::SolutionType \fBsol_type\fP () const"
.br
.ti -1c
.RI "void \fBset_sol_type\fP (::apollo::drivers::gnss::SolutionType value)"
.br
.ti -1c
.RI "bool \fBhas_latitude\fP () const"
.br
.ti -1c
.RI "void \fBclear_latitude\fP ()"
.br
.ti -1c
.RI "double \fBlatitude\fP () const"
.br
.ti -1c
.RI "void \fBset_latitude\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_longitude\fP () const"
.br
.ti -1c
.RI "void \fBclear_longitude\fP ()"
.br
.ti -1c
.RI "double \fBlongitude\fP () const"
.br
.ti -1c
.RI "void \fBset_longitude\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_height_msl\fP () const"
.br
.ti -1c
.RI "void \fBclear_height_msl\fP ()"
.br
.ti -1c
.RI "double \fBheight_msl\fP () const"
.br
.ti -1c
.RI "void \fBset_height_msl\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_undulation\fP () const"
.br
.ti -1c
.RI "void \fBclear_undulation\fP ()"
.br
.ti -1c
.RI "float \fBundulation\fP () const"
.br
.ti -1c
.RI "void \fBset_undulation\fP (float value)"
.br
.ti -1c
.RI "bool \fBhas_latitude_std_dev\fP () const"
.br
.ti -1c
.RI "void \fBclear_latitude_std_dev\fP ()"
.br
.ti -1c
.RI "float \fBlatitude_std_dev\fP () const"
.br
.ti -1c
.RI "void \fBset_latitude_std_dev\fP (float value)"
.br
.ti -1c
.RI "bool \fBhas_longitude_std_dev\fP () const"
.br
.ti -1c
.RI "void \fBclear_longitude_std_dev\fP ()"
.br
.ti -1c
.RI "float \fBlongitude_std_dev\fP () const"
.br
.ti -1c
.RI "void \fBset_longitude_std_dev\fP (float value)"
.br
.ti -1c
.RI "bool \fBhas_height_std_dev\fP () const"
.br
.ti -1c
.RI "void \fBclear_height_std_dev\fP ()"
.br
.ti -1c
.RI "float \fBheight_std_dev\fP () const"
.br
.ti -1c
.RI "void \fBset_height_std_dev\fP (float value)"
.br
.ti -1c
.RI "bool \fBhas_differential_age\fP () const"
.br
.ti -1c
.RI "void \fBclear_differential_age\fP ()"
.br
.ti -1c
.RI "float \fBdifferential_age\fP () const"
.br
.ti -1c
.RI "void \fBset_differential_age\fP (float value)"
.br
.ti -1c
.RI "bool \fBhas_solution_age\fP () const"
.br
.ti -1c
.RI "void \fBclear_solution_age\fP ()"
.br
.ti -1c
.RI "float \fBsolution_age\fP () const"
.br
.ti -1c
.RI "void \fBset_solution_age\fP (float value)"
.br
.ti -1c
.RI "bool \fBhas_num_sats_tracked\fP () const"
.br
.ti -1c
.RI "void \fBclear_num_sats_tracked\fP ()"
.br
.ti -1c
.RI "uint32_t \fBnum_sats_tracked\fP () const"
.br
.ti -1c
.RI "void \fBset_num_sats_tracked\fP (uint32_t value)"
.br
.ti -1c
.RI "bool \fBhas_num_sats_in_solution\fP () const"
.br
.ti -1c
.RI "void \fBclear_num_sats_in_solution\fP ()"
.br
.ti -1c
.RI "uint32_t \fBnum_sats_in_solution\fP () const"
.br
.ti -1c
.RI "void \fBset_num_sats_in_solution\fP (uint32_t value)"
.br
.ti -1c
.RI "bool \fBhas_num_sats_l1\fP () const"
.br
.ti -1c
.RI "void \fBclear_num_sats_l1\fP ()"
.br
.ti -1c
.RI "uint32_t \fBnum_sats_l1\fP () const"
.br
.ti -1c
.RI "void \fBset_num_sats_l1\fP (uint32_t value)"
.br
.ti -1c
.RI "bool \fBhas_num_sats_multi\fP () const"
.br
.ti -1c
.RI "void \fBclear_num_sats_multi\fP ()"
.br
.ti -1c
.RI "uint32_t \fBnum_sats_multi\fP () const"
.br
.ti -1c
.RI "void \fBset_num_sats_multi\fP (uint32_t value)"
.br
.ti -1c
.RI "bool \fBhas_reserved\fP () const"
.br
.ti -1c
.RI "void \fBclear_reserved\fP ()"
.br
.ti -1c
.RI "uint32_t \fBreserved\fP () const"
.br
.ti -1c
.RI "void \fBset_reserved\fP (uint32_t value)"
.br
.ti -1c
.RI "bool \fBhas_extended_solution_status\fP () const"
.br
.ti -1c
.RI "void \fBclear_extended_solution_status\fP ()"
.br
.ti -1c
.RI "uint32_t \fBextended_solution_status\fP () const"
.br
.ti -1c
.RI "void \fBset_extended_solution_status\fP (uint32_t value)"
.br
.ti -1c
.RI "bool \fBhas_galileo_beidou_used_mask\fP () const"
.br
.ti -1c
.RI "void \fBclear_galileo_beidou_used_mask\fP ()"
.br
.ti -1c
.RI "uint32_t \fBgalileo_beidou_used_mask\fP () const"
.br
.ti -1c
.RI "void \fBset_galileo_beidou_used_mask\fP (uint32_t value)"
.br
.ti -1c
.RI "bool \fBhas_gps_glonass_used_mask\fP () const"
.br
.ti -1c
.RI "void \fBclear_gps_glonass_used_mask\fP ()"
.br
.ti -1c
.RI "uint32_t \fBgps_glonass_used_mask\fP () const"
.br
.ti -1c
.RI "void \fBset_gps_glonass_used_mask\fP (uint32_t value)"
.br
.ti -1c
.RI "bool \fBhas_datum_id\fP () const"
.br
.ti -1c
.RI "void \fBclear_datum_id\fP ()"
.br
.ti -1c
.RI "::apollo::drivers::gnss::DatumId \fBdatum_id\fP () const"
.br
.ti -1c
.RI "void \fBset_datum_id\fP (::apollo::drivers::gnss::DatumId value)"
.br
.ti -1c
.RI "template<typename ArgT0 , typename\&.\&.\&. ArgT> PROTOBUF_ALWAYS_INLINE void \fBset_base_station_id\fP (ArgT0 &&arg0, ArgT\&.\&.\&. args)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBdescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBGetDescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Reflection * \fBGetReflection\fP ()"
.br
.ti -1c
.RI "static const \fBGnssBestPose\fP & \fBdefault_instance\fP ()"
.br
.ti -1c
.RI "static const \fBGnssBestPose\fP * \fBinternal_default_instance\fP ()"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr int \fBkIndexInFileMessages\fP"
.br
.ti -1c
.RI "static const ClassData \fB_class_data_\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBGnssBestPose\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena, bool is_message_owned=false)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fB::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata\fP"
.br
.ti -1c
.RI "template<typename T > class \fB::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper\fP"
.br
.ti -1c
.RI "struct \fB::TableStruct_modules_2fcommon_5fmsgs_2fsensor_5fmsgs_2fgnss_5fbest_5fpose_2eproto\fP"
.br
.ti -1c
.RI "void \fBswap\fP (\fBGnssBestPose\fP &a, \fBGnssBestPose\fP &b)"
.br
.in -1c
.SH "Member Data Documentation"
.PP 
.SS "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData apollo::drivers::gnss::GnssBestPose::_class_data_\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GnssBestPose::MergeImpl
}
.fi
.SS "constexpr int apollo::drivers::gnss::GnssBestPose::kIndexInFileMessages\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    0
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Cyber-Cmake from the source code\&.
