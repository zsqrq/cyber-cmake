.TH "apollo::task_manager::Task" 3 "Sun Sep 3 2023" "Version 8.0" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
apollo::task_manager::Task
.SH SYNOPSIS
.br
.PP
.PP
Inherits PROTOBUF_NAMESPACE_ID::Message\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fB_Internal\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum : int { \fBkTaskNameFieldNumber\fP = 2, \fBkHeaderFieldNumber\fP = 1, \fBkCycleRoutingTaskFieldNumber\fP = 4, \fBkParkingRoutingTaskFieldNumber\fP = 5, \fBkParkGoRoutingTaskFieldNumber\fP = 6, \fBkTaskTypeFieldNumber\fP = 3 }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "constexpr \fBTask\fP (::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)"
.br
.ti -1c
.RI "\fBTask\fP (const \fBTask\fP &from)"
.br
.ti -1c
.RI "\fBTask\fP (\fBTask\fP &&from) noexcept"
.br
.ti -1c
.RI "\fBTask\fP & \fBoperator=\fP (const \fBTask\fP &from)"
.br
.ti -1c
.RI "\fBTask\fP & \fBoperator=\fP (\fBTask\fP &&from) noexcept"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet & \fBunknown_fields\fP () const"
.br
.ti -1c
.RI "inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet * \fBmutable_unknown_fields\fP ()"
.br
.ti -1c
.RI "void \fBSwap\fP (\fBTask\fP *other)"
.br
.ti -1c
.RI "void \fBUnsafeArenaSwap\fP (\fBTask\fP *other)"
.br
.ti -1c
.RI "\fBTask\fP * \fBNew\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena=nullptr) const final"
.br
.ti -1c
.RI "void \fBCopyFrom\fP (const \fBTask\fP &from)"
.br
.ti -1c
.RI "void \fBMergeFrom\fP (const \fBTask\fP &from)"
.br
.ti -1c
.RI "PROTOBUF_ATTRIBUTE_REINITIALIZES void \fBClear\fP () final"
.br
.ti -1c
.RI "bool \fBIsInitialized\fP () const final"
.br
.ti -1c
.RI "size_t \fBByteSizeLong\fP () const final"
.br
.ti -1c
.RI "const char * \fB_InternalParse\fP (const char *ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext *ctx) final"
.br
.ti -1c
.RI "uint8_t * \fB_InternalSerialize\fP (uint8_t *target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream *stream) const final"
.br
.ti -1c
.RI "int \fBGetCachedSize\fP () const final"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData * \fBGetClassData\fP () const final"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::Metadata \fBGetMetadata\fP () const final"
.br
.ti -1c
.RI "bool \fBhas_task_name\fP () const"
.br
.ti -1c
.RI "void \fBclear_task_name\fP ()"
.br
.ti -1c
.RI "const std::string & \fBtask_name\fP () const"
.br
.ti -1c
.RI "template<typename ArgT0  = const std::string&, typename\&.\&.\&. ArgT> void \fBset_task_name\fP (ArgT0 &&arg0, ArgT\&.\&.\&. args)"
.br
.ti -1c
.RI "std::string * \fBmutable_task_name\fP ()"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD std::string * \fBrelease_task_name\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_task_name\fP (std::string *task_name)"
.br
.ti -1c
.RI "bool \fBhas_header\fP () const"
.br
.ti -1c
.RI "void \fBclear_header\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::common::Header\fP & \fBheader\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::common::Header\fP * \fBrelease_header\fP ()"
.br
.ti -1c
.RI "::\fBapollo::common::Header\fP * \fBmutable_header\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_header\fP (::\fBapollo::common::Header\fP *header)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_header\fP (::\fBapollo::common::Header\fP *header)"
.br
.ti -1c
.RI "::\fBapollo::common::Header\fP * \fBunsafe_arena_release_header\fP ()"
.br
.ti -1c
.RI "bool \fBhas_cycle_routing_task\fP () const"
.br
.ti -1c
.RI "void \fBclear_cycle_routing_task\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::task_manager::CycleRoutingTask\fP & \fBcycle_routing_task\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::task_manager::CycleRoutingTask\fP * \fBrelease_cycle_routing_task\fP ()"
.br
.ti -1c
.RI "::\fBapollo::task_manager::CycleRoutingTask\fP * \fBmutable_cycle_routing_task\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_cycle_routing_task\fP (::\fBapollo::task_manager::CycleRoutingTask\fP *cycle_routing_task)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_cycle_routing_task\fP (::\fBapollo::task_manager::CycleRoutingTask\fP *cycle_routing_task)"
.br
.ti -1c
.RI "::\fBapollo::task_manager::CycleRoutingTask\fP * \fBunsafe_arena_release_cycle_routing_task\fP ()"
.br
.ti -1c
.RI "bool \fBhas_parking_routing_task\fP () const"
.br
.ti -1c
.RI "void \fBclear_parking_routing_task\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::task_manager::ParkingRoutingTask\fP & \fBparking_routing_task\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::task_manager::ParkingRoutingTask\fP * \fBrelease_parking_routing_task\fP ()"
.br
.ti -1c
.RI "::\fBapollo::task_manager::ParkingRoutingTask\fP * \fBmutable_parking_routing_task\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_parking_routing_task\fP (::\fBapollo::task_manager::ParkingRoutingTask\fP *parking_routing_task)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_parking_routing_task\fP (::\fBapollo::task_manager::ParkingRoutingTask\fP *parking_routing_task)"
.br
.ti -1c
.RI "::\fBapollo::task_manager::ParkingRoutingTask\fP * \fBunsafe_arena_release_parking_routing_task\fP ()"
.br
.ti -1c
.RI "bool \fBhas_park_go_routing_task\fP () const"
.br
.ti -1c
.RI "void \fBclear_park_go_routing_task\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::task_manager::ParkGoRoutingTask\fP & \fBpark_go_routing_task\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::task_manager::ParkGoRoutingTask\fP * \fBrelease_park_go_routing_task\fP ()"
.br
.ti -1c
.RI "::\fBapollo::task_manager::ParkGoRoutingTask\fP * \fBmutable_park_go_routing_task\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_park_go_routing_task\fP (::\fBapollo::task_manager::ParkGoRoutingTask\fP *park_go_routing_task)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_park_go_routing_task\fP (::\fBapollo::task_manager::ParkGoRoutingTask\fP *park_go_routing_task)"
.br
.ti -1c
.RI "::\fBapollo::task_manager::ParkGoRoutingTask\fP * \fBunsafe_arena_release_park_go_routing_task\fP ()"
.br
.ti -1c
.RI "bool \fBhas_task_type\fP () const"
.br
.ti -1c
.RI "void \fBclear_task_type\fP ()"
.br
.ti -1c
.RI "::apollo::task_manager::TaskType \fBtask_type\fP () const"
.br
.ti -1c
.RI "void \fBset_task_type\fP (::apollo::task_manager::TaskType value)"
.br
.ti -1c
.RI "template<typename ArgT0 , typename\&.\&.\&. ArgT> PROTOBUF_ALWAYS_INLINE void \fBset_task_name\fP (ArgT0 &&arg0, ArgT\&.\&.\&. args)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBdescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBGetDescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Reflection * \fBGetReflection\fP ()"
.br
.ti -1c
.RI "static const \fBTask\fP & \fBdefault_instance\fP ()"
.br
.ti -1c
.RI "static const \fBTask\fP * \fBinternal_default_instance\fP ()"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr int \fBkIndexInFileMessages\fP"
.br
.ti -1c
.RI "static const ClassData \fB_class_data_\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBTask\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena, bool is_message_owned=false)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fB::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata\fP"
.br
.ti -1c
.RI "template<typename T > class \fB::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper\fP"
.br
.ti -1c
.RI "struct \fB::TableStruct_modules_2fcommon_5fmsgs_2ftask_5fmanager_5fmsgs_2ftask_5fmanager_2eproto\fP"
.br
.ti -1c
.RI "void \fBswap\fP (\fBTask\fP &a, \fBTask\fP &b)"
.br
.in -1c
.SH "Member Data Documentation"
.PP 
.SS "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData apollo::task_manager::Task::_class_data_\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Task::MergeImpl
}
.fi
.SS "constexpr int apollo::task_manager::Task::kIndexInFileMessages\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    3
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Cyber-Cmake from the source code\&.
