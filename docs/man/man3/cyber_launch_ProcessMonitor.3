.TH "cyber_launch.ProcessMonitor" 3 "Sun Sep 3 2023" "Version 8.0" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
cyber_launch.ProcessMonitor
.SH SYNOPSIS
.br
.PP
.PP
Inherits object\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "def \fB__init__\fP (self)"
.br
.ti -1c
.RI "def \fBregister\fP (self, p)"
.br
.ti -1c
.RI "def \fBhas_process\fP (self, name)"
.br
.ti -1c
.RI "def \fBcheck_cleanup\fP (self)"
.br
.ti -1c
.RI "def \fBrun\fP (self)"
.br
.ti -1c
.RI "def \fBstop\fP (self, signal)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBprocs\fP"
.br
.ti -1c
.RI "\fBdead_cnt\fP"
.br
.ti -1c
.RI "\fBdone\fP"
.br
.ti -1c
.RI "\fBis_shutdown\fP"
.br
.in -1c
.SH "Member Function Documentation"
.PP 
.SS "def cyber_launch\&.ProcessMonitor\&.check_cleanup ( self)"

.PP
.nf
Check processes are alived, cleanup processes

.fi
.PP
 
.SS "def cyber_launch\&.ProcessMonitor\&.has_process ( self,  name)"

.PP
.nf
@return: True if process is still be monitored. If False, process
has died or was never registered with process
@rtype: bool

.fi
.PP
 
.SS "def cyber_launch\&.ProcessMonitor\&.register ( self,  p)"

.PP
.nf
Register process with L{ProcessMonitor}
@param p: Process
@type  p: L{Process}

.fi
.PP
 
.SS "def cyber_launch\&.ProcessMonitor\&.run ( self)"

.PP
.nf
Run processes monitor, until all processes are died.

.fi
.PP
 
.SS "def cyber_launch\&.ProcessMonitor\&.stop ( self,  signal)"

.PP
.nf
Stop all processes in monitor

.fi
.PP
 

.SH "Author"
.PP 
Generated automatically by Doxygen for Cyber-Cmake from the source code\&.
