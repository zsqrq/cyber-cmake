.TH "apollo::hdmap::ObjectOverlapInfo" 3 "Sun Sep 3 2023" "Version 8.0" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
apollo::hdmap::ObjectOverlapInfo
.SH SYNOPSIS
.br
.PP
.PP
Inherits PROTOBUF_NAMESPACE_ID::Message\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fB_Internal\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBOverlapInfoCase\fP { \fBkLaneOverlapInfo\fP = 3, \fBkSignalOverlapInfo\fP = 4, \fBkStopSignOverlapInfo\fP = 5, \fBkCrosswalkOverlapInfo\fP = 6, \fBkJunctionOverlapInfo\fP = 7, \fBkYieldSignOverlapInfo\fP = 8, \fBkClearAreaOverlapInfo\fP = 9, \fBkSpeedBumpOverlapInfo\fP = 10, \fBkParkingSpaceOverlapInfo\fP = 11, \fBkPncJunctionOverlapInfo\fP = 12, \fBkRsuOverlapInfo\fP = 13, \fBOVERLAP_INFO_NOT_SET\fP = 0 }"
.br
.ti -1c
.RI "enum : int { \fBkIdFieldNumber\fP = 1, \fBkLaneOverlapInfoFieldNumber\fP = 3, \fBkSignalOverlapInfoFieldNumber\fP = 4, \fBkStopSignOverlapInfoFieldNumber\fP = 5, \fBkCrosswalkOverlapInfoFieldNumber\fP = 6, \fBkJunctionOverlapInfoFieldNumber\fP = 7, \fBkYieldSignOverlapInfoFieldNumber\fP = 8, \fBkClearAreaOverlapInfoFieldNumber\fP = 9, \fBkSpeedBumpOverlapInfoFieldNumber\fP = 10, \fBkParkingSpaceOverlapInfoFieldNumber\fP = 11, \fBkPncJunctionOverlapInfoFieldNumber\fP = 12, \fBkRsuOverlapInfoFieldNumber\fP = 13 }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "constexpr \fBObjectOverlapInfo\fP (::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)"
.br
.ti -1c
.RI "\fBObjectOverlapInfo\fP (const \fBObjectOverlapInfo\fP &from)"
.br
.ti -1c
.RI "\fBObjectOverlapInfo\fP (\fBObjectOverlapInfo\fP &&from) noexcept"
.br
.ti -1c
.RI "\fBObjectOverlapInfo\fP & \fBoperator=\fP (const \fBObjectOverlapInfo\fP &from)"
.br
.ti -1c
.RI "\fBObjectOverlapInfo\fP & \fBoperator=\fP (\fBObjectOverlapInfo\fP &&from) noexcept"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet & \fBunknown_fields\fP () const"
.br
.ti -1c
.RI "inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet * \fBmutable_unknown_fields\fP ()"
.br
.ti -1c
.RI "void \fBSwap\fP (\fBObjectOverlapInfo\fP *other)"
.br
.ti -1c
.RI "void \fBUnsafeArenaSwap\fP (\fBObjectOverlapInfo\fP *other)"
.br
.ti -1c
.RI "\fBObjectOverlapInfo\fP * \fBNew\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena=nullptr) const final"
.br
.ti -1c
.RI "void \fBCopyFrom\fP (const \fBObjectOverlapInfo\fP &from)"
.br
.ti -1c
.RI "void \fBMergeFrom\fP (const \fBObjectOverlapInfo\fP &from)"
.br
.ti -1c
.RI "PROTOBUF_ATTRIBUTE_REINITIALIZES void \fBClear\fP () final"
.br
.ti -1c
.RI "bool \fBIsInitialized\fP () const final"
.br
.ti -1c
.RI "size_t \fBByteSizeLong\fP () const final"
.br
.ti -1c
.RI "const char * \fB_InternalParse\fP (const char *ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext *ctx) final"
.br
.ti -1c
.RI "uint8_t * \fB_InternalSerialize\fP (uint8_t *target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream *stream) const final"
.br
.ti -1c
.RI "int \fBGetCachedSize\fP () const final"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData * \fBGetClassData\fP () const final"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::Metadata \fBGetMetadata\fP () const final"
.br
.ti -1c
.RI "bool \fBhas_id\fP () const"
.br
.ti -1c
.RI "void \fBclear_id\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::hdmap::Id\fP & \fBid\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::hdmap::Id\fP * \fBrelease_id\fP ()"
.br
.ti -1c
.RI "::\fBapollo::hdmap::Id\fP * \fBmutable_id\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_id\fP (::\fBapollo::hdmap::Id\fP *id)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_id\fP (::\fBapollo::hdmap::Id\fP *id)"
.br
.ti -1c
.RI "::\fBapollo::hdmap::Id\fP * \fBunsafe_arena_release_id\fP ()"
.br
.ti -1c
.RI "bool \fBhas_lane_overlap_info\fP () const"
.br
.ti -1c
.RI "void \fBclear_lane_overlap_info\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::hdmap::LaneOverlapInfo\fP & \fBlane_overlap_info\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::hdmap::LaneOverlapInfo\fP * \fBrelease_lane_overlap_info\fP ()"
.br
.ti -1c
.RI "::\fBapollo::hdmap::LaneOverlapInfo\fP * \fBmutable_lane_overlap_info\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_lane_overlap_info\fP (::\fBapollo::hdmap::LaneOverlapInfo\fP *lane_overlap_info)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_lane_overlap_info\fP (::\fBapollo::hdmap::LaneOverlapInfo\fP *lane_overlap_info)"
.br
.ti -1c
.RI "::\fBapollo::hdmap::LaneOverlapInfo\fP * \fBunsafe_arena_release_lane_overlap_info\fP ()"
.br
.ti -1c
.RI "bool \fBhas_signal_overlap_info\fP () const"
.br
.ti -1c
.RI "void \fBclear_signal_overlap_info\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::hdmap::SignalOverlapInfo\fP & \fBsignal_overlap_info\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::hdmap::SignalOverlapInfo\fP * \fBrelease_signal_overlap_info\fP ()"
.br
.ti -1c
.RI "::\fBapollo::hdmap::SignalOverlapInfo\fP * \fBmutable_signal_overlap_info\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_signal_overlap_info\fP (::\fBapollo::hdmap::SignalOverlapInfo\fP *signal_overlap_info)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_signal_overlap_info\fP (::\fBapollo::hdmap::SignalOverlapInfo\fP *signal_overlap_info)"
.br
.ti -1c
.RI "::\fBapollo::hdmap::SignalOverlapInfo\fP * \fBunsafe_arena_release_signal_overlap_info\fP ()"
.br
.ti -1c
.RI "bool \fBhas_stop_sign_overlap_info\fP () const"
.br
.ti -1c
.RI "void \fBclear_stop_sign_overlap_info\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::hdmap::StopSignOverlapInfo\fP & \fBstop_sign_overlap_info\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::hdmap::StopSignOverlapInfo\fP * \fBrelease_stop_sign_overlap_info\fP ()"
.br
.ti -1c
.RI "::\fBapollo::hdmap::StopSignOverlapInfo\fP * \fBmutable_stop_sign_overlap_info\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_stop_sign_overlap_info\fP (::\fBapollo::hdmap::StopSignOverlapInfo\fP *stop_sign_overlap_info)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_stop_sign_overlap_info\fP (::\fBapollo::hdmap::StopSignOverlapInfo\fP *stop_sign_overlap_info)"
.br
.ti -1c
.RI "::\fBapollo::hdmap::StopSignOverlapInfo\fP * \fBunsafe_arena_release_stop_sign_overlap_info\fP ()"
.br
.ti -1c
.RI "bool \fBhas_crosswalk_overlap_info\fP () const"
.br
.ti -1c
.RI "void \fBclear_crosswalk_overlap_info\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::hdmap::CrosswalkOverlapInfo\fP & \fBcrosswalk_overlap_info\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::hdmap::CrosswalkOverlapInfo\fP * \fBrelease_crosswalk_overlap_info\fP ()"
.br
.ti -1c
.RI "::\fBapollo::hdmap::CrosswalkOverlapInfo\fP * \fBmutable_crosswalk_overlap_info\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_crosswalk_overlap_info\fP (::\fBapollo::hdmap::CrosswalkOverlapInfo\fP *crosswalk_overlap_info)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_crosswalk_overlap_info\fP (::\fBapollo::hdmap::CrosswalkOverlapInfo\fP *crosswalk_overlap_info)"
.br
.ti -1c
.RI "::\fBapollo::hdmap::CrosswalkOverlapInfo\fP * \fBunsafe_arena_release_crosswalk_overlap_info\fP ()"
.br
.ti -1c
.RI "bool \fBhas_junction_overlap_info\fP () const"
.br
.ti -1c
.RI "void \fBclear_junction_overlap_info\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::hdmap::JunctionOverlapInfo\fP & \fBjunction_overlap_info\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::hdmap::JunctionOverlapInfo\fP * \fBrelease_junction_overlap_info\fP ()"
.br
.ti -1c
.RI "::\fBapollo::hdmap::JunctionOverlapInfo\fP * \fBmutable_junction_overlap_info\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_junction_overlap_info\fP (::\fBapollo::hdmap::JunctionOverlapInfo\fP *junction_overlap_info)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_junction_overlap_info\fP (::\fBapollo::hdmap::JunctionOverlapInfo\fP *junction_overlap_info)"
.br
.ti -1c
.RI "::\fBapollo::hdmap::JunctionOverlapInfo\fP * \fBunsafe_arena_release_junction_overlap_info\fP ()"
.br
.ti -1c
.RI "bool \fBhas_yield_sign_overlap_info\fP () const"
.br
.ti -1c
.RI "void \fBclear_yield_sign_overlap_info\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::hdmap::YieldOverlapInfo\fP & \fByield_sign_overlap_info\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::hdmap::YieldOverlapInfo\fP * \fBrelease_yield_sign_overlap_info\fP ()"
.br
.ti -1c
.RI "::\fBapollo::hdmap::YieldOverlapInfo\fP * \fBmutable_yield_sign_overlap_info\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_yield_sign_overlap_info\fP (::\fBapollo::hdmap::YieldOverlapInfo\fP *yield_sign_overlap_info)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_yield_sign_overlap_info\fP (::\fBapollo::hdmap::YieldOverlapInfo\fP *yield_sign_overlap_info)"
.br
.ti -1c
.RI "::\fBapollo::hdmap::YieldOverlapInfo\fP * \fBunsafe_arena_release_yield_sign_overlap_info\fP ()"
.br
.ti -1c
.RI "bool \fBhas_clear_area_overlap_info\fP () const"
.br
.ti -1c
.RI "void \fBclear_clear_area_overlap_info\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::hdmap::ClearAreaOverlapInfo\fP & \fBclear_area_overlap_info\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::hdmap::ClearAreaOverlapInfo\fP * \fBrelease_clear_area_overlap_info\fP ()"
.br
.ti -1c
.RI "::\fBapollo::hdmap::ClearAreaOverlapInfo\fP * \fBmutable_clear_area_overlap_info\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_clear_area_overlap_info\fP (::\fBapollo::hdmap::ClearAreaOverlapInfo\fP *clear_area_overlap_info)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_clear_area_overlap_info\fP (::\fBapollo::hdmap::ClearAreaOverlapInfo\fP *clear_area_overlap_info)"
.br
.ti -1c
.RI "::\fBapollo::hdmap::ClearAreaOverlapInfo\fP * \fBunsafe_arena_release_clear_area_overlap_info\fP ()"
.br
.ti -1c
.RI "bool \fBhas_speed_bump_overlap_info\fP () const"
.br
.ti -1c
.RI "void \fBclear_speed_bump_overlap_info\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::hdmap::SpeedBumpOverlapInfo\fP & \fBspeed_bump_overlap_info\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::hdmap::SpeedBumpOverlapInfo\fP * \fBrelease_speed_bump_overlap_info\fP ()"
.br
.ti -1c
.RI "::\fBapollo::hdmap::SpeedBumpOverlapInfo\fP * \fBmutable_speed_bump_overlap_info\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_speed_bump_overlap_info\fP (::\fBapollo::hdmap::SpeedBumpOverlapInfo\fP *speed_bump_overlap_info)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_speed_bump_overlap_info\fP (::\fBapollo::hdmap::SpeedBumpOverlapInfo\fP *speed_bump_overlap_info)"
.br
.ti -1c
.RI "::\fBapollo::hdmap::SpeedBumpOverlapInfo\fP * \fBunsafe_arena_release_speed_bump_overlap_info\fP ()"
.br
.ti -1c
.RI "bool \fBhas_parking_space_overlap_info\fP () const"
.br
.ti -1c
.RI "void \fBclear_parking_space_overlap_info\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::hdmap::ParkingSpaceOverlapInfo\fP & \fBparking_space_overlap_info\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::hdmap::ParkingSpaceOverlapInfo\fP * \fBrelease_parking_space_overlap_info\fP ()"
.br
.ti -1c
.RI "::\fBapollo::hdmap::ParkingSpaceOverlapInfo\fP * \fBmutable_parking_space_overlap_info\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_parking_space_overlap_info\fP (::\fBapollo::hdmap::ParkingSpaceOverlapInfo\fP *parking_space_overlap_info)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_parking_space_overlap_info\fP (::\fBapollo::hdmap::ParkingSpaceOverlapInfo\fP *parking_space_overlap_info)"
.br
.ti -1c
.RI "::\fBapollo::hdmap::ParkingSpaceOverlapInfo\fP * \fBunsafe_arena_release_parking_space_overlap_info\fP ()"
.br
.ti -1c
.RI "bool \fBhas_pnc_junction_overlap_info\fP () const"
.br
.ti -1c
.RI "void \fBclear_pnc_junction_overlap_info\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::hdmap::PNCJunctionOverlapInfo\fP & \fBpnc_junction_overlap_info\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::hdmap::PNCJunctionOverlapInfo\fP * \fBrelease_pnc_junction_overlap_info\fP ()"
.br
.ti -1c
.RI "::\fBapollo::hdmap::PNCJunctionOverlapInfo\fP * \fBmutable_pnc_junction_overlap_info\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_pnc_junction_overlap_info\fP (::\fBapollo::hdmap::PNCJunctionOverlapInfo\fP *pnc_junction_overlap_info)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_pnc_junction_overlap_info\fP (::\fBapollo::hdmap::PNCJunctionOverlapInfo\fP *pnc_junction_overlap_info)"
.br
.ti -1c
.RI "::\fBapollo::hdmap::PNCJunctionOverlapInfo\fP * \fBunsafe_arena_release_pnc_junction_overlap_info\fP ()"
.br
.ti -1c
.RI "bool \fBhas_rsu_overlap_info\fP () const"
.br
.ti -1c
.RI "void \fBclear_rsu_overlap_info\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::hdmap::RSUOverlapInfo\fP & \fBrsu_overlap_info\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::hdmap::RSUOverlapInfo\fP * \fBrelease_rsu_overlap_info\fP ()"
.br
.ti -1c
.RI "::\fBapollo::hdmap::RSUOverlapInfo\fP * \fBmutable_rsu_overlap_info\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_rsu_overlap_info\fP (::\fBapollo::hdmap::RSUOverlapInfo\fP *rsu_overlap_info)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_rsu_overlap_info\fP (::\fBapollo::hdmap::RSUOverlapInfo\fP *rsu_overlap_info)"
.br
.ti -1c
.RI "::\fBapollo::hdmap::RSUOverlapInfo\fP * \fBunsafe_arena_release_rsu_overlap_info\fP ()"
.br
.ti -1c
.RI "void \fBclear_overlap_info\fP ()"
.br
.ti -1c
.RI "OverlapInfoCase \fBoverlap_info_case\fP () const"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBdescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBGetDescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Reflection * \fBGetReflection\fP ()"
.br
.ti -1c
.RI "static const \fBObjectOverlapInfo\fP & \fBdefault_instance\fP ()"
.br
.ti -1c
.RI "static const \fBObjectOverlapInfo\fP * \fBinternal_default_instance\fP ()"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr int \fBkIndexInFileMessages\fP"
.br
.ti -1c
.RI "static const ClassData \fB_class_data_\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBObjectOverlapInfo\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena, bool is_message_owned=false)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fB::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata\fP"
.br
.ti -1c
.RI "template<typename T > class \fB::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper\fP"
.br
.ti -1c
.RI "struct \fB::TableStruct_modules_2fcommon_5fmsgs_2fmap_5fmsgs_2fmap_5foverlap_2eproto\fP"
.br
.ti -1c
.RI "void \fBswap\fP (\fBObjectOverlapInfo\fP &a, \fBObjectOverlapInfo\fP &b)"
.br
.in -1c
.SH "Member Data Documentation"
.PP 
.SS "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData apollo::hdmap::ObjectOverlapInfo::_class_data_\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ObjectOverlapInfo::MergeImpl
}
.fi
.SS "constexpr int apollo::hdmap::ObjectOverlapInfo::kIndexInFileMessages\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    12
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Cyber-Cmake from the source code\&.
