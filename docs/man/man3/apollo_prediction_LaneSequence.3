.TH "apollo::prediction::LaneSequence" 3 "Sun Sep 3 2023" "Version 8.0" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
apollo::prediction::LaneSequence
.SH SYNOPSIS
.br
.PP
.PP
Inherits PROTOBUF_NAMESPACE_ID::Message\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fB_Internal\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum : int { \fBkLaneSegmentFieldNumber\fP = 2, \fBkNearbyObstacleFieldNumber\fP = 3, \fBkPathPointFieldNumber\fP = 8, \fBkCurrLanePointFieldNumber\fP = 11, \fBkLeftNeighborPointFieldNumber\fP = 12, \fBkRightNeighborPointFieldNumber\fP = 13, \fBkLeftNearbyObstacleFieldNumber\fP = 14, \fBkRightNearbyObstacleFieldNumber\fP = 15, \fBkFeaturesFieldNumber\fP = 4, \fBkStopSignFieldNumber\fP = 20, \fBkLaneSequenceIdFieldNumber\fP = 1, \fBkLabelFieldNumber\fP = 5, \fBkProbabilityFieldNumber\fP = 6, \fBkAccelerationFieldNumber\fP = 7, \fBkVehicleOnLaneFieldNumber\fP = 10, \fBkRightOfWayFieldNumber\fP = 21, \fBkTimeToLaneCenterFieldNumber\fP = 16, \fBkLaneSFieldNumber\fP = 17, \fBkLaneLFieldNumber\fP = 18, \fBkTimeToLaneEdgeFieldNumber\fP = 19, \fBkAdcLaneSegmentIdxFieldNumber\fP = 23, \fBkBehaviorTypeFieldNumber\fP = 9, \fBkLaneTypeFieldNumber\fP = 22 }"
.br
.ti -1c
.RI "typedef \fBLaneSequence_Features\fP \fBFeatures\fP"
.br
.ti -1c
.RI "typedef LaneSequence_BehaviorType \fBBehaviorType\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "constexpr \fBLaneSequence\fP (::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)"
.br
.ti -1c
.RI "\fBLaneSequence\fP (const \fBLaneSequence\fP &from)"
.br
.ti -1c
.RI "\fBLaneSequence\fP (\fBLaneSequence\fP &&from) noexcept"
.br
.ti -1c
.RI "\fBLaneSequence\fP & \fBoperator=\fP (const \fBLaneSequence\fP &from)"
.br
.ti -1c
.RI "\fBLaneSequence\fP & \fBoperator=\fP (\fBLaneSequence\fP &&from) noexcept"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet & \fBunknown_fields\fP () const"
.br
.ti -1c
.RI "inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet * \fBmutable_unknown_fields\fP ()"
.br
.ti -1c
.RI "void \fBSwap\fP (\fBLaneSequence\fP *other)"
.br
.ti -1c
.RI "void \fBUnsafeArenaSwap\fP (\fBLaneSequence\fP *other)"
.br
.ti -1c
.RI "\fBLaneSequence\fP * \fBNew\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena=nullptr) const final"
.br
.ti -1c
.RI "void \fBCopyFrom\fP (const \fBLaneSequence\fP &from)"
.br
.ti -1c
.RI "void \fBMergeFrom\fP (const \fBLaneSequence\fP &from)"
.br
.ti -1c
.RI "PROTOBUF_ATTRIBUTE_REINITIALIZES void \fBClear\fP () final"
.br
.ti -1c
.RI "bool \fBIsInitialized\fP () const final"
.br
.ti -1c
.RI "size_t \fBByteSizeLong\fP () const final"
.br
.ti -1c
.RI "const char * \fB_InternalParse\fP (const char *ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext *ctx) final"
.br
.ti -1c
.RI "uint8_t * \fB_InternalSerialize\fP (uint8_t *target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream *stream) const final"
.br
.ti -1c
.RI "int \fBGetCachedSize\fP () const final"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData * \fBGetClassData\fP () const final"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::Metadata \fBGetMetadata\fP () const final"
.br
.ti -1c
.RI "int \fBlane_segment_size\fP () const"
.br
.ti -1c
.RI "void \fBclear_lane_segment\fP ()"
.br
.ti -1c
.RI "::\fBapollo::prediction::LaneSegment\fP * \fBmutable_lane_segment\fP (int index)"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::prediction::LaneSegment\fP > * \fBmutable_lane_segment\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::prediction::LaneSegment\fP & \fBlane_segment\fP (int index) const"
.br
.ti -1c
.RI "::\fBapollo::prediction::LaneSegment\fP * \fBadd_lane_segment\fP ()"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::prediction::LaneSegment\fP > & \fBlane_segment\fP () const"
.br
.ti -1c
.RI "int \fBnearby_obstacle_size\fP () const"
.br
.ti -1c
.RI "void \fBclear_nearby_obstacle\fP ()"
.br
.ti -1c
.RI "::\fBapollo::prediction::NearbyObstacle\fP * \fBmutable_nearby_obstacle\fP (int index)"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::prediction::NearbyObstacle\fP > * \fBmutable_nearby_obstacle\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::prediction::NearbyObstacle\fP & \fBnearby_obstacle\fP (int index) const"
.br
.ti -1c
.RI "::\fBapollo::prediction::NearbyObstacle\fP * \fBadd_nearby_obstacle\fP ()"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::prediction::NearbyObstacle\fP > & \fBnearby_obstacle\fP () const"
.br
.ti -1c
.RI "int \fBpath_point_size\fP () const"
.br
.ti -1c
.RI "void \fBclear_path_point\fP ()"
.br
.ti -1c
.RI "::\fBapollo::common::PathPoint\fP * \fBmutable_path_point\fP (int index)"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::common::PathPoint\fP > * \fBmutable_path_point\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::common::PathPoint\fP & \fBpath_point\fP (int index) const"
.br
.ti -1c
.RI "::\fBapollo::common::PathPoint\fP * \fBadd_path_point\fP ()"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::common::PathPoint\fP > & \fBpath_point\fP () const"
.br
.ti -1c
.RI "int \fBcurr_lane_point_size\fP () const"
.br
.ti -1c
.RI "void \fBclear_curr_lane_point\fP ()"
.br
.ti -1c
.RI "::\fBapollo::prediction::LanePoint\fP * \fBmutable_curr_lane_point\fP (int index)"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::prediction::LanePoint\fP > * \fBmutable_curr_lane_point\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::prediction::LanePoint\fP & \fBcurr_lane_point\fP (int index) const"
.br
.ti -1c
.RI "::\fBapollo::prediction::LanePoint\fP * \fBadd_curr_lane_point\fP ()"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::prediction::LanePoint\fP > & \fBcurr_lane_point\fP () const"
.br
.ti -1c
.RI "int \fBleft_neighbor_point_size\fP () const"
.br
.ti -1c
.RI "void \fBclear_left_neighbor_point\fP ()"
.br
.ti -1c
.RI "::\fBapollo::prediction::LanePoint\fP * \fBmutable_left_neighbor_point\fP (int index)"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::prediction::LanePoint\fP > * \fBmutable_left_neighbor_point\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::prediction::LanePoint\fP & \fBleft_neighbor_point\fP (int index) const"
.br
.ti -1c
.RI "::\fBapollo::prediction::LanePoint\fP * \fBadd_left_neighbor_point\fP ()"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::prediction::LanePoint\fP > & \fBleft_neighbor_point\fP () const"
.br
.ti -1c
.RI "int \fBright_neighbor_point_size\fP () const"
.br
.ti -1c
.RI "void \fBclear_right_neighbor_point\fP ()"
.br
.ti -1c
.RI "::\fBapollo::prediction::LanePoint\fP * \fBmutable_right_neighbor_point\fP (int index)"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::prediction::LanePoint\fP > * \fBmutable_right_neighbor_point\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::prediction::LanePoint\fP & \fBright_neighbor_point\fP (int index) const"
.br
.ti -1c
.RI "::\fBapollo::prediction::LanePoint\fP * \fBadd_right_neighbor_point\fP ()"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::prediction::LanePoint\fP > & \fBright_neighbor_point\fP () const"
.br
.ti -1c
.RI "int \fBleft_nearby_obstacle_size\fP () const"
.br
.ti -1c
.RI "void \fBclear_left_nearby_obstacle\fP ()"
.br
.ti -1c
.RI "::\fBapollo::prediction::NearbyObstacle\fP * \fBmutable_left_nearby_obstacle\fP (int index)"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::prediction::NearbyObstacle\fP > * \fBmutable_left_nearby_obstacle\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::prediction::NearbyObstacle\fP & \fBleft_nearby_obstacle\fP (int index) const"
.br
.ti -1c
.RI "::\fBapollo::prediction::NearbyObstacle\fP * \fBadd_left_nearby_obstacle\fP ()"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::prediction::NearbyObstacle\fP > & \fBleft_nearby_obstacle\fP () const"
.br
.ti -1c
.RI "int \fBright_nearby_obstacle_size\fP () const"
.br
.ti -1c
.RI "void \fBclear_right_nearby_obstacle\fP ()"
.br
.ti -1c
.RI "::\fBapollo::prediction::NearbyObstacle\fP * \fBmutable_right_nearby_obstacle\fP (int index)"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::prediction::NearbyObstacle\fP > * \fBmutable_right_nearby_obstacle\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::prediction::NearbyObstacle\fP & \fBright_nearby_obstacle\fP (int index) const"
.br
.ti -1c
.RI "::\fBapollo::prediction::NearbyObstacle\fP * \fBadd_right_nearby_obstacle\fP ()"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::prediction::NearbyObstacle\fP > & \fBright_nearby_obstacle\fP () const"
.br
.ti -1c
.RI "bool \fBhas_features\fP () const"
.br
.ti -1c
.RI "void \fBclear_features\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::prediction::LaneSequence_Features\fP & \fBfeatures\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::prediction::LaneSequence_Features\fP * \fBrelease_features\fP ()"
.br
.ti -1c
.RI "::\fBapollo::prediction::LaneSequence_Features\fP * \fBmutable_features\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_features\fP (::\fBapollo::prediction::LaneSequence_Features\fP *features)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_features\fP (::\fBapollo::prediction::LaneSequence_Features\fP *features)"
.br
.ti -1c
.RI "::\fBapollo::prediction::LaneSequence_Features\fP * \fBunsafe_arena_release_features\fP ()"
.br
.ti -1c
.RI "bool \fBhas_stop_sign\fP () const"
.br
.ti -1c
.RI "void \fBclear_stop_sign\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::prediction::StopSign\fP & \fBstop_sign\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::prediction::StopSign\fP * \fBrelease_stop_sign\fP ()"
.br
.ti -1c
.RI "::\fBapollo::prediction::StopSign\fP * \fBmutable_stop_sign\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_stop_sign\fP (::\fBapollo::prediction::StopSign\fP *stop_sign)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_stop_sign\fP (::\fBapollo::prediction::StopSign\fP *stop_sign)"
.br
.ti -1c
.RI "::\fBapollo::prediction::StopSign\fP * \fBunsafe_arena_release_stop_sign\fP ()"
.br
.ti -1c
.RI "bool \fBhas_lane_sequence_id\fP () const"
.br
.ti -1c
.RI "void \fBclear_lane_sequence_id\fP ()"
.br
.ti -1c
.RI "int32_t \fBlane_sequence_id\fP () const"
.br
.ti -1c
.RI "void \fBset_lane_sequence_id\fP (int32_t value)"
.br
.ti -1c
.RI "bool \fBhas_label\fP () const"
.br
.ti -1c
.RI "void \fBclear_label\fP ()"
.br
.ti -1c
.RI "int32_t \fBlabel\fP () const"
.br
.ti -1c
.RI "void \fBset_label\fP (int32_t value)"
.br
.ti -1c
.RI "bool \fBhas_probability\fP () const"
.br
.ti -1c
.RI "void \fBclear_probability\fP ()"
.br
.ti -1c
.RI "double \fBprobability\fP () const"
.br
.ti -1c
.RI "void \fBset_probability\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_acceleration\fP () const"
.br
.ti -1c
.RI "void \fBclear_acceleration\fP ()"
.br
.ti -1c
.RI "double \fBacceleration\fP () const"
.br
.ti -1c
.RI "void \fBset_acceleration\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_vehicle_on_lane\fP () const"
.br
.ti -1c
.RI "void \fBclear_vehicle_on_lane\fP ()"
.br
.ti -1c
.RI "bool \fBvehicle_on_lane\fP () const"
.br
.ti -1c
.RI "void \fBset_vehicle_on_lane\fP (bool value)"
.br
.ti -1c
.RI "bool \fBhas_right_of_way\fP () const"
.br
.ti -1c
.RI "void \fBclear_right_of_way\fP ()"
.br
.ti -1c
.RI "int32_t \fBright_of_way\fP () const"
.br
.ti -1c
.RI "void \fBset_right_of_way\fP (int32_t value)"
.br
.ti -1c
.RI "bool \fBhas_time_to_lane_center\fP () const"
.br
.ti -1c
.RI "void \fBclear_time_to_lane_center\fP ()"
.br
.ti -1c
.RI "double \fBtime_to_lane_center\fP () const"
.br
.ti -1c
.RI "void \fBset_time_to_lane_center\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_lane_s\fP () const"
.br
.ti -1c
.RI "void \fBclear_lane_s\fP ()"
.br
.ti -1c
.RI "double \fBlane_s\fP () const"
.br
.ti -1c
.RI "void \fBset_lane_s\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_lane_l\fP () const"
.br
.ti -1c
.RI "void \fBclear_lane_l\fP ()"
.br
.ti -1c
.RI "double \fBlane_l\fP () const"
.br
.ti -1c
.RI "void \fBset_lane_l\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_time_to_lane_edge\fP () const"
.br
.ti -1c
.RI "void \fBclear_time_to_lane_edge\fP ()"
.br
.ti -1c
.RI "double \fBtime_to_lane_edge\fP () const"
.br
.ti -1c
.RI "void \fBset_time_to_lane_edge\fP (double value)"
.br
.ti -1c
.RI "bool \fBhas_adc_lane_segment_idx\fP () const"
.br
.ti -1c
.RI "void \fBclear_adc_lane_segment_idx\fP ()"
.br
.ti -1c
.RI "int32_t \fBadc_lane_segment_idx\fP () const"
.br
.ti -1c
.RI "void \fBset_adc_lane_segment_idx\fP (int32_t value)"
.br
.ti -1c
.RI "bool \fBhas_behavior_type\fP () const"
.br
.ti -1c
.RI "void \fBclear_behavior_type\fP ()"
.br
.ti -1c
.RI "::apollo::prediction::LaneSequence_BehaviorType \fBbehavior_type\fP () const"
.br
.ti -1c
.RI "void \fBset_behavior_type\fP (::apollo::prediction::LaneSequence_BehaviorType value)"
.br
.ti -1c
.RI "bool \fBhas_lane_type\fP () const"
.br
.ti -1c
.RI "void \fBclear_lane_type\fP ()"
.br
.ti -1c
.RI "::apollo::hdmap::Lane_LaneType \fBlane_type\fP () const"
.br
.ti -1c
.RI "void \fBset_lane_type\fP (::apollo::hdmap::Lane_LaneType value)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBdescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBGetDescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Reflection * \fBGetReflection\fP ()"
.br
.ti -1c
.RI "static const \fBLaneSequence\fP & \fBdefault_instance\fP ()"
.br
.ti -1c
.RI "static const \fBLaneSequence\fP * \fBinternal_default_instance\fP ()"
.br
.ti -1c
.RI "static bool \fBBehaviorType_IsValid\fP (int value)"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor * \fBBehaviorType_descriptor\fP ()"
.br
.ti -1c
.RI "template<typename T > static const std::string & \fBBehaviorType_Name\fP (T enum_t_value)"
.br
.ti -1c
.RI "static bool \fBBehaviorType_Parse\fP (::PROTOBUF_NAMESPACE_ID::ConstStringParam name, BehaviorType *value)"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr int \fBkIndexInFileMessages\fP"
.br
.ti -1c
.RI "static const ClassData \fB_class_data_\fP"
.br
.ti -1c
.RI "static constexpr BehaviorType \fBNOT_GOTO_LANE\fP"
.br
.ti -1c
.RI "static constexpr BehaviorType \fBCONSTANT_SPEED\fP"
.br
.ti -1c
.RI "static constexpr BehaviorType \fBSMALL_ACCELERATION\fP"
.br
.ti -1c
.RI "static constexpr BehaviorType \fBLARGE_ACCELERATION\fP"
.br
.ti -1c
.RI "static constexpr BehaviorType \fBSMALL_DECELERATION\fP"
.br
.ti -1c
.RI "static constexpr BehaviorType \fBLARGE_DECELERATION\fP"
.br
.ti -1c
.RI "static constexpr BehaviorType \fBBehaviorType_MIN\fP"
.br
.ti -1c
.RI "static constexpr BehaviorType \fBBehaviorType_MAX\fP"
.br
.ti -1c
.RI "static constexpr int \fBBehaviorType_ARRAYSIZE\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBLaneSequence\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena, bool is_message_owned=false)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fB::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata\fP"
.br
.ti -1c
.RI "template<typename T > class \fB::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper\fP"
.br
.ti -1c
.RI "struct \fB::TableStruct_modules_2fcommon_5fmsgs_2fprediction_5fmsgs_2flane_5fgraph_2eproto\fP"
.br
.ti -1c
.RI "void \fBswap\fP (\fBLaneSequence\fP &a, \fBLaneSequence\fP &b)"
.br
.in -1c
.SH "Member Data Documentation"
.PP 
.SS "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData apollo::prediction::LaneSequence::_class_data_\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LaneSequence::MergeImpl
}
.fi
.SS "constexpr int apollo::prediction::LaneSequence::BehaviorType_ARRAYSIZE\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    LaneSequence_BehaviorType_BehaviorType_ARRAYSIZE
.fi
.SS "constexpr LaneSequence_BehaviorType apollo::prediction::LaneSequence::BehaviorType_MAX\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    LaneSequence_BehaviorType_BehaviorType_MAX
.fi
.SS "constexpr LaneSequence_BehaviorType apollo::prediction::LaneSequence::BehaviorType_MIN\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    LaneSequence_BehaviorType_BehaviorType_MIN
.fi
.SS "constexpr LaneSequence_BehaviorType apollo::prediction::LaneSequence::CONSTANT_SPEED\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    LaneSequence_BehaviorType_CONSTANT_SPEED
.fi
.SS "constexpr int apollo::prediction::LaneSequence::kIndexInFileMessages\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    5
.fi
.SS "constexpr LaneSequence_BehaviorType apollo::prediction::LaneSequence::LARGE_ACCELERATION\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    LaneSequence_BehaviorType_LARGE_ACCELERATION
.fi
.SS "constexpr LaneSequence_BehaviorType apollo::prediction::LaneSequence::LARGE_DECELERATION\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    LaneSequence_BehaviorType_LARGE_DECELERATION
.fi
.SS "constexpr LaneSequence_BehaviorType apollo::prediction::LaneSequence::NOT_GOTO_LANE\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    LaneSequence_BehaviorType_NOT_GOTO_LANE
.fi
.SS "constexpr LaneSequence_BehaviorType apollo::prediction::LaneSequence::SMALL_ACCELERATION\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    LaneSequence_BehaviorType_SMALL_ACCELERATION
.fi
.SS "constexpr LaneSequence_BehaviorType apollo::prediction::LaneSequence::SMALL_DECELERATION\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    LaneSequence_BehaviorType_SMALL_DECELERATION
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Cyber-Cmake from the source code\&.
