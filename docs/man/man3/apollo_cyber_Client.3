.TH "apollo::cyber::Client< Request, Response >" 3 "Sun Sep 3 2023" "Version 8.0" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
apollo::cyber::Client< Request, Response > \- \fBClient\fP get \fCResponse\fP from a responding \fC\fBService\fP\fP by sending a Request\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <client\&.h>\fP
.PP
Inherits \fBapollo::cyber::ClientBase\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "using \fBSharedRequest\fP = typename std::shared_ptr< Request >"
.br
.ti -1c
.RI "using \fBSharedResponse\fP = typename std::shared_ptr< Response >"
.br
.ti -1c
.RI "using \fBPromise\fP = std::promise< SharedResponse >"
.br
.ti -1c
.RI "using \fBSharedPromise\fP = std::shared_ptr< Promise >"
.br
.ti -1c
.RI "using \fBSharedFuture\fP = std::shared_future< SharedResponse >"
.br
.ti -1c
.RI "using \fBCallbackType\fP = std::function< void(SharedFuture)>"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBClient\fP (const std::string &node_name, const std::string &service_name)"
.br
.RI "Construct a new \fBClient\fP object\&. "
.ti -1c
.RI "\fBClient\fP ()=delete"
.br
.RI "forbid Constructing a new \fBClient\fP object with empty params "
.ti -1c
.RI "bool \fBInit\fP ()"
.br
.RI "Init the \fBClient\fP\&. "
.ti -1c
.RI "SharedResponse \fBSendRequest\fP (SharedRequest request, const std::chrono::seconds &timeout_s=std::chrono::seconds(5))"
.br
.RI "Request the \fBService\fP with a shared ptr Request type\&. "
.ti -1c
.RI "SharedResponse \fBSendRequest\fP (const Request &request, const std::chrono::seconds &timeout_s=std::chrono::seconds(5))"
.br
.RI "Request the \fBService\fP with a Request object\&. "
.ti -1c
.RI "SharedFuture \fBAsyncSendRequest\fP (SharedRequest request)"
.br
.RI "Send Request shared ptr asynchronously\&. "
.ti -1c
.RI "SharedFuture \fBAsyncSendRequest\fP (const Request &request)"
.br
.RI "Send Request object asynchronously\&. "
.ti -1c
.RI "SharedFuture \fBAsyncSendRequest\fP (SharedRequest request, CallbackType &&cb)"
.br
.RI "Send Request shared ptr asynchronously and invoke \fCcb\fP after we get response\&. "
.ti -1c
.RI "bool \fBServiceIsReady\fP () const"
.br
.RI "Is the \fBService\fP is ready? "
.ti -1c
.RI "void \fBDestroy\fP ()"
.br
.RI "destroy this \fBClient\fP "
.ti -1c
.RI "template<typename RatioT  = std::milli> bool \fBWaitForService\fP (std::chrono::duration< int64_t, RatioT > timeout=std::chrono::duration< int64_t, RatioT >(\-1))"
.br
.RI "wait for the connection with the \fBService\fP established "
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 

.SS "template<typename Request, typename Response>
.br
class apollo::cyber::Client< Request, Response >"
\fBClient\fP get \fCResponse\fP from a responding \fC\fBService\fP\fP by sending a Request\&. 


.PP
\fBTemplate Parameters\fP
.RS 4
\fIRequest\fP the \fC\fBService\fP\fP request type 
.br
\fIResponse\fP the \fC\fBService\fP\fP response type
.RE
.PP
\fBWarning\fP
.RS 4
One \fBClient\fP can only request one \fBService\fP 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename Request , typename Response > \fBapollo::cyber::Client\fP< Request, Response >::\fBClient\fP (const std::string & node_name, const std::string & service_name)\fC [inline]\fP"

.PP
Construct a new \fBClient\fP object\&. 
.PP
\fBParameters\fP
.RS 4
\fInode_name\fP used to fill RoleAttribute 
.br
\fIservice_name\fP service name the \fBClient\fP can request 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "template<typename Request , typename Response > \fBClient\fP< Request, Response >::SharedFuture \fBapollo::cyber::Client\fP< Request, Response >::AsyncSendRequest (SharedRequest request, CallbackType && cb)"

.PP
Send Request shared ptr asynchronously and invoke \fCcb\fP after we get response\&. 
.PP
\fBParameters\fP
.RS 4
\fIrequest\fP Request shared ptr 
.br
\fIcb\fP callback function after we get response 
.RE
.PP
\fBReturns\fP
.RS 4
SharedFuture a \fCstd::future\fP shared ptr 
.RE
.PP

.SS "template<typename Request , typename Response > bool \fBapollo::cyber::Client\fP< Request, Response >::Init"

.PP
Init the \fBClient\fP\&. 
.PP
\fBReturns\fP
.RS 4
true if init successfully 
.PP
false if init failed 
.RE
.PP

.SS "template<typename Request , typename Response > \fBClient\fP< Request, Response >::SharedResponse \fBapollo::cyber::Client\fP< Request, Response >::SendRequest (const Request & request, const std::chrono::seconds & timeout_s = \fCstd::chrono::seconds(5)\fP)"

.PP
Request the \fBService\fP with a Request object\&. 
.PP
\fBParameters\fP
.RS 4
\fIrequest\fP Request object 
.br
\fItimeout_s\fP request timeout, if timeout, response will be empty 
.RE
.PP
\fBReturns\fP
.RS 4
SharedResponse result of this request 
.RE
.PP

.SS "template<typename Request , typename Response > \fBClient\fP< Request, Response >::SharedResponse \fBapollo::cyber::Client\fP< Request, Response >::SendRequest (SharedRequest request, const std::chrono::seconds & timeout_s = \fCstd::chrono::seconds(5)\fP)"

.PP
Request the \fBService\fP with a shared ptr Request type\&. 
.PP
\fBParameters\fP
.RS 4
\fIrequest\fP shared ptr of Request type 
.br
\fItimeout_s\fP request timeout, if timeout, response will be empty 
.RE
.PP
\fBReturns\fP
.RS 4
SharedResponse result of this request 
.RE
.PP

.SS "template<typename Request , typename Response > template<typename RatioT  = std::milli> bool \fBapollo::cyber::Client\fP< Request, Response >::WaitForService (std::chrono::duration< int64_t, RatioT > timeout = \fCstd::chrono::duration<int64_t, RatioT>(\-1)\fP)\fC [inline]\fP"

.PP
wait for the connection with the \fBService\fP established 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIRatioT\fP timeout unit, default is std::milli 
.RE
.PP
\fBParameters\fP
.RS 4
\fItimeout\fP wait time in unit of \fCRatioT\fP 
.RE
.PP
\fBReturns\fP
.RS 4
true if the connection established 
.PP
false if timeout 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Cyber-Cmake from the source code\&.
