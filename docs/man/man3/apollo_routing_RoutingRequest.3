.TH "apollo::routing::RoutingRequest" 3 "Sun Sep 3 2023" "Version 8.0" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
apollo::routing::RoutingRequest
.SH SYNOPSIS
.br
.PP
.PP
Inherits PROTOBUF_NAMESPACE_ID::Message\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fB_Internal\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum : int { \fBkWaypointFieldNumber\fP = 2, \fBkBlacklistedLaneFieldNumber\fP = 3, \fBkBlacklistedRoadFieldNumber\fP = 4, \fBkHeaderFieldNumber\fP = 1, \fBkParkingSpaceFieldNumber\fP = 6, \fBkParkingInfoFieldNumber\fP = 7, \fBkDeadEndInfoFieldNumber\fP = 8, \fBkBroadcastFieldNumber\fP = 5 }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "constexpr \fBRoutingRequest\fP (::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)"
.br
.ti -1c
.RI "\fBRoutingRequest\fP (const \fBRoutingRequest\fP &from)"
.br
.ti -1c
.RI "\fBRoutingRequest\fP (\fBRoutingRequest\fP &&from) noexcept"
.br
.ti -1c
.RI "\fBRoutingRequest\fP & \fBoperator=\fP (const \fBRoutingRequest\fP &from)"
.br
.ti -1c
.RI "\fBRoutingRequest\fP & \fBoperator=\fP (\fBRoutingRequest\fP &&from) noexcept"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet & \fBunknown_fields\fP () const"
.br
.ti -1c
.RI "inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet * \fBmutable_unknown_fields\fP ()"
.br
.ti -1c
.RI "void \fBSwap\fP (\fBRoutingRequest\fP *other)"
.br
.ti -1c
.RI "void \fBUnsafeArenaSwap\fP (\fBRoutingRequest\fP *other)"
.br
.ti -1c
.RI "\fBRoutingRequest\fP * \fBNew\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena=nullptr) const final"
.br
.ti -1c
.RI "void \fBCopyFrom\fP (const \fBRoutingRequest\fP &from)"
.br
.ti -1c
.RI "void \fBMergeFrom\fP (const \fBRoutingRequest\fP &from)"
.br
.ti -1c
.RI "PROTOBUF_ATTRIBUTE_REINITIALIZES void \fBClear\fP () final"
.br
.ti -1c
.RI "bool \fBIsInitialized\fP () const final"
.br
.ti -1c
.RI "size_t \fBByteSizeLong\fP () const final"
.br
.ti -1c
.RI "const char * \fB_InternalParse\fP (const char *ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext *ctx) final"
.br
.ti -1c
.RI "uint8_t * \fB_InternalSerialize\fP (uint8_t *target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream *stream) const final"
.br
.ti -1c
.RI "int \fBGetCachedSize\fP () const final"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData * \fBGetClassData\fP () const final"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::Metadata \fBGetMetadata\fP () const final"
.br
.ti -1c
.RI "int \fBwaypoint_size\fP () const"
.br
.ti -1c
.RI "void \fBclear_waypoint\fP ()"
.br
.ti -1c
.RI "::\fBapollo::routing::LaneWaypoint\fP * \fBmutable_waypoint\fP (int index)"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::routing::LaneWaypoint\fP > * \fBmutable_waypoint\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::routing::LaneWaypoint\fP & \fBwaypoint\fP (int index) const"
.br
.ti -1c
.RI "::\fBapollo::routing::LaneWaypoint\fP * \fBadd_waypoint\fP ()"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::routing::LaneWaypoint\fP > & \fBwaypoint\fP () const"
.br
.ti -1c
.RI "int \fBblacklisted_lane_size\fP () const"
.br
.ti -1c
.RI "void \fBclear_blacklisted_lane\fP ()"
.br
.ti -1c
.RI "::\fBapollo::routing::LaneSegment\fP * \fBmutable_blacklisted_lane\fP (int index)"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::routing::LaneSegment\fP > * \fBmutable_blacklisted_lane\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::routing::LaneSegment\fP & \fBblacklisted_lane\fP (int index) const"
.br
.ti -1c
.RI "::\fBapollo::routing::LaneSegment\fP * \fBadd_blacklisted_lane\fP ()"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::\fBapollo::routing::LaneSegment\fP > & \fBblacklisted_lane\fP () const"
.br
.ti -1c
.RI "int \fBblacklisted_road_size\fP () const"
.br
.ti -1c
.RI "void \fBclear_blacklisted_road\fP ()"
.br
.ti -1c
.RI "const std::string & \fBblacklisted_road\fP (int index) const"
.br
.ti -1c
.RI "std::string * \fBmutable_blacklisted_road\fP (int index)"
.br
.ti -1c
.RI "void \fBset_blacklisted_road\fP (int index, const std::string &value)"
.br
.ti -1c
.RI "void \fBset_blacklisted_road\fP (int index, std::string &&value)"
.br
.ti -1c
.RI "void \fBset_blacklisted_road\fP (int index, const char *value)"
.br
.ti -1c
.RI "void \fBset_blacklisted_road\fP (int index, const char *value, size_t size)"
.br
.ti -1c
.RI "std::string * \fBadd_blacklisted_road\fP ()"
.br
.ti -1c
.RI "void \fBadd_blacklisted_road\fP (const std::string &value)"
.br
.ti -1c
.RI "void \fBadd_blacklisted_road\fP (std::string &&value)"
.br
.ti -1c
.RI "void \fBadd_blacklisted_road\fP (const char *value)"
.br
.ti -1c
.RI "void \fBadd_blacklisted_road\fP (const char *value, size_t size)"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< std::string > & \fBblacklisted_road\fP () const"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< std::string > * \fBmutable_blacklisted_road\fP ()"
.br
.ti -1c
.RI "bool \fBhas_header\fP () const"
.br
.ti -1c
.RI "void \fBclear_header\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::common::Header\fP & \fBheader\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::common::Header\fP * \fBrelease_header\fP ()"
.br
.ti -1c
.RI "::\fBapollo::common::Header\fP * \fBmutable_header\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_header\fP (::\fBapollo::common::Header\fP *header)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_header\fP (::\fBapollo::common::Header\fP *header)"
.br
.ti -1c
.RI "::\fBapollo::common::Header\fP * \fBunsafe_arena_release_header\fP ()"
.br
.ti -1c
.RI "PROTOBUF_DEPRECATED bool \fBhas_parking_space\fP () const"
.br
.ti -1c
.RI "PROTOBUF_DEPRECATED void \fBclear_parking_space\fP ()"
.br
.ti -1c
.RI "PROTOBUF_DEPRECATEDconst ::\fBapollo::hdmap::ParkingSpace\fP & \fBparking_space\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD PROTOBUF_DEPRECATED ::\fBapollo::hdmap::ParkingSpace\fP * \fBrelease_parking_space\fP ()"
.br
.ti -1c
.RI "PROTOBUF_DEPRECATED ::\fBapollo::hdmap::ParkingSpace\fP * \fBmutable_parking_space\fP ()"
.br
.ti -1c
.RI "PROTOBUF_DEPRECATED void \fBset_allocated_parking_space\fP (::\fBapollo::hdmap::ParkingSpace\fP *parking_space)"
.br
.ti -1c
.RI "PROTOBUF_DEPRECATED void \fBunsafe_arena_set_allocated_parking_space\fP (::\fBapollo::hdmap::ParkingSpace\fP *parking_space)"
.br
.ti -1c
.RI "PROTOBUF_DEPRECATED ::\fBapollo::hdmap::ParkingSpace\fP * \fBunsafe_arena_release_parking_space\fP ()"
.br
.ti -1c
.RI "bool \fBhas_parking_info\fP () const"
.br
.ti -1c
.RI "void \fBclear_parking_info\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::routing::ParkingInfo\fP & \fBparking_info\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::routing::ParkingInfo\fP * \fBrelease_parking_info\fP ()"
.br
.ti -1c
.RI "::\fBapollo::routing::ParkingInfo\fP * \fBmutable_parking_info\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_parking_info\fP (::\fBapollo::routing::ParkingInfo\fP *parking_info)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_parking_info\fP (::\fBapollo::routing::ParkingInfo\fP *parking_info)"
.br
.ti -1c
.RI "::\fBapollo::routing::ParkingInfo\fP * \fBunsafe_arena_release_parking_info\fP ()"
.br
.ti -1c
.RI "bool \fBhas_dead_end_info\fP () const"
.br
.ti -1c
.RI "void \fBclear_dead_end_info\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::routing::DeadEndInfo\fP & \fBdead_end_info\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::routing::DeadEndInfo\fP * \fBrelease_dead_end_info\fP ()"
.br
.ti -1c
.RI "::\fBapollo::routing::DeadEndInfo\fP * \fBmutable_dead_end_info\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_dead_end_info\fP (::\fBapollo::routing::DeadEndInfo\fP *dead_end_info)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_dead_end_info\fP (::\fBapollo::routing::DeadEndInfo\fP *dead_end_info)"
.br
.ti -1c
.RI "::\fBapollo::routing::DeadEndInfo\fP * \fBunsafe_arena_release_dead_end_info\fP ()"
.br
.ti -1c
.RI "bool \fBhas_broadcast\fP () const"
.br
.ti -1c
.RI "void \fBclear_broadcast\fP ()"
.br
.ti -1c
.RI "bool \fBbroadcast\fP () const"
.br
.ti -1c
.RI "void \fBset_broadcast\fP (bool value)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBdescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBGetDescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Reflection * \fBGetReflection\fP ()"
.br
.ti -1c
.RI "static const \fBRoutingRequest\fP & \fBdefault_instance\fP ()"
.br
.ti -1c
.RI "static const \fBRoutingRequest\fP * \fBinternal_default_instance\fP ()"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr int \fBkIndexInFileMessages\fP"
.br
.ti -1c
.RI "static const ClassData \fB_class_data_\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBRoutingRequest\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena, bool is_message_owned=false)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fB::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata\fP"
.br
.ti -1c
.RI "template<typename T > class \fB::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper\fP"
.br
.ti -1c
.RI "struct \fB::TableStruct_modules_2fcommon_5fmsgs_2frouting_5fmsgs_2frouting_2eproto\fP"
.br
.ti -1c
.RI "void \fBswap\fP (\fBRoutingRequest\fP &a, \fBRoutingRequest\fP &b)"
.br
.in -1c
.SH "Member Data Documentation"
.PP 
.SS "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData apollo::routing::RoutingRequest::_class_data_\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RoutingRequest::MergeImpl
}
.fi
.SS "constexpr int apollo::routing::RoutingRequest::kIndexInFileMessages\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    4
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Cyber-Cmake from the source code\&.
