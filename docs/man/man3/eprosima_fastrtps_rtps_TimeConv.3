.TH "eprosima::fastrtps::rtps::TimeConv" 3 "Sun Sep 3 2023" "Version 8.0" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
eprosima::fastrtps::rtps::TimeConv
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "double \fBTime_t2SecondsDouble\fP (const \fBTime_t\fP &t)"
.br
.ti -1c
.RI "int64_t \fBTime_t2MicroSecondsInt64\fP (const \fBTime_t\fP &t)"
.br
.ti -1c
.RI "double \fBTime_t2MicroSecondsDouble\fP (const \fBTime_t\fP &t)"
.br
.ti -1c
.RI "int64_t \fBTime_t2MilliSecondsInt64\fP (const \fBTime_t\fP &t)"
.br
.ti -1c
.RI "double \fBTime_t2MilliSecondsDouble\fP (const \fBTime_t\fP &t)"
.br
.ti -1c
.RI "\fBTime_t\fP \fBMilliSeconds2Time_t\fP (double millisec)"
.br
.ti -1c
.RI "\fBTime_t\fP \fBMicroSeconds2Time_t\fP (double microsec)"
.br
.ti -1c
.RI "\fBTime_t\fP \fBSeconds2Time_t\fP (double seconds)"
.br
.ti -1c
.RI "double \fBTime_tAbsDiff2DoubleMillisec\fP (const \fBTime_t\fP &t1, const \fBTime_t\fP &t2)"
.br
.ti -1c
.RI "\fBTime_t\fP \fBMilliSecondsWithRandOffset2Time_t\fP (double millisec, double randoff)"
.br
.RI "Create a random \fBTime_t\fP that is millisec + [-randoff,randoff]\&. "
.ti -1c
.RI "\fBTime_t\fP \fBMicroSecondsWithRandOffset2Time_t\fP (double microsec, double randoff)"
.br
.RI "Create a random \fBTime_t\fP that is microsec + [-randoff,randoff]\&. "
.ti -1c
.RI "\fBTime_t\fP \fBSecondsWithRandOffset2Time_t\fP (double sec, double randoff)"
.br
.RI "Create a random \fBTime_t\fP that is sec + [-randoff,randoff]\&. "
.in -1c
.SH "Detailed Description"
.PP 
Auxiliary methods to convert to \fBTime_t\fP to more manageable types\&. 
.SH "Function Documentation"
.PP 
.SS "\fBTime_t\fP eprosima::fastrtps::rtps::TimeConv::MicroSeconds2Time_t (double microsec)\fC [inline]\fP"
Convert microseconds to \fBTime_t\fP 
.SS "\fBTime_t\fP eprosima::fastrtps::rtps::TimeConv::MilliSeconds2Time_t (double millisec)\fC [inline]\fP"
Convert milliseconds to \fBTime_t\fP 
.SS "\fBTime_t\fP eprosima::fastrtps::rtps::TimeConv::Seconds2Time_t (double seconds)\fC [inline]\fP"
Convert seconds to \fBTime_t\fP 
.SS "double eprosima::fastrtps::rtps::TimeConv::Time_t2MicroSecondsDouble (const \fBTime_t\fP & t)\fC [inline]\fP"
Convert \fBTime_t\fP to microseconds as a double 
.SS "int64_t eprosima::fastrtps::rtps::TimeConv::Time_t2MicroSecondsInt64 (const \fBTime_t\fP & t)\fC [inline]\fP"
Convert \fBTime_t\fP to seconds as an int64 
.SS "double eprosima::fastrtps::rtps::TimeConv::Time_t2MilliSecondsDouble (const \fBTime_t\fP & t)\fC [inline]\fP"
Convert \fBTime_t\fP to milliseconds as a double 
.SS "int64_t eprosima::fastrtps::rtps::TimeConv::Time_t2MilliSecondsInt64 (const \fBTime_t\fP & t)\fC [inline]\fP"
Convert \fBTime_t\fP to milliseconds as an int64 
.SS "double eprosima::fastrtps::rtps::TimeConv::Time_t2SecondsDouble (const \fBTime_t\fP & t)\fC [inline]\fP"
Convert \fBTime_t\fP to seconds as a double 
.SS "double eprosima::fastrtps::rtps::TimeConv::Time_tAbsDiff2DoubleMillisec (const \fBTime_t\fP & t1, const \fBTime_t\fP & t2)\fC [inline]\fP"
Get the absolute difference between two \fBTime_t\fP in milliseconds as double 
.SH "Author"
.PP 
Generated automatically by Doxygen for Cyber-Cmake from the source code\&.
