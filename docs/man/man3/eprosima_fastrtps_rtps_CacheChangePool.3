.TH "eprosima::fastrtps::rtps::CacheChangePool" 3 "Sun Sep 3 2023" "Version 8.0" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
eprosima::fastrtps::rtps::CacheChangePool
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <CacheChangePool\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCacheChangePool\fP (int32_t pool_size, uint32_t payload_size, int32_t max_pool_size, \fBMemoryManagementPolicy_t\fP memoryPolicy)"
.br
.ti -1c
.RI "bool \fBreserve_Cache\fP (\fBCacheChange_t\fP **chan, const std::function< uint32_t()> &calculateSizeFunc)"
.br
.RI "Reserves a CacheChange from the pool\&. "
.ti -1c
.RI "bool \fBreserve_Cache\fP (\fBCacheChange_t\fP **chan, uint32_t dataSize)"
.br
.RI "Reserves a CacheChange from the pool\&. "
.ti -1c
.RI "void \fBrelease_Cache\fP (\fBCacheChange_t\fP *)"
.br
.RI "Release a Cache back to the pool\&. "
.ti -1c
.RI "size_t \fBget_allCachesSize\fP ()"
.br
.RI "Get the size of the cache vector; all of them (reserved and not reserved)\&. "
.ti -1c
.RI "size_t \fBget_freeCachesSize\fP ()"
.br
.RI "Get the number of frre caches\&. "
.ti -1c
.RI "uint32_t \fBgetInitialPayloadSize\fP ()"
.br
.RI "Get the initial payload size associated with the Pool\&. "
.in -1c
.SH "Detailed Description"
.PP 
Class \fBCacheChangePool\fP, used by the HistoryCache to pre-reserve a number of \fBCacheChange_t\fP to avoid dynamically reserving memory in the middle of execution loops\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "eprosima::fastrtps::rtps::CacheChangePool::CacheChangePool (int32_t pool_size, uint32_t payload_size, int32_t max_pool_size, \fBMemoryManagementPolicy_t\fP memoryPolicy)"
Constructor\&. 
.PP
\fBParameters\fP
.RS 4
\fIpool_size\fP The initial pool size 
.br
\fIpayload_size\fP The initial payload size associated with the pool\&. 
.br
\fImax_pool_size\fP Maximum payload size\&. If set to 0 the pool will keep reserving until something breaks\&. 
.br
\fImemoryPolicy\fP Memory management policy\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "bool eprosima::fastrtps::rtps::CacheChangePool::reserve_Cache (\fBCacheChange_t\fP ** chan, const std::function< uint32_t()> & calculateSizeFunc)"

.PP
Reserves a CacheChange from the pool\&. 
.PP
\fBParameters\fP
.RS 4
\fIchan\fP Returned pointer to the reserved CacheChange\&. 
.br
\fIcalculateSizeFunc\fP Function that returns the size of the data which will go into the CacheChange\&. This function is executed depending on the memory management policy (DYNAMIC_RESERVE_MEMORY_MODE and PREALLOCATED_WITH_REALLOC_MEMORY_MODE) 
.RE
.PP
\fBReturns\fP
.RS 4
True whether the CacheChange could be allocated\&. In other case returns false\&. 
.RE
.PP

.SS "bool eprosima::fastrtps::rtps::CacheChangePool::reserve_Cache (\fBCacheChange_t\fP ** chan, uint32_t dataSize)"

.PP
Reserves a CacheChange from the pool\&. 
.PP
\fBParameters\fP
.RS 4
\fIchan\fP Returned pointer to the reserved CacheChange\&. 
.br
\fIdataSize\fP Size of the data which will go into the CacheChange if it is necessary (on memory management policy DYNAMIC_RESERVE_MEMORY_MODE and PREALLOCATED_WITH_REALLOC_MEMORY_MODE)\&. In other case this variable is not used\&. 
.RE
.PP
\fBReturns\fP
.RS 4
True whether the CacheChange could be allocated\&. In other case returns false\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Cyber-Cmake from the source code\&.
