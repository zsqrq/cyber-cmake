.TH "testing::internal::FloatingPoint< RawType >" 3 "Sun Sep 3 2023" "Version 8.0" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
testing::internal::FloatingPoint< RawType >
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef \fBTypeWithSize\fP< sizeof(RawType)>::UInt \fBBits\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBFloatingPoint\fP (const RawType &x)"
.br
.ti -1c
.RI "const Bits & \fBbits\fP () const"
.br
.ti -1c
.RI "Bits \fBexponent_bits\fP () const"
.br
.ti -1c
.RI "Bits \fBfraction_bits\fP () const"
.br
.ti -1c
.RI "Bits \fBsign_bit\fP () const"
.br
.ti -1c
.RI "bool \fBis_nan\fP () const"
.br
.ti -1c
.RI "bool \fBAlmostEquals\fP (const \fBFloatingPoint\fP &rhs) const"
.br
.ti -1c
.RI "float \fBMax\fP ()"
.br
.ti -1c
.RI "double \fBMax\fP ()"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static RawType \fBReinterpretBits\fP (const Bits bits)"
.br
.ti -1c
.RI "static RawType \fBInfinity\fP ()"
.br
.ti -1c
.RI "static RawType \fBMax\fP ()"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static const size_t \fBkBitCount\fP = 8*sizeof(RawType)"
.br
.ti -1c
.RI "static const size_t \fBkFractionBitCount\fP"
.br
.ti -1c
.RI "static const size_t \fBkExponentBitCount\fP = kBitCount \- 1 \- kFractionBitCount"
.br
.ti -1c
.RI "static const Bits \fBkSignBitMask\fP = static_cast<Bits>(1) << (kBitCount \- 1)"
.br
.ti -1c
.RI "static const Bits \fBkFractionBitMask\fP"
.br
.ti -1c
.RI "static const Bits \fBkExponentBitMask\fP = ~(kSignBitMask | kFractionBitMask)"
.br
.ti -1c
.RI "static const size_t \fBkMaxUlps\fP = 4"
.br
.in -1c
.SH "Member Data Documentation"
.PP 
.SS "template<typename RawType > const size_t \fBtesting::internal::FloatingPoint\fP< RawType >::kFractionBitCount\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
=
    std::numeric_limits<RawType>::digits - 1
.fi
.SS "template<typename RawType > const Bits \fBtesting::internal::FloatingPoint\fP< RawType >::kFractionBitMask\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
=
    ~static_cast<Bits>(0) >> (kExponentBitCount + 1)
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Cyber-Cmake from the source code\&.
