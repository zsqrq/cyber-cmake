.TH "apollo::control::MracDebug" 3 "Sun Sep 3 2023" "Version 8.0" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
apollo::control::MracDebug
.SH SYNOPSIS
.br
.PP
.PP
Inherits PROTOBUF_NAMESPACE_ID::Message\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fB_Internal\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum : int { \fBkMracReferenceStateFieldNumber\fP = 2, \fBkMracStateErrorFieldNumber\fP = 3, \fBkMracAdaptiveGainFieldNumber\fP = 4, \fBkMracModelOrderFieldNumber\fP = 1, \fBkMracReferenceSaturationStatusFieldNumber\fP = 5, \fBkMracControlSaturationStatusFieldNumber\fP = 6 }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "constexpr \fBMracDebug\fP (::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)"
.br
.ti -1c
.RI "\fBMracDebug\fP (const \fBMracDebug\fP &from)"
.br
.ti -1c
.RI "\fBMracDebug\fP (\fBMracDebug\fP &&from) noexcept"
.br
.ti -1c
.RI "\fBMracDebug\fP & \fBoperator=\fP (const \fBMracDebug\fP &from)"
.br
.ti -1c
.RI "\fBMracDebug\fP & \fBoperator=\fP (\fBMracDebug\fP &&from) noexcept"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet & \fBunknown_fields\fP () const"
.br
.ti -1c
.RI "inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet * \fBmutable_unknown_fields\fP ()"
.br
.ti -1c
.RI "void \fBSwap\fP (\fBMracDebug\fP *other)"
.br
.ti -1c
.RI "void \fBUnsafeArenaSwap\fP (\fBMracDebug\fP *other)"
.br
.ti -1c
.RI "\fBMracDebug\fP * \fBNew\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena=nullptr) const final"
.br
.ti -1c
.RI "void \fBCopyFrom\fP (const \fBMracDebug\fP &from)"
.br
.ti -1c
.RI "void \fBMergeFrom\fP (const \fBMracDebug\fP &from)"
.br
.ti -1c
.RI "PROTOBUF_ATTRIBUTE_REINITIALIZES void \fBClear\fP () final"
.br
.ti -1c
.RI "bool \fBIsInitialized\fP () const final"
.br
.ti -1c
.RI "size_t \fBByteSizeLong\fP () const final"
.br
.ti -1c
.RI "const char * \fB_InternalParse\fP (const char *ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext *ctx) final"
.br
.ti -1c
.RI "uint8_t * \fB_InternalSerialize\fP (uint8_t *target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream *stream) const final"
.br
.ti -1c
.RI "int \fBGetCachedSize\fP () const final"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData * \fBGetClassData\fP () const final"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::Metadata \fBGetMetadata\fP () const final"
.br
.ti -1c
.RI "int \fBmrac_reference_state_size\fP () const"
.br
.ti -1c
.RI "void \fBclear_mrac_reference_state\fP ()"
.br
.ti -1c
.RI "double \fBmrac_reference_state\fP (int index) const"
.br
.ti -1c
.RI "void \fBset_mrac_reference_state\fP (int index, double value)"
.br
.ti -1c
.RI "void \fBadd_mrac_reference_state\fP (double value)"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > & \fBmrac_reference_state\fP () const"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::RepeatedField< double > * \fBmutable_mrac_reference_state\fP ()"
.br
.ti -1c
.RI "int \fBmrac_state_error_size\fP () const"
.br
.ti -1c
.RI "void \fBclear_mrac_state_error\fP ()"
.br
.ti -1c
.RI "double \fBmrac_state_error\fP (int index) const"
.br
.ti -1c
.RI "void \fBset_mrac_state_error\fP (int index, double value)"
.br
.ti -1c
.RI "void \fBadd_mrac_state_error\fP (double value)"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > & \fBmrac_state_error\fP () const"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::RepeatedField< double > * \fBmutable_mrac_state_error\fP ()"
.br
.ti -1c
.RI "bool \fBhas_mrac_adaptive_gain\fP () const"
.br
.ti -1c
.RI "void \fBclear_mrac_adaptive_gain\fP ()"
.br
.ti -1c
.RI "const ::\fBapollo::control::MracAdaptiveGain\fP & \fBmrac_adaptive_gain\fP () const"
.br
.ti -1c
.RI "PROTOBUF_NODISCARD ::\fBapollo::control::MracAdaptiveGain\fP * \fBrelease_mrac_adaptive_gain\fP ()"
.br
.ti -1c
.RI "::\fBapollo::control::MracAdaptiveGain\fP * \fBmutable_mrac_adaptive_gain\fP ()"
.br
.ti -1c
.RI "void \fBset_allocated_mrac_adaptive_gain\fP (::\fBapollo::control::MracAdaptiveGain\fP *mrac_adaptive_gain)"
.br
.ti -1c
.RI "void \fBunsafe_arena_set_allocated_mrac_adaptive_gain\fP (::\fBapollo::control::MracAdaptiveGain\fP *mrac_adaptive_gain)"
.br
.ti -1c
.RI "::\fBapollo::control::MracAdaptiveGain\fP * \fBunsafe_arena_release_mrac_adaptive_gain\fP ()"
.br
.ti -1c
.RI "bool \fBhas_mrac_model_order\fP () const"
.br
.ti -1c
.RI "void \fBclear_mrac_model_order\fP ()"
.br
.ti -1c
.RI "int32_t \fBmrac_model_order\fP () const"
.br
.ti -1c
.RI "void \fBset_mrac_model_order\fP (int32_t value)"
.br
.ti -1c
.RI "bool \fBhas_mrac_reference_saturation_status\fP () const"
.br
.ti -1c
.RI "void \fBclear_mrac_reference_saturation_status\fP ()"
.br
.ti -1c
.RI "int32_t \fBmrac_reference_saturation_status\fP () const"
.br
.ti -1c
.RI "void \fBset_mrac_reference_saturation_status\fP (int32_t value)"
.br
.ti -1c
.RI "bool \fBhas_mrac_control_saturation_status\fP () const"
.br
.ti -1c
.RI "void \fBclear_mrac_control_saturation_status\fP ()"
.br
.ti -1c
.RI "int32_t \fBmrac_control_saturation_status\fP () const"
.br
.ti -1c
.RI "void \fBset_mrac_control_saturation_status\fP (int32_t value)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBdescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBGetDescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Reflection * \fBGetReflection\fP ()"
.br
.ti -1c
.RI "static const \fBMracDebug\fP & \fBdefault_instance\fP ()"
.br
.ti -1c
.RI "static const \fBMracDebug\fP * \fBinternal_default_instance\fP ()"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr int \fBkIndexInFileMessages\fP"
.br
.ti -1c
.RI "static const ClassData \fB_class_data_\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBMracDebug\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena, bool is_message_owned=false)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fB::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata\fP"
.br
.ti -1c
.RI "template<typename T > class \fB::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper\fP"
.br
.ti -1c
.RI "struct \fB::TableStruct_modules_2fcommon_5fmsgs_2fcontrol_5fmsgs_2fcontrol_5fcmd_2eproto\fP"
.br
.ti -1c
.RI "void \fBswap\fP (\fBMracDebug\fP &a, \fBMracDebug\fP &b)"
.br
.in -1c
.SH "Member Data Documentation"
.PP 
.SS "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData apollo::control::MracDebug::_class_data_\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MracDebug::MergeImpl
}
.fi
.SS "constexpr int apollo::control::MracDebug::kIndexInFileMessages\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    5
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Cyber-Cmake from the source code\&.
