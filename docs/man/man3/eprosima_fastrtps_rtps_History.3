.TH "eprosima::fastrtps::rtps::History" 3 "Sun Sep 3 2023" "Version 8.0" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
eprosima::fastrtps::rtps::History
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <History\&.h>\fP
.PP
Inherited by \fBeprosima::fastrtps::rtps::ReaderHistory\fP, and \fBeprosima::fastrtps::rtps::WriterHistory\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "RTPS_DllAPI bool \fBreserve_Cache\fP (\fBCacheChange_t\fP **change, const std::function< uint32_t()> &calculateSizeFunc)"
.br
.ti -1c
.RI "RTPS_DllAPI bool \fBreserve_Cache\fP (\fBCacheChange_t\fP **change, uint32_t dataSize)"
.br
.ti -1c
.RI "RTPS_DllAPI void \fBrelease_Cache\fP (\fBCacheChange_t\fP *ch)"
.br
.ti -1c
.RI "RTPS_DllAPI bool \fBisFull\fP ()"
.br
.ti -1c
.RI "RTPS_DllAPI size_t \fBgetHistorySize\fP ()"
.br
.ti -1c
.RI "RTPS_DllAPI bool \fBremove_all_changes\fP ()"
.br
.ti -1c
.RI "virtual void \fBupdateMaxMinSeqNum\fP ()=0"
.br
.ti -1c
.RI "virtual bool \fBremove_change\fP (\fBCacheChange_t\fP *ch)=0"
.br
.ti -1c
.RI "RTPS_DllAPI std::vector< \fBCacheChange_t\fP * >::iterator \fBchangesBegin\fP ()"
.br
.ti -1c
.RI "RTPS_DllAPI std::vector< \fBCacheChange_t\fP * >::iterator \fBchangesEnd\fP ()"
.br
.ti -1c
.RI "RTPS_DllAPI bool \fBget_min_change\fP (\fBCacheChange_t\fP **min_change)"
.br
.ti -1c
.RI "RTPS_DllAPI bool \fBget_max_change\fP (\fBCacheChange_t\fP **max_change)"
.br
.ti -1c
.RI "RTPS_DllAPI uint32_t \fBgetTypeMaxSerialized\fP ()"
.br
.ti -1c
.RI "RTPS_DllAPI std::recursive_mutex * \fBgetMutex\fP ()"
.br
.ti -1c
.RI "RTPS_DllAPI bool \fBget_change\fP (\fBSequenceNumber_t\fP &seq, \fBGUID_t\fP &guid, \fBCacheChange_t\fP **change)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBHistoryAttributes\fP \fBm_att\fP"
.br
.RI "Attributes of the \fBHistory\fP\&. "
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBHistory\fP (const \fBHistoryAttributes\fP &att)"
.br
.ti -1c
.RI "void \fBprint_changes_seqNum2\fP ()"
.br
.RI "Print the seqNum of the changes in the \fBHistory\fP (for debugging purposes)\&. "
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "std::vector< \fBCacheChange_t\fP * > \fBm_changes\fP"
.br
.RI "Vector of pointers to the \fBCacheChange_t\fP\&. "
.ti -1c
.RI "bool \fBm_isHistoryFull\fP"
.br
.RI "Variable to know if the history is full without needing to block the \fBHistory\fP mutex\&. "
.ti -1c
.RI "\fBCacheChange_t\fP * \fBmp_invalidCache\fP"
.br
.RI "Pointer to and invalid cacheChange used to return the maximum and minimum when no changes are stored in the history\&. "
.ti -1c
.RI "\fBCacheChangePool\fP \fBm_changePool\fP"
.br
.RI "Pool of cache changes reserved when the \fBHistory\fP is created\&. "
.ti -1c
.RI "\fBCacheChange_t\fP * \fBmp_minSeqCacheChange\fP"
.br
.RI "Pointer to the minimum sequeceNumber CacheChange\&. "
.ti -1c
.RI "\fBCacheChange_t\fP * \fBmp_maxSeqCacheChange\fP"
.br
.RI "Pointer to the maximum sequeceNumber CacheChange\&. "
.ti -1c
.RI "std::recursive_mutex * \fBmp_mutex\fP"
.br
.RI "Mutex for the \fBHistory\fP\&. "
.in -1c
.SH "Detailed Description"
.PP 
Class \fBHistory\fP, container of the different CacheChanges and the methods to access them\&. 
.SH "Member Function Documentation"
.PP 
.SS "RTPS_DllAPI std::vector<\fBCacheChange_t\fP*>::iterator eprosima::fastrtps::rtps::History::changesBegin ()\fC [inline]\fP"
Get the beginning of the changes history iterator\&. 
.PP
\fBReturns\fP
.RS 4
Iterator to the beginning of the vector\&. 
.RE
.PP

.SS "RTPS_DllAPI std::vector<\fBCacheChange_t\fP*>::iterator eprosima::fastrtps::rtps::History::changesEnd ()\fC [inline]\fP"
Get the end of the changes history iterator\&. 
.PP
\fBReturns\fP
.RS 4
Iterator to the end of the vector\&. 
.RE
.PP

.SS "RTPS_DllAPI bool eprosima::fastrtps::rtps::History::get_max_change (\fBCacheChange_t\fP ** max_change)"
Get the maximum \fBCacheChange_t\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fImax_change\fP Pointer to pointer to the maximum change\&. 
.RE
.PP
\fBReturns\fP
.RS 4
True if correct\&. 
.RE
.PP

.SS "RTPS_DllAPI bool eprosima::fastrtps::rtps::History::get_min_change (\fBCacheChange_t\fP ** min_change)"
Get the minimum \fBCacheChange_t\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fImin_change\fP Pointer to pointer to the minimum change\&. 
.RE
.PP
\fBReturns\fP
.RS 4
True if correct\&. 
.RE
.PP

.SS "RTPS_DllAPI size_t eprosima::fastrtps::rtps::History::getHistorySize ()\fC [inline]\fP"
Get the \fBHistory\fP size\&. 
.PP
\fBReturns\fP
.RS 4
Size of the history\&. 
.RE
.PP

.SS "RTPS_DllAPI std::recursive_mutex* eprosima::fastrtps::rtps::History::getMutex ()\fC [inline]\fP"
Get the mutex 
.PP
\fBReturns\fP
.RS 4
Mutex 
.RE
.PP

.SS "RTPS_DllAPI uint32_t eprosima::fastrtps::rtps::History::getTypeMaxSerialized ()\fC [inline]\fP"
Get the maximum serialized payload size 
.PP
\fBReturns\fP
.RS 4
Maximum serialized payload size 
.RE
.PP

.SS "RTPS_DllAPI bool eprosima::fastrtps::rtps::History::isFull ()\fC [inline]\fP"
Check if the history is full 
.PP
\fBReturns\fP
.RS 4
true if the \fBHistory\fP is full\&. 
.RE
.PP

.SS "RTPS_DllAPI void eprosima::fastrtps::rtps::History::release_Cache (\fBCacheChange_t\fP * ch)\fC [inline]\fP"
release a previously reserved \fBCacheChange_t\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fIch\fP Pointer to the \fBCacheChange_t\fP\&. 
.RE
.PP

.SS "RTPS_DllAPI bool eprosima::fastrtps::rtps::History::remove_all_changes ()"
Remove all changes from the \fBHistory\fP 
.PP
\fBReturns\fP
.RS 4
True if everything was correctly removed\&. 
.RE
.PP

.SS "virtual bool eprosima::fastrtps::rtps::History::remove_change (\fBCacheChange_t\fP * ch)\fC [pure virtual]\fP"
Remove a specific change from the history\&. 
.PP
\fBParameters\fP
.RS 4
\fIch\fP Pointer to the \fBCacheChange_t\fP\&. 
.RE
.PP
\fBReturns\fP
.RS 4
True if removed\&. 
.RE
.PP

.PP
Implemented in \fBeprosima::fastrtps::rtps::WriterHistory\fP, and \fBeprosima::fastrtps::rtps::ReaderHistory\fP\&.
.SS "RTPS_DllAPI bool eprosima::fastrtps::rtps::History::reserve_Cache (\fBCacheChange_t\fP ** change, const std::function< uint32_t()> & calculateSizeFunc)\fC [inline]\fP"
Reserve a \fBCacheChange_t\fP from the CacheChange pool\&. 
.PP
\fBParameters\fP
.RS 4
\fIchange\fP Pointer to pointer to the \fBCacheChange_t\fP to reserve 
.RE
.PP
\fBReturns\fP
.RS 4
True is reserved 
.RE
.PP

.SS "virtual void eprosima::fastrtps::rtps::History::updateMaxMinSeqNum ()\fC [pure virtual]\fP"
Update the maximum and minimum sequenceNumbers\&. 
.PP
Implemented in \fBeprosima::fastrtps::rtps::WriterHistory\fP, and \fBeprosima::fastrtps::rtps::ReaderHistory\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Cyber-Cmake from the source code\&.
