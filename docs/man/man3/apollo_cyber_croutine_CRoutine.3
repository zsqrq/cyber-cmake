.TH "apollo::cyber::croutine::CRoutine" 3 "Thu Aug 31 2023" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
apollo::cyber::croutine::CRoutine
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCRoutine\fP (const RoutineFunc &func)"
.br
.ti -1c
.RI "bool \fBAcquire\fP ()"
.br
.ti -1c
.RI "void \fBRelease\fP ()"
.br
.ti -1c
.RI "void \fBSetUpdateFlag\fP ()"
.br
.ti -1c
.RI "RoutineState \fBResume\fP ()"
.br
.ti -1c
.RI "RoutineState \fBUpdateState\fP ()"
.br
.ti -1c
.RI "\fBRoutineContext\fP * \fBGetContext\fP ()"
.br
.ti -1c
.RI "char ** \fBGetStack\fP ()"
.br
.ti -1c
.RI "void \fBRun\fP ()"
.br
.ti -1c
.RI "void \fBStop\fP ()"
.br
.ti -1c
.RI "void \fBWake\fP ()"
.br
.ti -1c
.RI "void \fBHangUp\fP ()"
.br
.ti -1c
.RI "void \fBSleep\fP (const Duration &sleep_duration)"
.br
.ti -1c
.RI "RoutineState \fBstate\fP () const"
.br
.ti -1c
.RI "void \fBset_state\fP (const RoutineState &state)"
.br
.ti -1c
.RI "uint64_t \fBid\fP () const"
.br
.ti -1c
.RI "void \fBset_id\fP (uint64_t id)"
.br
.ti -1c
.RI "const std::string & \fBname\fP () const"
.br
.ti -1c
.RI "void \fBset_name\fP (const std::string &name)"
.br
.ti -1c
.RI "int \fBprocessor_id\fP () const"
.br
.ti -1c
.RI "void \fBset_processor_id\fP (int processor_id)"
.br
.ti -1c
.RI "uint32_t \fBpriority\fP () const"
.br
.ti -1c
.RI "void \fBset_priority\fP (uint32_t priority)"
.br
.ti -1c
.RI "std::chrono::steady_clock::time_point \fBwake_time\fP () const"
.br
.ti -1c
.RI "void \fBset_group_name\fP (const std::string &group_name)"
.br
.ti -1c
.RI "const std::string & \fBgroup_name\fP ()"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static void \fBYield\fP ()"
.br
.ti -1c
.RI "static void \fBYield\fP (const RoutineState &state)"
.br
.ti -1c
.RI "static void \fBSetMainContext\fP (const std::shared_ptr< \fBRoutineContext\fP > &context)"
.br
.ti -1c
.RI "static \fBCRoutine\fP * \fBGetCurrentRoutine\fP ()"
.br
.ti -1c
.RI "static char ** \fBGetMainStack\fP ()"
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for Cyber-Cmake from the source code\&.
