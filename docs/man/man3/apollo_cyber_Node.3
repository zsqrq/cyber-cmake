.TH "apollo::cyber::Node" 3 "Sun Sep 3 2023" "Version 8.0" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
apollo::cyber::Node \- \fBNode\fP is the fundamental building block of Cyber RT\&. every module contains and communicates through the node\&. A module can have different types of communication by defining read/write and/or service/client in a node\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <node\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "const std::string & \fBName\fP () const"
.br
.RI "Get node's name\&. "
.ti -1c
.RI "template<typename MessageT > auto \fBCreateWriter\fP (const \fBproto::RoleAttributes\fP &role_attr) \-> std::shared_ptr< \fBWriter\fP< MessageT >>"
.br
.RI "Create a \fBWriter\fP with specific message type\&. "
.ti -1c
.RI "template<typename MessageT > auto \fBCreateWriter\fP (const std::string &channel_name) \-> std::shared_ptr< \fBWriter\fP< MessageT >>"
.br
.RI "Create a \fBWriter\fP with specific message type\&. "
.ti -1c
.RI "template<typename MessageT > auto \fBCreateReader\fP (const std::string &channel_name, const CallbackFunc< MessageT > &reader_func=nullptr) \-> std::shared_ptr< \fBcyber::Reader\fP< MessageT >>"
.br
.RI "Create a \fBReader\fP with specific message type with channel name qos and other configs used will be default\&. "
.ti -1c
.RI "template<typename MessageT > auto \fBCreateReader\fP (const \fBReaderConfig\fP &config, const CallbackFunc< MessageT > &reader_func=nullptr) \-> std::shared_ptr< \fBcyber::Reader\fP< MessageT >>"
.br
.RI "Create a \fBReader\fP with specific message type with reader config\&. "
.ti -1c
.RI "template<typename MessageT > auto \fBCreateReader\fP (const \fBproto::RoleAttributes\fP &role_attr, const CallbackFunc< MessageT > &reader_func=nullptr) \-> std::shared_ptr< \fBcyber::Reader\fP< MessageT >>"
.br
.RI "Create a \fBReader\fP object with \fCRoleAttributes\fP "
.ti -1c
.RI "template<typename Request , typename Response > auto \fBCreateService\fP (const std::string &service_name, const typename \fBService\fP< Request, Response >::ServiceCallback &service_callback) \-> std::shared_ptr< \fBService\fP< Request, Response >>"
.br
.RI "Create a \fBService\fP object with specific \fCservice_name\fP "
.ti -1c
.RI "template<typename Request , typename Response > auto \fBCreateClient\fP (const std::string &service_name) \-> std::shared_ptr< \fBClient\fP< Request, Response >>"
.br
.RI "Create a \fBClient\fP object to request \fBService\fP with \fCservice_name\fP "
.ti -1c
.RI "bool \fBDeleteReader\fP (const std::string &channel_name)"
.br
.ti -1c
.RI "bool \fBDeleteReader\fP (const \fBReaderConfig\fP &config)"
.br
.ti -1c
.RI "bool \fBDeleteReader\fP (const \fBproto::RoleAttributes\fP &role_attr)"
.br
.ti -1c
.RI "void \fBObserve\fP ()"
.br
.RI "Observe all readers' data\&. "
.ti -1c
.RI "void \fBClearData\fP ()"
.br
.RI "clear all readers' data "
.ti -1c
.RI "template<typename MessageT > auto \fBGetReader\fP (const std::string &channel_name) \-> std::shared_ptr< \fBReader\fP< MessageT >>"
.br
.RI "Get the \fBReader\fP object that subscribe \fCchannel_name\fP "
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "template<typename M0 , typename M1 , typename M2 , typename M3 > class \fBComponent\fP"
.br
.ti -1c
.RI "class \fBTimerComponent\fP"
.br
.ti -1c
.RI "bool \fBInit\fP (const char *)"
.br
.ti -1c
.RI "std::unique_ptr< \fBNode\fP > \fBCreateNode\fP (const std::string &, const std::string &)"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBNode\fP is the fundamental building block of Cyber RT\&. every module contains and communicates through the node\&. A module can have different types of communication by defining read/write and/or service/client in a node\&. 


.PP
\fBWarning\fP
.RS 4
Duplicate name is not allowed in topo objects, such as node, reader/writer, service/clinet in the topo\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "template<typename Request , typename Response > auto apollo::cyber::Node::CreateClient (const std::string & service_name) \-> std::shared_ptr<\fBClient\fP<Request, Response>>"

.PP
Create a \fBClient\fP object to request \fBService\fP with \fCservice_name\fP 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIRequest\fP \fBMessage\fP Type of the Request 
.br
\fIResponse\fP \fBMessage\fP Type of the Response 
.RE
.PP
\fBParameters\fP
.RS 4
\fIservice_name\fP specific service name to a \fBService\fP 
.RE
.PP
\fBReturns\fP
.RS 4
std::shared_ptr<Client<Request, Response>> result \fC\fBClient\fP\fP 
.RE
.PP

.SS "template<typename MessageT > auto apollo::cyber::Node::CreateReader (const \fBproto::RoleAttributes\fP & role_attr, const CallbackFunc< MessageT > & reader_func = \fCnullptr\fP) \-> std::shared_ptr<\fBcyber::Reader\fP<MessageT>>"

.PP
Create a \fBReader\fP object with \fCRoleAttributes\fP 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIMessageT\fP \fBMessage\fP Type 
.RE
.PP
\fBParameters\fP
.RS 4
\fIrole_attr\fP instance of \fCRoleAttributes\fP, includes channel name, qos, etc\&. 
.br
\fIreader_func\fP invoked when message receive 
.RE
.PP
\fBReturns\fP
.RS 4
std::shared_ptr<cyber::Reader<MessageT>> result \fBReader\fP Object 
.RE
.PP

.SS "template<typename MessageT > auto apollo::cyber::Node::CreateReader (const \fBReaderConfig\fP & config, const CallbackFunc< MessageT > & reader_func = \fCnullptr\fP) \-> std::shared_ptr<\fBcyber::Reader\fP<MessageT>>"

.PP
Create a \fBReader\fP with specific message type with reader config\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIMessageT\fP \fBMessage\fP Type 
.RE
.PP
\fBParameters\fP
.RS 4
\fIconfig\fP instance of \fC\fBReaderConfig\fP\fP, include channel name, qos and pending queue size 
.br
\fIreader_func\fP invoked when message receive 
.RE
.PP
\fBReturns\fP
.RS 4
std::shared_ptr<cyber::Reader<MessageT>> result \fBReader\fP Object 
.RE
.PP

.SS "template<typename MessageT > auto apollo::cyber::Node::CreateReader (const std::string & channel_name, const CallbackFunc< MessageT > & reader_func = \fCnullptr\fP) \-> std::shared_ptr<\fBcyber::Reader\fP<MessageT>>"

.PP
Create a \fBReader\fP with specific message type with channel name qos and other configs used will be default\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIMessageT\fP \fBMessage\fP Type 
.RE
.PP
\fBParameters\fP
.RS 4
\fIchannel_name\fP the channel of the reader subscribed\&. 
.br
\fIreader_func\fP invoked when message receive invoked when the message is received\&. 
.RE
.PP
\fBReturns\fP
.RS 4
std::shared_ptr<cyber::Reader<MessageT>> result \fBReader\fP Object 
.RE
.PP

.SS "template<typename Request , typename Response > auto apollo::cyber::Node::CreateService (const std::string & service_name, const typename \fBService\fP< Request, Response >::ServiceCallback & service_callback) \-> std::shared_ptr<\fBService\fP<Request, Response>>"

.PP
Create a \fBService\fP object with specific \fCservice_name\fP 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIRequest\fP \fBMessage\fP Type of the Request 
.br
\fIResponse\fP \fBMessage\fP Type of the Response 
.RE
.PP
\fBParameters\fP
.RS 4
\fIservice_name\fP specific service name to a serve 
.br
\fIservice_callback\fP invoked when a service is called 
.RE
.PP
\fBReturns\fP
.RS 4
std::shared_ptr<Service<Request, Response>> result \fC\fBService\fP\fP 
.RE
.PP

.SS "template<typename MessageT > auto apollo::cyber::Node::CreateWriter (const \fBproto::RoleAttributes\fP & role_attr) \-> std::shared_ptr<\fBWriter\fP<MessageT>>"

.PP
Create a \fBWriter\fP with specific message type\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIMessageT\fP \fBMessage\fP Type 
.RE
.PP
\fBParameters\fP
.RS 4
\fIrole_attr\fP is a protobuf message RoleAttributes, which includes the channel name and other info\&. 
.RE
.PP
\fBReturns\fP
.RS 4
std::shared_ptr<\fBWriter<MessageT>\fP> result \fBWriter\fP Object 
.RE
.PP

.SS "template<typename MessageT > auto apollo::cyber::Node::CreateWriter (const std::string & channel_name) \-> std::shared_ptr<\fBWriter\fP<MessageT>>"

.PP
Create a \fBWriter\fP with specific message type\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIMessageT\fP \fBMessage\fP Type 
.RE
.PP
\fBParameters\fP
.RS 4
\fIchannel_name\fP the channel name to be published\&. 
.RE
.PP
\fBReturns\fP
.RS 4
std::shared_ptr<\fBWriter<MessageT>\fP> result \fBWriter\fP Object 
.RE
.PP

.SS "template<typename MessageT > auto apollo::cyber::Node::GetReader (const std::string & channel_name) \-> std::shared_ptr<\fBReader\fP<MessageT>>"

.PP
Get the \fBReader\fP object that subscribe \fCchannel_name\fP 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIMessageT\fP \fBMessage\fP Type 
.RE
.PP
\fBParameters\fP
.RS 4
\fIchannel_name\fP channel name 
.RE
.PP
\fBReturns\fP
.RS 4
std::shared_ptr<Reader<MessageT>> result reader 
.RE
.PP

.SS "const std::string & apollo::cyber::Node::Name () const"

.PP
Get node's name\&. 
.PP
\fBWarning\fP
.RS 4
duplicate node name is not allowed in the topo\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Cyber-Cmake from the source code\&.
