.TH "apollo::cyber::proto::Header" 3 "Sun Sep 3 2023" "Version 8.0" "Cyber-Cmake" \" -*- nroff -*-
.ad l
.nh
.SH NAME
apollo::cyber::proto::Header
.SH SYNOPSIS
.br
.PP
.PP
Inherits PROTOBUF_NAMESPACE_ID::Message\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fB_Internal\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum : int { \fBkMajorVersionFieldNumber\fP = 1, \fBkMinorVersionFieldNumber\fP = 2, \fBkChunkIntervalFieldNumber\fP = 4, \fBkSegmentIntervalFieldNumber\fP = 5, \fBkIndexPositionFieldNumber\fP = 6, \fBkChunkNumberFieldNumber\fP = 7, \fBkChannelNumberFieldNumber\fP = 8, \fBkCompressFieldNumber\fP = 3, \fBkIsCompleteFieldNumber\fP = 13, \fBkBeginTimeFieldNumber\fP = 9, \fBkEndTimeFieldNumber\fP = 10, \fBkMessageNumberFieldNumber\fP = 11, \fBkSizeFieldNumber\fP = 12, \fBkChunkRawSizeFieldNumber\fP = 14, \fBkSegmentRawSizeFieldNumber\fP = 15 }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "constexpr \fBHeader\fP (::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)"
.br
.ti -1c
.RI "\fBHeader\fP (const \fBHeader\fP &from)"
.br
.ti -1c
.RI "\fBHeader\fP (\fBHeader\fP &&from) noexcept"
.br
.ti -1c
.RI "\fBHeader\fP & \fBoperator=\fP (const \fBHeader\fP &from)"
.br
.ti -1c
.RI "\fBHeader\fP & \fBoperator=\fP (\fBHeader\fP &&from) noexcept"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet & \fBunknown_fields\fP () const"
.br
.ti -1c
.RI "inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet * \fBmutable_unknown_fields\fP ()"
.br
.ti -1c
.RI "void \fBSwap\fP (\fBHeader\fP *other)"
.br
.ti -1c
.RI "void \fBUnsafeArenaSwap\fP (\fBHeader\fP *other)"
.br
.ti -1c
.RI "\fBHeader\fP * \fBNew\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena=nullptr) const final"
.br
.ti -1c
.RI "void \fBCopyFrom\fP (const \fBHeader\fP &from)"
.br
.ti -1c
.RI "void \fBMergeFrom\fP (const \fBHeader\fP &from)"
.br
.ti -1c
.RI "PROTOBUF_ATTRIBUTE_REINITIALIZES void \fBClear\fP () final"
.br
.ti -1c
.RI "bool \fBIsInitialized\fP () const final"
.br
.ti -1c
.RI "size_t \fBByteSizeLong\fP () const final"
.br
.ti -1c
.RI "const char * \fB_InternalParse\fP (const char *ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext *ctx) final"
.br
.ti -1c
.RI "uint8_t * \fB_InternalSerialize\fP (uint8_t *target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream *stream) const final"
.br
.ti -1c
.RI "int \fBGetCachedSize\fP () const final"
.br
.ti -1c
.RI "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData * \fBGetClassData\fP () const final"
.br
.ti -1c
.RI "::PROTOBUF_NAMESPACE_ID::Metadata \fBGetMetadata\fP () const final"
.br
.ti -1c
.RI "bool \fBhas_major_version\fP () const"
.br
.ti -1c
.RI "void \fBclear_major_version\fP ()"
.br
.ti -1c
.RI "uint32_t \fBmajor_version\fP () const"
.br
.ti -1c
.RI "void \fBset_major_version\fP (uint32_t value)"
.br
.ti -1c
.RI "bool \fBhas_minor_version\fP () const"
.br
.ti -1c
.RI "void \fBclear_minor_version\fP ()"
.br
.ti -1c
.RI "uint32_t \fBminor_version\fP () const"
.br
.ti -1c
.RI "void \fBset_minor_version\fP (uint32_t value)"
.br
.ti -1c
.RI "bool \fBhas_chunk_interval\fP () const"
.br
.ti -1c
.RI "void \fBclear_chunk_interval\fP ()"
.br
.ti -1c
.RI "uint64_t \fBchunk_interval\fP () const"
.br
.ti -1c
.RI "void \fBset_chunk_interval\fP (uint64_t value)"
.br
.ti -1c
.RI "bool \fBhas_segment_interval\fP () const"
.br
.ti -1c
.RI "void \fBclear_segment_interval\fP ()"
.br
.ti -1c
.RI "uint64_t \fBsegment_interval\fP () const"
.br
.ti -1c
.RI "void \fBset_segment_interval\fP (uint64_t value)"
.br
.ti -1c
.RI "bool \fBhas_index_position\fP () const"
.br
.ti -1c
.RI "void \fBclear_index_position\fP ()"
.br
.ti -1c
.RI "uint64_t \fBindex_position\fP () const"
.br
.ti -1c
.RI "void \fBset_index_position\fP (uint64_t value)"
.br
.ti -1c
.RI "bool \fBhas_chunk_number\fP () const"
.br
.ti -1c
.RI "void \fBclear_chunk_number\fP ()"
.br
.ti -1c
.RI "uint64_t \fBchunk_number\fP () const"
.br
.ti -1c
.RI "void \fBset_chunk_number\fP (uint64_t value)"
.br
.ti -1c
.RI "bool \fBhas_channel_number\fP () const"
.br
.ti -1c
.RI "void \fBclear_channel_number\fP ()"
.br
.ti -1c
.RI "uint64_t \fBchannel_number\fP () const"
.br
.ti -1c
.RI "void \fBset_channel_number\fP (uint64_t value)"
.br
.ti -1c
.RI "bool \fBhas_compress\fP () const"
.br
.ti -1c
.RI "void \fBclear_compress\fP ()"
.br
.ti -1c
.RI "::apollo::cyber::proto::CompressType \fBcompress\fP () const"
.br
.ti -1c
.RI "void \fBset_compress\fP (::apollo::cyber::proto::CompressType value)"
.br
.ti -1c
.RI "bool \fBhas_is_complete\fP () const"
.br
.ti -1c
.RI "void \fBclear_is_complete\fP ()"
.br
.ti -1c
.RI "bool \fBis_complete\fP () const"
.br
.ti -1c
.RI "void \fBset_is_complete\fP (bool value)"
.br
.ti -1c
.RI "bool \fBhas_begin_time\fP () const"
.br
.ti -1c
.RI "void \fBclear_begin_time\fP ()"
.br
.ti -1c
.RI "uint64_t \fBbegin_time\fP () const"
.br
.ti -1c
.RI "void \fBset_begin_time\fP (uint64_t value)"
.br
.ti -1c
.RI "bool \fBhas_end_time\fP () const"
.br
.ti -1c
.RI "void \fBclear_end_time\fP ()"
.br
.ti -1c
.RI "uint64_t \fBend_time\fP () const"
.br
.ti -1c
.RI "void \fBset_end_time\fP (uint64_t value)"
.br
.ti -1c
.RI "bool \fBhas_message_number\fP () const"
.br
.ti -1c
.RI "void \fBclear_message_number\fP ()"
.br
.ti -1c
.RI "uint64_t \fBmessage_number\fP () const"
.br
.ti -1c
.RI "void \fBset_message_number\fP (uint64_t value)"
.br
.ti -1c
.RI "bool \fBhas_size\fP () const"
.br
.ti -1c
.RI "void \fBclear_size\fP ()"
.br
.ti -1c
.RI "uint64_t \fBsize\fP () const"
.br
.ti -1c
.RI "void \fBset_size\fP (uint64_t value)"
.br
.ti -1c
.RI "bool \fBhas_chunk_raw_size\fP () const"
.br
.ti -1c
.RI "void \fBclear_chunk_raw_size\fP ()"
.br
.ti -1c
.RI "uint64_t \fBchunk_raw_size\fP () const"
.br
.ti -1c
.RI "void \fBset_chunk_raw_size\fP (uint64_t value)"
.br
.ti -1c
.RI "bool \fBhas_segment_raw_size\fP () const"
.br
.ti -1c
.RI "void \fBclear_segment_raw_size\fP ()"
.br
.ti -1c
.RI "uint64_t \fBsegment_raw_size\fP () const"
.br
.ti -1c
.RI "void \fBset_segment_raw_size\fP (uint64_t value)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBdescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Descriptor * \fBGetDescriptor\fP ()"
.br
.ti -1c
.RI "static const ::PROTOBUF_NAMESPACE_ID::Reflection * \fBGetReflection\fP ()"
.br
.ti -1c
.RI "static const \fBHeader\fP & \fBdefault_instance\fP ()"
.br
.ti -1c
.RI "static const \fBHeader\fP * \fBinternal_default_instance\fP ()"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr int \fBkIndexInFileMessages\fP"
.br
.ti -1c
.RI "static const ClassData \fB_class_data_\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBHeader\fP (::PROTOBUF_NAMESPACE_ID::Arena *arena, bool is_message_owned=false)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fB::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata\fP"
.br
.ti -1c
.RI "template<typename T > class \fB::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper\fP"
.br
.ti -1c
.RI "struct \fB::TableStruct_cyber_2fproto_2frecord_2eproto\fP"
.br
.ti -1c
.RI "void \fBswap\fP (\fBHeader\fP &a, \fBHeader\fP &b)"
.br
.in -1c
.SH "Member Data Documentation"
.PP 
.SS "const ::PROTOBUF_NAMESPACE_ID::Message::ClassData apollo::cyber::proto::Header::_class_data_\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Header::MergeImpl
}
.fi
.SS "constexpr int apollo::cyber::proto::Header::kIndexInFileMessages\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
    5
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Cyber-Cmake from the source code\&.
